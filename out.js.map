{
  "version": 3,
  "sources": ["src/font/bravura.ts", "src/geometry.ts", "src/notation/constants.ts", "src/score-preferences.ts", "src/style/style.ts", "src/paint.ts", "src/notation/types.ts", "src/input-modes.ts", "src/score-states.ts", "src/score-renderer.ts", "src/pitch.ts", "src/score-updater.ts", "src/callbacks/bar-input.ts", "src/callbacks/canvas.ts", "src/callbacks/change-accidental.ts", "src/notation/notation.ts", "src/callbacks/change-beam.ts", "src/callbacks/change-note-rest.ts", "src/callbacks/change-tie.ts", "src/callbacks/move-caret.ts", "src/lib/default-map.ts", "src/canvas.ts", "src/callbacks/note-input.ts", "src/pointer-event/pointer-event.ts", "src/pointer-event/pointer-handlers.ts", "src/pointer-event/register-pointer-handlers.ts", "src/index.ts"],
  "sourcesContent": ["/**\n * Bravura specific geometries\n * @see https://raw.githubusercontent.com/steinbergmedia/bravura/master/redist/bravura_metadata.json\n */\nexport const bStaffHeight = 1000; // \u4E94\u7DDA\u306E\u9AD8\u3055, bravura\u306Eunits-per-em\nexport const UNIT = bStaffHeight / 4; // \u4E94\u7DDA1\u9593\u306E\u9AD8\u3055\nexport const bStaffLineWidth = 32.5; // 1000 / 4 * 0.13\nexport const bLedgerLineThickness = 40; // 1000 / 4 * 0.16\nexport const bStemWidth = 30; // 1000 / 4 * 0.12\nexport const WIDTH_NOTE_HEAD_BLACK = 295; // 1000 / 4 * 1.18\nexport const WIDTH_NOTE_HEAD_WHOLE = 422; // 1000 / 4 * 1.688\nexport const EXTENSION_LEDGER_LINE = 0.2;\nexport const bBarlineSeparation = 0.4;\nexport const bThinBarlineThickness = 0.16;\nexport const bThickBarlineThickness = 0.5;\nexport const bRepeatBarlineDotSeparation = 0.16; // the edge of the dots to the edge of the barline\nexport const repeatDotRadius = UNIT / 4; // \u9069\u5F53\nexport const bBeamThickness = 0.5;\nexport const bBeamSpacing = 0.25;\n\n// 1 = UNIT\ntype Point = {\n  x: number;\n  y: number;\n};\ntype BBox = {\n  ne: Point; // \u53F3\u4E0A\n  sw: Point; // \u5DE6\u4E0B\n};\nexport type Path = {\n  path2d: Path2D;\n  bbox: BBox; // \u5DE6\u4E0B\u539F\u70B9\u306A\u306E\u3067\u6CE8\u610F\n};\n\n/**\n * Clefs\n * @see https://w3c.github.io/smufl/latest/tables/clefs.html\n */\n// E050\nexport const bClefG: Path = {\n  path2d: new Path2D(\n    \"M364,-252c-245,0 -364,165 -364,339c0,202 153,345 297,464c12,10 11,12 9,24c-7,41 -14,106 -14,164c0,104 24,229 98,311c20,22 51,48 65,48c11,0 37,-28 52,-50c41,-60 65,-146 65,-233c0,-153 -82,-280 -190,-381c-6,-6 -8,-7 -6,-19l25,-145c3,-18 3,-18 29,-18c147,0 241,-113 241,-241c0,-113 -67,-198 -168,-238c-14,-6 -15,-5 -13,-17c11,-62 29,-157 29,-214c0,-170 -130,-200 -197,-200c-151,0 -190,98 -190,163c0,62 40,115 107,115c61,0 96,-47 96,-102c0,-58 -36,-85 -67,-94c-23,-7 -32,-10 -32,-17c0,-13 26,-29 80,-29c59,0 159,18 159,166c0,47 -15,134 -27,201c-2,12 -4,11 -15,9c-20,-4 -46,-6 -69,-6zM80,20c0,-139 113,-236 288,-236c20,0 40,2 56,5c15,3 16,3 14,14l-50,298c-2,11 -4,12 -20,8c-61,-17 -100,-60 -100,-117c0,-46 30,-89 72,-107c7,-3 15,-6 15,-13c0,-6 -4,-11 -12,-11c-7,0 -19,3 -27,6c-68,23 -115,87 -115,177c0,85 57,164 145,194c18,6 18,5 15,24l-21,128c-2,11 -4,12 -14,4c-47,-38 -93,-75 -153,-142c-83,-94 -93,-173 -93,-232zM470,943c-61,0 -133,-96 -133,-252c0,-32 2,-66 6,-92c2,-13 6,-14 13,-8c79,69 174,159 174,270c0,55 -27,82 -60,82zM441,117c-12,1 -13,-2 -11,-14l49,-285c2,-12 4,-12 16,-6c56,28 94,79 94,142c0,88 -67,156 -148,163z\"\n  ),\n  bbox: { ne: { x: 2.684, y: 4.392 }, sw: { x: 0, y: -2.632 } },\n};\n\n/**\n * Noteheads\n * @see https://w3c.github.io/smufl/latest/tables/noteheads.html\n */\n// E0A2\nexport const bNoteHeadWhole: Path = {\n  path2d: new Path2D(\n    \"M216 125c93 0 206 -52 206 -123c0 -70 -52 -127 -216 -127c-149 0 -206 60 -206 127c0 68 83 123 216 123zM111 63c-2 -8 -3 -16 -3 -24c0 -32 15 -66 35 -89c21 -28 58 -52 94 -52c10 0 21 1 31 4c33 8 46 36 46 67c0 60 -55 134 -124 134c-31 0 -68 -5 -79 -40z\"\n  ),\n  bbox: {\n    ne: { x: 1.688, y: 0.5 },\n    sw: { x: 0, y: -0.5 },\n  },\n};\n// E0A3\nexport const bNoteHeadHalf: Path = {\n  path2d: new Path2D(\n    \"M97 -125c-55 0 -97 30 -97 83c0 52 47 167 196 167c58 0 99 -32 99 -83c0 -33 -33 -167 -198 -167zM75 -87c48 0 189 88 189 131c0 7 -3 13 -6 19c-7 12 -18 21 -37 21c-47 0 -192 -79 -192 -128c0 -7 3 -14 6 -20c7 -12 19 -23 40 -23z\"\n  ),\n  bbox: { ne: { x: 1.18, y: 0.5 }, sw: { x: 0, y: -0.5 } },\n};\n// E0A4\nexport const bNoteHead: Path = {\n  path2d: new Path2D(\n    \"M0 -42c0 86 88 167 198 167c57 0 97 -32 97 -83c0 -85 -109 -167 -198 -167c-54 0 -97 31 -97 83z\"\n  ),\n  bbox: { ne: { x: 1.18, y: 0.5 }, sw: { x: 0, y: -0.5 } },\n};\n\n/**\n * Flags\n * @see https://w3c.github.io/smufl/latest/tables/flags.html\n */\nexport type FlagUp = Path & {\n  stemUpNW: Point;\n};\nexport type FlagDown = Path & {\n  stemDownSW: Point;\n};\nexport type RestPath = Path & {\n  originUnits: number; // \u7B2C\u4E94\u7DDA\u3068path\u539F\u70B9\u306E\u8DDD\u96E2 1 = UNIT\n};\n// E240\nexport const bFlag8Up: FlagUp = {\n  path2d: new Path2D(\n    \"M238 -790c-5 -17 -22 -23 -28 -19s-16 13 -16 29c0 4 1 9 3 15c17 45 24 92 24 137c0 59 -9 116 -24 150c-36 85 -131 221 -197 233v239c0 12 8 15 19 15c10 0 18 -6 21 -22c16 -96 58 -182 109 -261c63 -100 115 -218 115 -343c0 -78 -26 -173 -26 -173z\"\n  ),\n  stemUpNW: { x: 0, y: -0.04 },\n  bbox: {\n    ne: { x: 1.056, y: 0.03521239682756091 },\n    sw: { x: 0, y: -3.240768470618394 },\n  },\n};\n// E241\nexport const bFlag8Down: FlagDown = {\n  path2d: new Path2D(\n    \"M240 760c-10 29 7 48 22 48c7 0 13 -4 16 -15c8 -32 28 -103 28 -181c0 -125 -61 -244 -124 -343c-51 -79 -125 -166 -142 -261c-2 -16 -15 -22 -24 -22c-8 0 -16 5 -16 15v235c134 45 184 126 221 210c15 34 40 118 40 177c0 45 -7 95 -21 137z\"\n  ),\n  stemDownSW: { x: 0, y: 0.132 },\n  bbox: { ne: { x: 1.224, y: 3.232896633157715 }, sw: { x: 0, y: -0.0575672 } },\n};\n// E242\nexport const bFlag16Up: FlagUp = {\n  path2d: new Path2D(\n    \"M272 -796c-6 -13 -13 -17 -20 -17c-14 0 -22 13 -22 26c0 3 0 5 1 9c5 30 8 60 8 89c0 52 -9 101 -32 149c-69 140 -140 142 -202 144h-5v388c0 7 11 10 17 10s18 -2 20 -13c17 -106 73 -122 127 -180c72 -78 98 -106 108 -174c2 -12 3 -23 3 -36 c0 -61 -22 -121 -25 -127c-1 -3 -1 -5 -1 -7c0 -4 1 -6 1 -9c18 -37 29 -78 29 -120v-22c0 -48 -3 -105 -7 -110zM209 -459c2 -3 4 -4 7 -4c5 0 12 3 13 6c5 8 5 18 7 26c1 7 1 13 1 20c0 32 -9 63 -27 89c-33 49 -87 105 -148 105h-8c-8 0 -14 -6 -14 -10c0 -1 0 -2 1 -3 c21 -82 67 -106 114 -160c21 -24 38 -44 54 -69z\"\n  ),\n  stemUpNW: { x: 0, y: -0.088 },\n  bbox: { ne: { x: 1.116, y: 0.008 }, sw: { x: 0, y: -3.252 } },\n};\n// E243\nexport const bFlag16Down: FlagDown = {\n  path2d: new Path2D(\n    \"M240 786c-3 17 5 25 17 26c12 0 19 1 24 -22c16 -80 15 -178 -21 -253c0 -3 -1 -5 -1 -9c0 -3 0 -5 1 -7c3 -6 25 -66 25 -127c0 -13 -1 -25 -3 -36c-24 -157 -221 -200 -245 -354c-2 -11 -13 -13 -20 -13c-10 0 -17 5 -17 10v387h5c62 2 143 5 212 145 c38 78 38 169 23 253zM226 456c-3 0 -5 -1 -7 -4c-16 -26 -33 -46 -54 -69c-47 -55 -103 -78 -124 -160c-1 -1 -1 -2 -1 -3c0 -5 6 -10 14 -10h8c61 0 125 56 158 105c18 26 27 56 27 89c0 6 0 13 -1 20c-2 8 -2 18 -7 25c-1 4 -8 7 -13 7z\"\n  ),\n  stemDownSW: { x: 0, y: 0.128 },\n  bbox: {\n    ne: { x: 1.1635806326044895, y: 3.2480256 },\n    sw: { x: -0.000019418183745617774, y: -0.03601094374150052 },\n  },\n};\n// E244\nexport const bFlag32Up: FlagUp = {\n  path2d: new Path2D(\n    \"M260 -673c0 -9 1 -18 1 -28c0 -43 -4 -89 -7 -95c-7 -11 -14 -16 -20 -16c-2 0 -4 1 -6 2c-7 3 -13 12 -13 24c0 2 1 4 1 7c5 29 8 57 8 85c0 48 -9 93 -31 137c-64 130 -130 132 -188 134h-5v560c0 7 8 12 14 12c10 0 17 -10 18 -19c17 -100 71 -116 121 -170 c67 -73 90 -100 101 -161c2 -9 2 -18 2 -28c0 -39 -11 -80 -20 -106c14 -29 21 -61 21 -93c0 -57 -21 -112 -23 -119c-1 -2 -1 -4 -1 -6c0 -3 0 -5 1 -7c15 -36 24 -74 26 -113zM208 -181c-55 93 -114 117 -169 117c16 -97 65 -114 114 -168c23 -25 41 -44 55 -62 c5 17 10 34 12 44c1 7 3 13 3 21c0 13 -4 28 -15 48zM219 -456c1 8 2 16 2 24c0 81 -90 177 -170 177c-9 0 -14 -9 -12 -16c22 -73 63 -95 106 -146l5 -5c17 -20 31 -37 46 -59c1 -3 4 -4 7 -4c5 0 10 3 11 6c3 7 3 15 5 23z\"\n  ),\n  stemUpNW: { x: 0, y: 0.376 },\n  bbox: { ne: { x: 1.044, y: 0.596 }, sw: { x: 0, y: -3.248 } },\n};\n// E245\nexport const bFlag32Down: FlagDown = {\n  path2d: new Path2D(\n    \"M273 676v-11c-4 -64 -9 -75 -22 -100l-4 -7c-2 -3 -3 -5 -3 -9l3 -5v-2c4 -10 20 -53 20 -105c0 -34 -7 -72 -23 -101c9 -27 22 -71 22 -114c0 -10 0 -20 -2 -29c-11 -64 -35 -92 -105 -168c-52 -57 -109 -73 -126 -177c-1 -9 -9 -20 -19 -20c-8 0 -14 4 -14 13v589 c61 2 125 4 201 140c23 41 31 70 31 98c0 34 -12 65 -20 110c0 3 -1 5 -1 7c0 13 7 23 14 26c2 1 4 1 6 1c35 0 42 -116 42 -136zM39 268c0 -5 4 -13 13 -13h5c81 0 173 103 173 185c0 8 -1 17 -2 25c-2 8 -2 16 -5 23c-1 3 -7 6 -12 6c-3 0 -6 -1 -8 -4 c-16 -25 -32 -44 -52 -67c-45 -53 -91 -75 -112 -155zM229 243c-3 11 -8 32 -14 51c-14 -18 -32 -38 -56 -64c-52 -57 -103 -73 -120 -177c0 -1 0 -2 2 -3c57 0 118 26 175 122c12 21 16 37 16 50c0 8 -2 14 -3 21z\"\n  ),\n  stemDownSW: { x: 0, y: -0.448 },\n  bbox: { ne: { x: 1.092, y: 3.248 }, sw: { x: 0, y: -0.687477099907407 } },\n};\n// E4E3\nexport const bRest1: RestPath = {\n  path2d: new Path2D(\n    \"M282 -109c0 -14 -12 -26 -26 -26h-230c-15 0 -26 12 -26 26v92c0 15 11 26 26 26h230c14 0 26 -11 26 -26v-92z\"\n  ),\n  originUnits: 1,\n  bbox: { ne: { x: 1.128, y: 0.036 }, sw: { x: 0, y: -0.54 } },\n};\n// E4E4\nexport const bRest2: RestPath = {\n  path2d: new Path2D(\n    \"M282 24c0 -14 -12 -26 -26 -26h-230c-15 0 -26 12 -26 26v92c0 15 11 26 26 26h230c14 0 26 -11 26 -26v-92z\"\n  ),\n  originUnits: 2,\n  bbox: { ne: { x: 1.128, y: 0.568 }, sw: { x: 0, y: -0.008 } },\n};\n// E4E5\nexport const bRest4: RestPath = {\n  path2d: new Path2D(\n    \"M78 -38l-49 60s-10 10 -10 24c0 8 4 19 14 29c45 47 60 90 60 127c0 72 -57 123 -61 134c-3 6 -4 11 -4 16c0 14 10 21 20 21c6 0 13 -3 18 -8c17 -17 165 -193 165 -193s4 -9 4 -19c0 -5 -1 -10 -4 -15c-26 -41 -62 -89 -66 -147v-3l-1 -7v-3c0 -56 31 -93 69 -139 c11 -12 37 -45 37 -57c0 -3 -2 -4 -5 -4c-2 0 -4 0 -8 1l-1 1c-17 6 -50 17 -79 17c-42 0 -63 -32 -63 -73c0 -9 1 -18 4 -26c2 -9 13 -36 26 -36c8 -7 16 -15 16 -24c0 -2 -1 -4 -2 -7c-1 -4 -8 -6 -15 -6c-8 0 -18 3 -26 9c-73 56 -116 105 -116 155c0 49 34 96 86 96 l8 -3h4c4 -1 12 -3 16 -3c5 0 9 1 11 5c1 1 1 3 1 4c0 2 -4 10 -6 14c-13 21 -27 40 -43 60z\"\n  ),\n  originUnits: 2,\n  bbox: { ne: { x: 1.08, y: 1.492 }, sw: { x: 0.004, y: -1.5 } },\n};\n// E4E6\nexport const bRest8: RestPath = {\n  path2d: new Path2D(\n    \"M134 107v-10c33 0 83 60 90 66c6 4 9 4 11 4c2 -1 12 -6 12 -16c-1 -5 -6 -21 -10 -39c0 0 -98 -351 -101 -353c-10 -8 -24 -10 -35 -10c-6 0 -29 1 -29 13c18 66 90 265 93 280c1 4 1 8 1 11c0 5 -1 9 -5 9c-1 0 -3 0 -5 -1c-13 -7 -22 -11 -36 -15 c-11 -4 -25 -7 -39 -7c-19 0 -38 6 -54 17c-15 12 -27 30 -27 51c0 37 30 67 67 67s67 -30 67 -67z\"\n  ),\n  originUnits: 2,\n  bbox: { ne: { x: 0.988, y: 0.696 }, sw: { x: 0, y: -1.004 } },\n};\n// E4E7\nexport const bRest16: RestPath = {\n  path2d: new Path2D(\n    \"M208 111v-10c34 1 84 61 91 67c3 2 6 4 11 4c2 -1 10 -5 10 -11c0 -1 -1 -2 -1 -4c-2 -13 -27 -101 -27 -101s-19 -67 -45 -152l-116 -381c-4 -11 -9 -23 -38 -23c-22 0 -31 10 -31 19l1 1v1l95 283v1l1 1c0 4 -2 6 -4 6c-23 -12 -49 -21 -75 -21c-38 0 -80 27 -80 68 c0 38 30 68 68 68c37 0 68 -30 68 -68c0 -3 0 -6 -1 -10c14 0 41 12 49 31c7 15 58 164 58 180c0 5 -2 7 -5 7c-2 0 -4 -1 -7 -2c-23 -13 -51 -22 -78 -22c-38 0 -80 27 -80 68c0 38 31 68 68 68c38 0 68 -30 68 -68z\"\n  ),\n  originUnits: 2,\n  bbox: { ne: { x: 1.28, y: 0.716 }, sw: { x: 0, y: -2 } },\n};\n// E4E8\nexport const bRest32: RestPath = {\n  path2d: new Path2D(\n    \"M353 419c2 0 10 -2 10 -11c0 -1 -1 -2 -1 -4c-2 -12 -26 -101 -26 -101s-172 -770 -175 -782c-4 -11 -7 -21 -39 -21c-21 0 -27 8 -27 16c0 2 0 4 1 6c2 7 71 282 71 286c0 3 -3 6 -6 6c-1 0 -2 0 -3 -1c-23 -13 -51 -22 -78 -22c-38 0 -80 27 -80 68c0 38 31 68 68 68 c38 0 68 -30 68 -68c0 -3 0 -6 -1 -10c15 1 46 14 51 35l40 164c0 5 -2 13 -7 13c-1 0 -2 0 -3 -1c-23 -12 -49 -22 -75 -22c-10 0 -19 2 -27 4c-10 3 -19 7 -27 14c-16 12 -28 30 -28 50c0 38 30 68 68 68c37 0 68 -30 68 -68c0 -3 0 -6 -1 -9c16 0 49 20 54 36l39 160v1 l1 2c0 7 -4 17 -11 17c-1 0 -3 0 -4 -1c-23 -12 -50 -22 -76 -22c-10 0 -18 2 -26 4c-10 3 -20 7 -28 14c-16 12 -28 30 -28 50c0 38 31 68 68 68c38 0 68 -30 68 -68v-9c34 0 84 61 91 66c3 2 6 4 11 4z\"\n  ),\n  originUnits: 2,\n  bbox: { ne: { x: 1.452, y: 1.704 }, sw: { x: 0, y: -2 } },\n};\n\n/**\n * Accidentals\n * @see https://w3c.github.io/smufl/latest/tables/standard-accidentals-12-edo.html\n */\n// E260\nexport const bAccidentalFlat: Path = {\n  path2d: new Path2D(\n    \"M12 -170c-8 10 -12 581 -12 581c1 18 17 28 31 28c10 0 19 -6 19 -17c0 -20 -6 -260 -7 -282c0 -7 4 -14 11 -17c2 -1 3 -1 5 -1c5 0 16 9 22 14c14 9 38 17 55 17c46 -3 90 -39 90 -96c0 -46 -31 -107 -120 -169c-25 -17 -49 -44 -79 -61c0 0 -3 -2 -6 -2s-6 1 -9 5z M47 -81c0 -5 2 -15 11 -15c3 0 6 1 10 3c43 27 89 81 89 135c0 25 -12 58 -41 58c-23 0 -63 -29 -70 -49c-1 -4 -2 -16 -2 -32c0 -40 3 -100 3 -100z\"\n  ),\n  bbox: {\n    ne: { x: 0.904, y: 1.756 },\n    sw: { x: 0, y: -0.7 },\n  },\n};\n// E261\nexport const bAccidentalNatural: Path = {\n  path2d: new Path2D(\n    \"M141 181l15 5c1 1 3 1 4 1c4 0 8 -3 8 -8v-502c0 -7 -6 -12 -12 -12h-13c-7 0 -12 5 -12 12v149c0 8 -7 11 -17 11c-29 0 -85 -24 -99 -30c-1 -1 -3 -1 -4 -1l-2 -1c-6 0 -9 3 -9 9v515c0 7 5 12 12 12h13c6 0 12 -5 12 -12v-167c0 -4 4 -5 10 -5c26 0 90 23 90 23 c1 0 2 1 4 1zM37 39v-103c0 -4 5 -6 12 -6c25 0 82 23 82 41v103c0 4 -3 5 -9 5c-24 0 -85 -26 -85 -40z\"\n  ),\n  bbox: {\n    ne: { x: 0.672, y: 1.364 },\n    sw: { x: 0, y: -1.34 },\n  },\n};\n// E262\nexport const bAccidentalSharp: Path = {\n  path2d: new Path2D(\n    \"M237 118l-26 -10c-8 -3 -13 -22 -13 -29v-93c0 -12 7 -18 13 -18l26 10c2 1 3 1 5 1c4 0 7 -3 7 -8v-71c0 -6 -5 -14 -12 -17c0 0 -21 -8 -28 -11s-11 -15 -11 -23v-142c0 -6 -6 -11 -17 -11c-7 0 -13 5 -13 11v125c0 6 -5 18 -14 18l-2 -1h-1l-61 -25 c-5 -2 -10 -9 -10 -22v-139c0 -6 -7 -11 -17 -11c-7 0 -13 5 -13 11v123c0 5 -5 16 -12 16c-1 0 -2 0 -3 -1c-9 -3 -23 -9 -24 -9l-2 -1c-6 0 -9 3 -9 9v71c0 6 5 14 12 16c0 0 21 9 27 11c6 3 11 12 11 23v99c0 8 -6 18 -14 18l-1 -1c-8 -4 -23 -10 -24 -10l-2 -1 c-6 0 -9 3 -9 9v71c0 6 5 14 12 16c0 0 20 8 26 11s12 13 12 27v135c0 6 6 11 16 11c7 0 14 -5 14 -11v-120c0 -8 3 -20 12 -20c17 4 51 18 63 25c9 6 12 19 13 29v130c0 6 6 11 16 11c8 0 14 -5 14 -11v-122c0 -8 7 -13 14 -13c5 1 25 9 25 9c2 1 3 1 5 1c4 0 7 -3 7 -8 v-71c0 -6 -5 -14 -12 -17zM168 -45c2 9 4 37 4 64s-2 52 -4 57c-2 4 -8 6 -15 6c-25 0 -71 -21 -73 -38c-2 -8 -3 -43 -3 -74c0 -24 1 -46 3 -50c1 -3 6 -5 12 -5c23 0 70 20 76 40z\"\n  ),\n  bbox: {\n    ne: { x: 0.996, y: 1.4 },\n    sw: { x: 0, y: -1.392 },\n  },\n};\n", "import { Path } from \"./font/bravura\";\n\nexport type Point = { x: number; y: number };\nexport type BBox = {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n};\nexport const magnitude = (p1: Point, p2: Point): number => {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n};\n\nexport const scalePoint = (p: Point, scale: number): Point => {\n  return { x: p.x * scale, y: p.y * scale };\n};\n\nexport const addPoint = (p1: Point, p2: Point): Point => {\n  return { x: p1.x + p2.x, y: p1.y + p2.y };\n};\n\nexport const offsetBBox = (bbox: BBox, offset?: Partial<Point>): BBox => {\n  const x = typeof offset?.x === \"number\" ? offset.x : 0;\n  const y = typeof offset?.y === \"number\" ? offset.y : 0;\n  return {\n    left: bbox.left + x,\n    top: bbox.top + y,\n    right: bbox.right + x,\n    bottom: bbox.bottom + y,\n  };\n};\n\nexport const getPathBBox = (path: Path, unit: number): BBox => {\n  // \u5DE6\u4E0B\u539F\u70B9\u2192\u5DE6\u4E0A\u539F\u70B9\u306B\u5909\u63DB\n  return {\n    left: path.bbox.sw.x * unit,\n    top: -path.bbox.ne.y * unit,\n    bottom: -path.bbox.sw.y * unit,\n    right: path.bbox.ne.x * unit,\n  };\n};\n\nexport const isPointInBBox = (\n  { x, y }: Point,\n  { left, top, right, bottom }: BBox\n): boolean => {\n  return left <= x && x <= right && top <= y && y <= bottom;\n};\n", "import { Accidental, Duration } from \"./types\";\nimport {\n  bAccidentalFlat,\n  bAccidentalNatural,\n  bAccidentalSharp,\n  bFlag16Down,\n  bFlag16Up,\n  bFlag32Down,\n  bFlag32Up,\n  bFlag8Down,\n  bFlag8Up,\n  bNoteHead,\n  bNoteHeadHalf,\n  bNoteHeadWhole,\n  bRest1,\n  bRest16,\n  bRest2,\n  bRest32,\n  bRest4,\n  bRest8,\n  FlagDown,\n  FlagUp,\n  Path,\n  RestPath,\n  WIDTH_NOTE_HEAD_BLACK,\n  WIDTH_NOTE_HEAD_WHOLE,\n} from \"../font/bravura\";\n\nexport const upFlagMap = new Map<Duration, FlagUp>([\n  [8, bFlag8Up],\n  [16, bFlag16Up],\n  [32, bFlag32Up],\n]);\n\nexport const downFlagMap = new Map<Duration, FlagDown>([\n  [8, bFlag8Down],\n  [16, bFlag16Down],\n  [32, bFlag32Down],\n]);\n\nexport const restPathMap = new Map<Duration, RestPath>([\n  [1, bRest1],\n  [2, bRest2],\n  [4, bRest4],\n  [8, bRest8],\n  [16, bRest16],\n  [32, bRest32],\n]);\n\nexport const accidentalPathMap = new Map<Accidental, Path>([\n  [\"sharp\", bAccidentalSharp],\n  [\"natural\", bAccidentalNatural],\n  [\"flat\", bAccidentalFlat],\n]);\n\nexport const numOfBeamsMap = new Map<Duration, number>([\n  [8, 1],\n  [16, 2],\n  [32, 3],\n]);\n\nexport const noteHeadByDuration = (duration: Duration): Path => {\n  switch (duration) {\n    case 1:\n      return bNoteHeadWhole;\n    case 2:\n      return bNoteHeadHalf;\n    default:\n      return bNoteHead;\n  }\n};\n\nexport const noteHeadWidth = (duration: Duration): number => {\n  if (duration === 1) {\n    return WIDTH_NOTE_HEAD_WHOLE;\n  }\n  return WIDTH_NOTE_HEAD_BLACK;\n};\n", "export const kDefaultCaretWidth = 50;\n\nconst scale = 0.08;\nexport const getScale = () => scale;\n\nconst previewScale = 0.08;\nexport const getPreviewScale = () => previewScale;\n\nconst staffOrigin = { x: 250, y: 2000 };\nexport const getStaffOrigin = () => staffOrigin;\n\nconst previewWidth = 300;\nexport const getPreviewWidth = () => previewWidth;\n\nconst previewHeight = 400;\nexport const getPreviewHeight = () => previewHeight;\n", "import {\n  bBarlineSeparation,\n  bBeamSpacing,\n  bBeamThickness,\n  bClefG,\n  bLedgerLineThickness,\n  bRepeatBarlineDotSeparation,\n  bStaffHeight,\n  bStemWidth,\n  bThickBarlineThickness,\n  bThinBarlineThickness,\n  EXTENSION_LEDGER_LINE,\n  repeatDotRadius,\n  UNIT,\n} from \"../font/bravura\";\nimport { BBox, getPathBBox, offsetBBox, Point } from \"../geometry\";\nimport {\n  accidentalPathMap,\n  downFlagMap,\n  noteHeadByDuration,\n  noteHeadWidth,\n  numOfBeamsMap,\n  restPathMap,\n  upFlagMap,\n} from \"../notation/constants\";\nimport {\n  Bar,\n  Clef,\n  Duration,\n  MusicalElement,\n  Note,\n  Pitch,\n  PitchAcc,\n  Rest,\n} from \"../notation/types\";\nimport { kDefaultCaretWidth } from \"../score-preferences\";\nimport {\n  BarStyle,\n  BeamStyle,\n  CaretOption,\n  CaretStyle,\n  ClefStyle,\n  GapStyle,\n  NoteHeadElement,\n  NoteStyle,\n  NoteStyleElement,\n  PaintElement,\n  PaintElementStyle,\n  Pointing,\n  RestStyle,\n  TieStyle,\n} from \"./types\";\n\nconst kPointingColor = \"#FF0000\";\n\nconst tiePosition = (noteHeadPos: Point, noteHeadBBox: BBox): Point => {\n  // TODO pos.y\u306Fnote head\u306E\u4E2D\u5FC3\u306A\u306E\u3067\u305D\u308C\u3092\u8003\u616E\u3057\u305F\u3044\n  return {\n    x: noteHeadPos.x + (noteHeadBBox.right - noteHeadBBox.left) / 2,\n    y: noteHeadPos.y + (noteHeadBBox.bottom - noteHeadBBox.top),\n  };\n};\n\nconst determineNoteStyle = ({\n  note,\n  stemDirection,\n  beamed = false,\n  pointing,\n}: {\n  note: Note;\n  stemDirection?: \"up\" | \"down\";\n  beamed?: boolean;\n  pointing?: Pointing;\n}): {\n  element: NoteStyle;\n  width: number;\n  stemOffsetLeft: number;\n  bbox: BBox;\n} => {\n  const elements: NoteStyleElement[] = [];\n  const bboxes: BBox[] = [];\n\n  // accidentals\n  const accBBoxes: BBox[] = [];\n  for (const p of note.pitches) {\n    if (!p.accidental) {\n      continue;\n    }\n    const { pitch, accidental } = p;\n    const y = pitchToY(0, pitch, 1);\n    accBBoxes.push(getPathBBox(accidentalPathMap.get(accidental)!, UNIT));\n    elements.push({\n      type: \"accidental\",\n      position: { x: 0, y },\n      accidental,\n    });\n  }\n  bboxes.push(...accBBoxes);\n\n  // ledger lines\n  let leftOfLedgerLine = 0;\n  if (accBBoxes.length > 0) {\n    // Accidental\u304C\u63CF\u753B\u3055\u308C\u3066\u3044\u308C\u3070ledger line\u958B\u59CB\u4F4D\u7F6E\u3092\u53F3\u306B\u305A\u3089\u3059\n    leftOfLedgerLine = accBBoxes[0].right + gapWithAccidental(1);\n  }\n  const pitches = note.pitches.map((p) => p.pitch);\n  const minPitch = Math.min(...pitches);\n  const maxPitch = Math.max(...pitches);\n  const ledgerWidth = ledgerLineWidth(note.duration);\n  const ledgerBBoxes: BBox[] = [];\n  // min<=0 && max<=0 : min\u306E\u307F\u63CF\u753B\n  // min>=12 && max>=12 : max\u306E\u307F\u63CF\u753B\n  // min===max && min<=0 : min\u306E\u307F\u63CF\u753B\n  // min===max && min>=12 : min\u306E\u307F\u63CF\u753B\n  // min<=0 && max>=12 : min, max\u63CF\u753B\n  if (minPitch <= 0) {\n    // C4\n    for (let p = 0; p >= minPitch; p -= 2) {\n      const y = pitchToY(0, p, 1);\n      elements.push({\n        type: \"ledger\",\n        width: ledgerWidth,\n        position: { x: leftOfLedgerLine, y },\n      });\n      ledgerBBoxes.push({\n        left: leftOfLedgerLine,\n        right: leftOfLedgerLine + ledgerWidth,\n        top: y - bLedgerLineThickness,\n        bottom: y + bLedgerLineThickness,\n      });\n    }\n  }\n  if (maxPitch >= 12) {\n    // A5\n    for (let p = 12; p < maxPitch + 1; p += 2) {\n      const y = pitchToY(0, p, 1);\n      elements.push({\n        type: \"ledger\",\n        width: ledgerWidth,\n        position: { x: leftOfLedgerLine, y },\n      });\n      ledgerBBoxes.push({\n        left: leftOfLedgerLine,\n        right: leftOfLedgerLine + ledgerWidth,\n        top: y - bLedgerLineThickness,\n        bottom: y + bLedgerLineThickness,\n      });\n    }\n  }\n  bboxes.push(...ledgerBBoxes);\n\n  // noteheads\n  let leftOfNotehead = 0;\n  if (ledgerBBoxes.length > 0) {\n    // Ledger line\u304C\u63CF\u753B\u3055\u308C\u3066\u3044\u308C\u3070note\u63CF\u753B\u4F4D\u7F6E\u3092\u53F3\u306B\u305A\u3089\u3059\n    leftOfNotehead = ledgerBBoxes[0].left + ledgerLineExtension(1);\n  } else if (accBBoxes.length > 0) {\n    // Accidental\u304C\u63CF\u753B\u3055\u308C\u3066\u3044\u308C\u3070note\u63CF\u753B\u4F4D\u7F6E\u3092\u53F3\u306B\u305A\u3089\u3059\n    leftOfNotehead = accBBoxes[0]?.right + gapWithAccidental(1) * 2; // *2\u3068\u306F\uFF1F\n  }\n  // stem\u306E\u5DE6\u53F3\u3069\u3061\u3089\u306B\u97F3\u7B26\u3092\u63CF\u753B\u3059\u308B\u304B\n  if (!stemDirection) {\n    stemDirection = getStemDirection(pitches);\n  }\n  const notesLeftOfStem: PitchAcc[] = [];\n  const notesRightOfStem: PitchAcc[] = [];\n  const pitchAsc = sortPitch(note.pitches, \"asc\");\n  if (stemDirection === \"up\") {\n    // \u4E0A\u5411\u304Dstem\n    for (let i = 0; i < pitchAsc.length; i++) {\n      if (i === 0) {\n        // \u6700\u4F4E\u97F3\u306F\u5DE6\u5074\n        notesLeftOfStem.push(pitchAsc[i]);\n      } else if (pitchAsc[i].pitch - pitchAsc[i - 1].pitch === 1) {\n        // 2\u5EA6\u306F\u53F3\u5074\n        notesRightOfStem.push(pitchAsc[i]);\n        if (i + 1 < pitchAsc.length) {\n          // \u53F3\u5074\u63CF\u753B\u3068\u306A\u3063\u305F\u6B21\u306E\u97F3\u306F\u5DE6\u5074\n          notesLeftOfStem.push(pitchAsc[++i]);\n        }\n      } else {\n        notesLeftOfStem.push(pitchAsc[i]);\n      }\n    }\n  } else {\n    // \u4E0B\u5411\u304Dstem\n    const pitchDesc = pitchAsc.concat().reverse();\n    for (let i = 0; i < pitchDesc.length; i++) {\n      if (i === 0) {\n        // \u6700\u4F4E\u97F3\u306F\u53F3\u5074\n        notesRightOfStem.push(pitchDesc[i]);\n      } else if (pitchDesc[i - 1].pitch - pitchDesc[i].pitch === 1) {\n        // 2\u5EA6\u306F\u5DE6\u5074\n        notesLeftOfStem.push(pitchDesc[i]);\n        if (i + 1 < pitchDesc.length) {\n          // \u5DE6\u5074\u63CF\u753B\u3068\u306A\u3063\u305F\u6B21\u306E\u97F3\u306F\u53F3\u5074\n          notesRightOfStem.push(pitchDesc[++i]);\n        }\n      } else {\n        notesRightOfStem.push(pitchDesc[i]);\n      }\n    }\n  }\n  const noteheadStemFlagBBoxes: BBox[] = [];\n  for (const p of notesLeftOfStem) {\n    const position = {\n      x: leftOfNotehead,\n      y: pitchToY(0, p.pitch, 1),\n    };\n    const bbox = offsetBBox(\n      getPathBBox(noteHeadByDuration(note.duration), UNIT),\n      position\n    );\n    elements.push({\n      type: \"head\",\n      position,\n      duration: note.duration,\n      tie: tiePosition(position, bbox),\n    });\n    noteheadStemFlagBBoxes.push(bbox);\n  }\n  let leftOfStemOrNotehead = leftOfNotehead;\n  if (notesLeftOfStem.length > 0) {\n    // Stem\u5DE6\u5074\u306Bnotehead\u63CF\u753B\u3057\u3066\u3044\u305F\u3089notehead\u53F3\u7AEF\u3092stem\u958B\u59CB\u4F4D\u7F6E\u306B\u6307\u5B9A\u3059\u308B\n    leftOfStemOrNotehead = noteheadStemFlagBBoxes[0].right;\n  }\n  bboxes.push(...noteheadStemFlagBBoxes);\n  if (!beamed) {\n    // stem, flag\n    const { elements: el, bboxes: stemFlagBB } = determineStemFlagStyle({\n      left: leftOfStemOrNotehead,\n      duration: note.duration,\n      direction: stemDirection,\n      lowest: pitchAsc[0],\n      highest: pitchAsc[pitchAsc.length - 1],\n    });\n    elements.push(...el);\n    bboxes.push(...stemFlagBB);\n  }\n  for (const p of notesRightOfStem) {\n    const position = {\n      x: leftOfNotehead,\n      y: pitchToY(0, p.pitch, 1),\n    };\n    const bbox = offsetBBox(\n      getPathBBox(noteHeadByDuration(note.duration), UNIT),\n      position\n    );\n    elements.push({\n      type: \"head\",\n      position,\n      duration: note.duration,\n      tie: tiePosition(position, bbox),\n    });\n    bboxes.push(bbox);\n  }\n  console.log(\"note bboxes\", bboxes);\n  const bbox = mergeBBoxes(bboxes);\n  return {\n    element: {\n      type: \"note\",\n      note,\n      elements,\n      ...(pointing ? { color: kPointingColor } : undefined),\n    },\n    width: bbox.right - bbox.left,\n    stemOffsetLeft: leftOfStemOrNotehead,\n    bbox,\n  };\n};\n\nconst mergeBBoxes = (bboxes: BBox[]): BBox => {\n  let ret: BBox | undefined;\n  for (let b of bboxes) {\n    if (ret) {\n      if (b.left < ret.left) {\n        ret.left = b.left;\n      }\n      if (b.top < ret.top) {\n        ret.top = b.top;\n      }\n      if (b.right > ret.right) {\n        ret.right = b.right;\n      }\n      if (b.bottom > ret.bottom) {\n        ret.bottom = b.bottom;\n      }\n    } else {\n      ret = b;\n    }\n  }\n  return ret!;\n};\n\n// note head\u304B\u3089\u306F\u307F\u51FA\u308B\u9577\u3055(\u7247\u65B9)\nconst ledgerLineExtension = (scale: number): number => {\n  return UNIT * EXTENSION_LEDGER_LINE * scale;\n};\n\nconst ledgerLineWidth = (duration: Duration): number => {\n  return noteHeadWidth(duration) + ledgerLineExtension(1) * 2;\n};\n\nconst getStemDirection = (pitches: Pitch[]): \"up\" | \"down\" => {\n  // B4\u304B\u3089\u6700\u3082\u9060\u3044\u97F3\u7A0B\u3092\u8A08\u7B97\u3059\u308B\n  // B4\u672A\u6E80 -> \u4E0A\u5411\u304D (\u697D\u8B5C\u306E\u66F8\u304D\u65B9p17)\n  const lowestToB4 = 6 - Math.min(...pitches);\n  const highestToB4 = Math.max(...pitches) - 6;\n  if (lowestToB4 > highestToB4) {\n    return \"up\";\n  } else if (highestToB4 > lowestToB4) {\n    return \"down\";\n  }\n  // calc direction by center of pitches if lowest and highest are same\n  return centerOfNotes(pitches) < 6 ? \"up\" : \"down\";\n};\n\nconst centerOfNotes = (pitches: Pitch[]): Pitch => {\n  const average = pitches.reduce((prev, curr) => prev + curr) / pitches.length;\n  return Math.round(average);\n};\nconst calcStemShape = ({\n  dnp,\n  direction,\n  lowest,\n  highest,\n  extension = 0,\n}: {\n  dnp: { topOfStaff: number; scale: number; duration: Duration };\n  direction: \"up\" | \"down\";\n  lowest: PitchAcc;\n  highest: PitchAcc;\n  extension?: number;\n}): { top: number; bottom: number } => {\n  const { topOfStaff, scale, duration } = dnp;\n  const heightOfB4 = topOfStaff + (bStaffHeight * scale) / 2;\n  let top: number;\n  let bottom: number;\n  if (direction === \"up\") {\n    // \u7B26\u982D\u306E\u53F3\u306B\u7B26\u5E79\u304C\u306F\u307F\u51FA\u308B\u306E\u3092\u88DC\u6B63\n    bottom = pitchToY(topOfStaff, lowest.pitch, scale) - 5;\n    if (highest.pitch < 0) {\n      // C4\u3088\u308A\u4F4E\u3044 -> top\u306FB4 (\u697D\u8B5C\u306E\u66F8\u304D\u65B9p17)\n      top = heightOfB4;\n    } else {\n      // stem\u306E\u9577\u3055\u306F\u57FA\u672C1\u30AA\u30AF\u30BF\u30FC\u30D6\u5206 (\u697D\u8B5C\u306E\u66F8\u304D\u65B9p17)\n      // 32\u5206\u4EE5\u964D\u306F1\u9593\u305A\u3064\u9577\u304F\u3059\u308B (\u697D\u8B5C\u306E\u66F8\u304D\u65B9p53)\n      const index = duration < 32 ? highest.pitch + 7 : highest.pitch + 8;\n      top = pitchToY(topOfStaff, index, scale);\n    }\n    top -= extension;\n  } else {\n    top = pitchToY(topOfStaff, highest.pitch, scale);\n    if (lowest.pitch > 12) {\n      // A5\u3088\u308A\u9AD8\u3044 -> bottom\u306FB3\n      bottom = heightOfB4;\n    } else {\n      const index = duration < 32 ? lowest.pitch - 7 : lowest.pitch - 8;\n      bottom = pitchToY(topOfStaff, index, scale);\n    }\n    bottom += extension;\n  }\n  return { top, bottom };\n};\n\nconst gapWithAccidental = (scale: number): number => {\n  return (UNIT / 4) * scale; // \u52D8\n};\n\nconst determineStemFlagStyle = ({\n  left,\n  duration,\n  direction,\n  lowest,\n  highest,\n  beamed,\n}: {\n  left: number;\n  duration: Duration;\n  direction: \"up\" | \"down\";\n  lowest: PitchAcc;\n  highest: PitchAcc;\n  beamed?: {\n    top?: number;\n    bottom?: number;\n  };\n}): { elements: NoteStyleElement[]; bboxes: BBox[] } => {\n  if (duration === 1) {\n    return { elements: [], bboxes: [] };\n  }\n  const elements: NoteStyleElement[] = [];\n  let { top, bottom } = calcStemShape({\n    dnp: { topOfStaff: 0, scale: 1, duration },\n    direction,\n    lowest,\n    highest,\n  });\n  let stemCenter: number;\n  const bboxes: BBox[] = [];\n  if (direction === \"up\") {\n    stemCenter = left - bStemWidth / 2;\n    if (beamed) {\n      top = beamed.top!;\n    } else {\n      const path = upFlagMap.get(duration);\n      const left = stemCenter - bStemWidth / 2;\n      if (path) {\n        const position = {\n          x: left + UNIT * path.stemUpNW.x,\n          y: top + UNIT * path.stemUpNW.y,\n        };\n        elements.push({\n          type: \"flag\",\n          position,\n          duration, // path\u3082\u6E21\u3057\u305F\u307B\u3046\u304C\u3044\u3044\u3093\u3060\u308D\u3046\u304B\n          direction,\n        });\n        bboxes.push(offsetBBox(getPathBBox(path, UNIT), position));\n      }\n    }\n  } else {\n    stemCenter = left + bStemWidth / 2;\n    if (beamed) {\n      bottom = beamed.bottom!;\n    } else {\n      const path = downFlagMap.get(duration);\n      if (path) {\n        const position = {\n          x: stemCenter - bStemWidth / 2 + UNIT * path.stemDownSW.x,\n          y: bottom + UNIT * path.stemDownSW.y,\n        };\n        elements.push({\n          type: \"flag\",\n          position,\n          duration,\n          direction,\n        });\n        bboxes.push(offsetBBox(getPathBBox(path, UNIT), position));\n      }\n    }\n  }\n  const stemEl: NoteStyleElement = {\n    type: \"stem\",\n    position: { x: stemCenter - bStemWidth / 2, y: top },\n    width: bStemWidth,\n    height: bottom - top,\n  };\n  elements.push(stemEl);\n  bboxes.push({\n    left: stemEl.position.x,\n    top: stemEl.position.y,\n    right: stemEl.position.x + stemEl.width,\n    bottom: stemEl.position.y + stemEl.height,\n  });\n  return { elements, bboxes };\n};\n\nconst determineRestStyle = (\n  rest: Rest,\n  pointing?: Pointing\n): { element: RestStyle; bbox: BBox; width: number } => {\n  const path = restPathMap.get(rest.duration)!;\n  const y = UNIT * path.originUnits;\n  const pathOrigin = { x: 0, y };\n  const bbox = offsetBBox(getPathBBox(path, UNIT), { y });\n  return {\n    element: {\n      type: \"rest\",\n      rest,\n      position: pathOrigin,\n      ...(pointing ? { color: kPointingColor } : {}),\n    },\n    bbox,\n    width: bbox.right - bbox.left,\n  };\n};\n\nconst determineBarStyle = (\n  bar: Bar,\n  pointing?: Pointing\n): { element: BarStyle; bbox: BBox; width: number } => {\n  const thinWidth = bThinBarlineThickness * UNIT;\n  const barlineSeparation = bBarlineSeparation * UNIT;\n  if (bar.subtype === \"single\") {\n    return {\n      element: {\n        type: \"bar\",\n        bar,\n        ...(pointing ? { color: kPointingColor } : {}),\n        elements: [\n          {\n            type: \"line\",\n            position: { x: 0, y: 0 },\n            height: bStaffHeight,\n            lineWidth: thinWidth,\n          },\n        ],\n      },\n      width: thinWidth,\n      bbox: {\n        left: 0,\n        top: 0,\n        right: thinWidth,\n        bottom: bStaffHeight,\n      },\n    };\n  } else if (bar.subtype === \"double\") {\n    return {\n      element: {\n        type: \"bar\",\n        bar,\n        ...(pointing ? { color: kPointingColor } : {}),\n        elements: [\n          {\n            type: \"line\",\n            position: { x: 0, y: 0 },\n            height: bStaffHeight,\n            lineWidth: thinWidth,\n          },\n          {\n            type: \"line\",\n            position: { x: thinWidth + barlineSeparation, y: 0 }, // TODO x\n            height: bStaffHeight,\n            lineWidth: thinWidth,\n          },\n        ],\n      },\n      width: barlineSeparation + thinWidth * 2,\n      bbox: {\n        left: 0,\n        top: 0,\n        right: barlineSeparation + thinWidth * 2,\n        bottom: bStaffHeight,\n      },\n    };\n  } else {\n    const boldWidth = bThickBarlineThickness * UNIT;\n    const dotToLineSeparation = bRepeatBarlineDotSeparation * UNIT;\n    const width =\n      repeatDotRadius * 2 +\n      dotToLineSeparation +\n      thinWidth +\n      barlineSeparation +\n      boldWidth;\n    return {\n      element: {\n        type: \"bar\",\n        bar,\n        ...(pointing ? { color: kPointingColor } : {}),\n        elements: [\n          {\n            type: \"dot\",\n            position: { x: 0, y: UNIT + UNIT / 2 }, // \u7B2C2\u9593\n          },\n          {\n            type: \"line\",\n            position: { x: repeatDotRadius * 2 + dotToLineSeparation, y: 0 },\n            height: bStaffHeight,\n            lineWidth: thinWidth,\n          },\n          {\n            type: \"line\",\n            position: {\n              x:\n                repeatDotRadius * 2 +\n                dotToLineSeparation +\n                thinWidth +\n                barlineSeparation,\n              y: 0,\n            },\n            height: bStaffHeight,\n            lineWidth: boldWidth,\n          },\n        ],\n      },\n      width,\n      bbox: {\n        left: 0,\n        top: 0,\n        right: width,\n        bottom: bStaffHeight,\n      },\n    };\n  }\n};\n\nexport const pitchToY = (\n  topOfStaff: number,\n  pitch: Pitch,\n  scale: number\n): number => {\n  // middleC(C4)=0\u3068\u3059\u308B\n  // y\u539F\u70B9\u306F\u7B26\u982D\u306E\u4E2D\u5FC3(\u97F3\u7A0B\u3092\u793A\u3059\u9AD8\u3055)\n  const halfOfNoteHeadHeight = (bStaffHeight * scale) / 8;\n  const c4y = topOfStaff + UNIT * 4.5 * scale + halfOfNoteHeadHeight;\n  return c4y - pitch * halfOfNoteHeadHeight;\n};\nconst getBeamLinearFunc = ({\n  dnp,\n  stemDirection,\n  beamed,\n  arr,\n}: {\n  dnp: { topOfStaff: number; scale: number; duration: Duration };\n  stemDirection: \"up\" | \"down\";\n  beamed: Note[];\n  arr: { left: number; stemOffsetLeft: number }[];\n}): ((x: number) => number) => {\n  const firstEl = beamed[0];\n  const lastEl = beamed[beamed.length - 1];\n  const yDistance4th = (UNIT / 2) * 3 * dnp.scale;\n  const stemDistance =\n    arr[arr.length - 1].left +\n    arr[arr.length - 1].stemOffsetLeft -\n    (arr[0].left + arr[0].stemOffsetLeft);\n  let beamAngle: number;\n  let \u6700\u77EDstem\u3068beam\u306E\u4EA4\u70B9y: Point;\n  if (stemDirection === \"up\") {\n    if (beamed.length === 1) {\n      beamAngle = 0;\n    } else {\n      const pitchFirstHi = firstEl.pitches[firstEl.pitches.length - 1].pitch;\n      const pitchLastHi = lastEl.pitches[lastEl.pitches.length - 1].pitch;\n      const yFirst = pitchToY(dnp.topOfStaff, pitchFirstHi, dnp.scale);\n      const yLast = pitchToY(dnp.topOfStaff, pitchLastHi, dnp.scale);\n      const yDistance = yLast - yFirst;\n      if (pitchFirstHi > pitchLastHi) {\n        // \u53F3\u80A9\u4E0B\u304C\u308A\n        beamAngle =\n          (yDistance >= yDistance4th ? yDistance4th : yDistance) / stemDistance;\n      } else {\n        // \u53F3\u80A9\u4E0A\u304C\u308A\n        beamAngle =\n          (-yDistance >= yDistance4th ? -yDistance4th : yDistance) /\n          stemDistance;\n      }\n    }\n    // calc \u4EA4\u70B9\n    const beamedAndLeftOfStem = beamed.map((note, i) => ({\n      note,\n      leftOfStem: arr[i].left + arr[i].stemOffsetLeft,\n    }));\n    const highest = beamedAndLeftOfStem.sort(\n      (a, b) =>\n        b.note.pitches[b.note.pitches.length - 1].pitch -\n        a.note.pitches[a.note.pitches.length - 1].pitch\n    )[0];\n    const x = highest.leftOfStem;\n    const y = calcStemShape({\n      dnp,\n      direction: stemDirection,\n      lowest: { pitch: highest.note.pitches[0].pitch },\n      highest: {\n        pitch: highest.note.pitches[highest.note.pitches.length - 1].pitch,\n      },\n    }).top;\n    \u6700\u77EDstem\u3068beam\u306E\u4EA4\u70B9y = { x, y };\n  } else {\n    if (beamed.length === 1) {\n      beamAngle = 0;\n    } else {\n      const pitchFirstLo = firstEl.pitches[0].pitch;\n      const pitchLastLo = lastEl.pitches[0].pitch;\n      const yFirst = pitchToY(dnp.topOfStaff, pitchFirstLo, dnp.scale);\n      const yLast = pitchToY(dnp.topOfStaff, pitchLastLo, dnp.scale);\n      const yDistance = yLast - yFirst;\n      if (pitchFirstLo > pitchLastLo) {\n        // \u53F3\u80A9\u4E0B\u304C\u308A\n        beamAngle =\n          (yDistance >= yDistance4th ? yDistance4th : yDistance) / stemDistance;\n      } else {\n        // \u53F3\u80A9\u4E0A\u304C\u308A\n        beamAngle =\n          (-yDistance >= yDistance4th ? -yDistance4th : yDistance) /\n          stemDistance;\n      }\n    }\n    // calc \u4EA4\u70B9\n    const beamedAndLeftOfStem = beamed.map((note, i) => ({\n      note,\n      leftOfStem: arr[i].left + arr[i].stemOffsetLeft,\n    }));\n    const lowest = beamedAndLeftOfStem.sort(\n      (a, b) => a.note.pitches[0].pitch - b.note.pitches[0].pitch\n    )[0];\n    const x = lowest.leftOfStem;\n    const y = calcStemShape({\n      dnp,\n      direction: stemDirection,\n      lowest: { pitch: lowest.note.pitches[0].pitch },\n      highest: {\n        pitch: lowest.note.pitches[lowest.note.pitches.length - 1].pitch,\n      },\n    }).bottom;\n    \u6700\u77EDstem\u3068beam\u306E\u4EA4\u70B9y = { x, y };\n  }\n\n  const { x, y } = \u6700\u77EDstem\u3068beam\u306E\u4EA4\u70B9y;\n  const \u5207\u7247 = -x * beamAngle + y;\n  return (stemX: number) => stemX * beamAngle + \u5207\u7247;\n};\n\nconst getBeamShape = ({\n  scale,\n  stemDirection,\n  beamLeft,\n  beamRight,\n  stemLinearFunc,\n  offsetY = 0,\n}: {\n  scale: number;\n  stemDirection: \"up\" | \"down\";\n  beamLeft: number;\n  beamRight: number;\n  stemLinearFunc: (stemX: number) => number;\n  offsetY?: number;\n}): { nw: Point; ne: Point; sw: Point; se: Point } => {\n  const beamHeight = UNIT * bBeamThickness * scale;\n  // first note\n  const firstStemEdge =\n    stemLinearFunc(beamLeft) + (stemDirection === \"up\" ? offsetY : -offsetY);\n  const nw = {\n    x: beamLeft,\n    y: stemDirection === \"up\" ? firstStemEdge : firstStemEdge - beamHeight,\n  };\n  const sw = {\n    x: beamLeft,\n    y: stemDirection === \"up\" ? firstStemEdge + beamHeight : firstStemEdge,\n  };\n  // last note\n  const lastStemEdge =\n    stemLinearFunc(beamRight) + (stemDirection === \"up\" ? offsetY : -offsetY);\n  const ne = {\n    x: beamRight,\n    y: stemDirection === \"up\" ? lastStemEdge : lastStemEdge - beamHeight,\n  };\n  const se = {\n    x: beamRight,\n    y: stemDirection === \"up\" ? lastStemEdge + beamHeight : lastStemEdge,\n  };\n  return { nw, ne, se, sw };\n};\n\nconst sortPitch = (p: PitchAcc[], dir: \"asc\" | \"dsc\"): PitchAcc[] => {\n  const comparator = (a: PitchAcc, b: PitchAcc) => {\n    if (dir === \"asc\") {\n      return a.pitch < b.pitch;\n    } else {\n      return b.pitch < a.pitch;\n    }\n  };\n  return p.sort((a, b) => {\n    if (comparator(a, b)) {\n      return -1;\n    } else if (a.pitch === b.pitch) {\n      return 0;\n    } else {\n      return 1;\n    }\n  });\n};\n\nconst determineBeamStyle = (p: {\n  beamedNotes: Note[];\n  notePositions: { left: number; stemOffsetLeft: number }[];\n  linearFunc: (x: number) => number;\n  stemDirection: \"up\" | \"down\";\n  duration?: Duration;\n  headOrTail?: \"head\" | \"tail\";\n}): PaintElementStyle<BeamStyle>[] => {\n  const {\n    beamedNotes,\n    notePositions,\n    linearFunc,\n    stemDirection,\n    duration = 8,\n    headOrTail,\n  } = p;\n  console.log(\"determineBeamStyle\", duration);\n  let shouldExt = false;\n  const { beam: lastBeam } = beamedNotes[beamedNotes.length - 1];\n  if (lastBeam === \"continue\" || lastBeam === \"begin\") {\n    // \u3061\u3087\u3063\u3068beam\u3092\u4F38\u3070\u3057\u3066beam mode\u3067\u3042\u308B\u3053\u3068\u3092\u660E\u793A\n    if (duration > 8) {\n      shouldExt = headOrTail === \"tail\";\n    } else {\n      shouldExt = true;\n    }\n  }\n  let beamLeft = notePositions[0].left + notePositions[0].stemOffsetLeft;\n  let beamRight =\n    notePositions[notePositions.length - 1].left +\n    notePositions[notePositions.length - 1].stemOffsetLeft +\n    (shouldExt ? UNIT : 0);\n  if (duration > 8 && beamedNotes.length === 1) {\n    if (headOrTail === \"head\") {\n      beamRight = beamLeft + UNIT;\n    } else if (headOrTail === \"tail\") {\n      beamLeft = beamRight - UNIT;\n    }\n  }\n  const beams: PaintElementStyle<BeamStyle>[] = [];\n  const offsetY =\n    (UNIT * bBeamThickness + UNIT * bBeamSpacing) *\n    (numOfBeamsMap.get(duration)! - 1);\n  const shape = getBeamShape({\n    scale: 1,\n    stemDirection,\n    beamLeft,\n    beamRight,\n    stemLinearFunc: linearFunc,\n    offsetY,\n  });\n  beams.push({\n    element: {\n      type: \"beam\",\n      ...shape,\n    },\n    width: beamRight - beamLeft,\n    bbox: {\n      left: shape.sw.x,\n      top: shape.ne.y,\n      right: shape.ne.x,\n      bottom: shape.sw.y,\n    },\n  });\n  if (duration === 32) {\n    return beams;\n  }\n  const shorterDuration = (duration * 2) as Duration;\n  const beamChunks: {\n    start: number;\n    end: number;\n    headOrTail?: \"head\" | \"tail\";\n  }[] = [];\n  let chunkIdx = 0;\n  let i = 0;\n  let current;\n  while (i < beamedNotes.length) {\n    const note = beamedNotes[i];\n    if (note.duration >= shorterDuration) {\n      if (!current) {\n        let headOrTail: \"head\" | \"tail\" | undefined;\n        if (i === 0) {\n          headOrTail = \"head\";\n        } else if (i === beamedNotes.length - 1) {\n          headOrTail = \"tail\";\n        }\n        // 1\u97F3\u3060\u3051\u306Ebeam\u3082\u8003\u616E\u3057\u3066end\u306B\u3082\u540C\u3058idx\u3092\u683C\u7D0D\n        current = { start: i, end: i, headOrTail };\n        beamChunks.push(current);\n      }\n    } else if (current) {\n      beamChunks[chunkIdx].end = i;\n      chunkIdx++;\n      current = undefined;\n    }\n    i++;\n  }\n  if (current) {\n    // beamedNotes\u672B\u5C3E\u304CshorterDuration\u306E\u5834\u5408\u3092\u8003\u616E\n    beamChunks[chunkIdx].end = beamedNotes.length;\n    beamChunks[chunkIdx].headOrTail = \"tail\";\n  }\n  console.log(beamChunks);\n  for (const { start, end, headOrTail } of beamChunks) {\n    beams.push(\n      ...determineBeamStyle({\n        ...p,\n        beamedNotes: beamedNotes.slice(start, end),\n        notePositions: notePositions.slice(start, end),\n        duration: shorterDuration,\n        headOrTail,\n      })\n    );\n  }\n  return beams;\n};\n\nconst determineBeamedNotesStyle = (\n  beamedNotes: Note[],\n  duration: Duration,\n  elementGap: number,\n  startIdx: number,\n  _pointing?: Pointing\n): PaintElementStyle<NoteStyle | BeamStyle | GapStyle>[] => {\n  const allBeamedPitches = beamedNotes\n    .flatMap((n) => n.pitches)\n    .map((p) => p.pitch);\n  const stemDirection = getStemDirection(allBeamedPitches);\n  const notePositions: { left: number; stemOffsetLeft: number }[] = [];\n  const elements: PaintElementStyle<NoteStyle | BeamStyle | GapStyle>[] = [];\n  let left = 0;\n  for (const _i in beamedNotes) {\n    const i = Number(_i);\n    const pointing =\n      _pointing?.type === \"note\" && _pointing.index === i + startIdx\n        ? _pointing\n        : undefined;\n    const noteStyle = determineNoteStyle({\n      note: beamedNotes[i],\n      stemDirection,\n      beamed: true,\n      pointing,\n    });\n    notePositions.push({ left, stemOffsetLeft: noteStyle.stemOffsetLeft });\n    const caretOption = { index: i + startIdx };\n    elements.push({ caretOption, index: i + startIdx, ...noteStyle });\n    left += noteStyle.width;\n    elements.push(\n      gapElementStyle({\n        width: elementGap,\n        height: bStaffHeight,\n        caretOption: {\n          ...caretOption,\n          index: i + startIdx,\n          defaultWidth: true,\n        },\n      })\n    );\n    left += elementGap;\n  }\n  // duration\u304C\u5909\u308F\u308D\u3046\u304C\u3001\u59CB\u70B9\u30FB\u7D42\u70B9\u304C\u5909\u308F\u308D\u3046\u304C\u5171\u901A\n  const linearFunc = getBeamLinearFunc({\n    dnp: { topOfStaff: 0, scale: 1, duration },\n    stemDirection,\n    beamed: beamedNotes,\n    arr: notePositions,\n  });\n  const beams = determineBeamStyle({\n    beamedNotes,\n    notePositions,\n    linearFunc,\n    stemDirection,\n  });\n  for (const i in beamedNotes) {\n    const { pitches } = beamedNotes[i];\n    const pitchAsc = sortPitch(pitches, \"asc\");\n    const edge = linearFunc(\n      notePositions[i].left + notePositions[i].stemOffsetLeft\n    );\n    let beamed;\n    if (stemDirection === \"up\") {\n      beamed = { top: edge };\n    } else {\n      beamed = { bottom: edge };\n    }\n    // TODO note\u5074\u306Esection\u3068merge\u3057\u306A\u3044\u3068\u6B63\u3057\u3044width\u306B\u306A\u3089\u306A\u3044\n    // beam note\u3060\u3051gap\u304C\u72ED\u304F\u306A\u308A\u305D\u3046\u3002\n    const stemFlag = determineStemFlagStyle({\n      left: notePositions[i].stemOffsetLeft,\n      duration,\n      direction: stemDirection,\n      lowest: pitchAsc[0],\n      highest: pitchAsc[pitchAsc.length - 1],\n      beamed,\n    });\n    // gap\u3092\u8003\u616E\u3057\u305Findex\n    const parent = elements[Number(i) * 2];\n    const noteSyle = parent.element as NoteStyle;\n    parent.bbox = mergeBBoxes([parent.bbox, ...stemFlag.bboxes]);\n    noteSyle.elements.push(...stemFlag.elements);\n  }\n  return [...beams, ...elements];\n};\n\nconst determineTieStyle = (\n  start: PaintElementStyle<NoteStyle>,\n  width: number\n): PaintElementStyle<TieStyle> => {\n  const startHead = start.element.elements.find(\n    (e) => e.type === \"head\"\n  ) as NoteHeadElement;\n  return {\n    element: {\n      type: \"tie\",\n      position: { ...startHead.tie, y: startHead.tie.y - 70 },\n      cpLow: { x: width / 2, y: 120 },\n      cpHigh: { x: width / 2, y: 180 },\n      end: { x: width, y: 0 },\n    },\n    width,\n    bbox: { left: 0, top: 0, right: 0, bottom: 0 },\n  };\n};\n\nconst gapElementStyle = ({\n  width,\n  height,\n  caretOption,\n}: {\n  width: number;\n  height: number;\n  caretOption?: CaretOption;\n}): PaintElementStyle<GapStyle> => {\n  return {\n    element: { type: \"gap\" },\n    width,\n    bbox: { left: 0, top: 0, right: width, bottom: height },\n    caretOption,\n  };\n};\n\nconst determineClefStyle = (\n  clef: Clef,\n  index: number,\n  pointing?: Pointing\n): PaintElementStyle<ClefStyle> => {\n  const path = getPathBBox(bClefG, UNIT);\n  const g = pitchToY(0, 4, 1);\n  return {\n    element: {\n      type: \"clef\",\n      clef,\n      ...(pointing ? { color: kPointingColor } : {}),\n    },\n    width: path.right - path.left,\n    bbox: offsetBBox(path, { y: g }),\n    index,\n  };\n};\n\nexport const determinePaintElementStyle = (\n  elements: MusicalElement[],\n  gapWidth: number,\n  headOpts?: { clef: Clef },\n  pointing?: Pointing\n): PaintElementStyle<PaintElement>[] => {\n  const styles: PaintElementStyle<PaintElement>[] = [];\n  const gapEl = gapElementStyle({\n    width: gapWidth,\n    height: bStaffHeight,\n  });\n  let left = 0;\n  console.log(\"left\", left);\n  if (headOpts) {\n    styles.push(gapEl);\n    left += gapWidth;\n    console.log(\"left\", left);\n    if (headOpts.clef) {\n      const _pointing = pointing?.index === -1 ? pointing : undefined;\n      const clef = determineClefStyle(headOpts.clef, -1, _pointing);\n      styles.push(clef);\n      left += clef.width;\n      console.log(\"left\", left);\n    }\n  }\n  styles.push({ ...gapEl, caretOption: { index: -1, defaultWidth: true } });\n  left += gapWidth;\n  console.log(\"left\", left);\n  let index = 0;\n  while (index < elements.length) {\n    const el = elements[index];\n    if (el.type === \"note\") {\n      if (el.beam === \"begin\") {\n        // \u9023\u6841\n        const beamedNotes: Note[] = [el];\n        let _pointing = pointing?.index === index ? pointing : undefined;\n        let nextIdx = index + 1;\n        let nextEl = elements[nextIdx];\n        while (\n          nextEl?.type === \"note\" &&\n          (nextEl.beam === \"continue\" || nextEl.beam === \"end\")\n        ) {\n          if (!_pointing) {\n            _pointing = pointing?.index === nextIdx ? pointing : undefined;\n          }\n          beamedNotes.push(nextEl);\n          nextEl = elements[++nextIdx];\n        }\n        const beamedStyles = determineBeamedNotesStyle(\n          beamedNotes,\n          el.duration,\n          gapWidth,\n          index,\n          _pointing\n        );\n        styles.push(...beamedStyles);\n        index += beamedNotes.length;\n      } else {\n        const _pointing = pointing?.index === index ? pointing : undefined;\n        const note = determineNoteStyle({ note: el, pointing: _pointing });\n        styles.push({ caretOption: { index }, index, ...note });\n        left += note.width;\n        styles.push({ ...gapEl, caretOption: { index, defaultWidth: true } });\n        left += gapWidth;\n        index++;\n      }\n    } else if (el.type === \"rest\") {\n      const _pointing = pointing?.index === index ? pointing : undefined;\n      const rest = determineRestStyle(el, _pointing);\n      styles.push({ caretOption: { index }, index, ...rest });\n      left += rest.width;\n      styles.push({ ...gapEl, caretOption: { index, defaultWidth: true } });\n      left += gapWidth;\n      index++;\n    } else if (el.type === \"bar\") {\n      const _pointing = pointing?.index === index ? pointing : undefined;\n      const bar = determineBarStyle(el, _pointing);\n      styles.push({ caretOption: { index }, index, ...bar });\n      left += bar.width;\n      styles.push({ ...gapEl, caretOption: { index, defaultWidth: true } });\n      left += gapWidth;\n      index++;\n    }\n  }\n  // element\u306B\u307E\u305F\u304C\u308Bstyle\u3092\u6C7A\u5B9A\u3059\u308B\n  const ties: { index: number; style: PaintElementStyle<TieStyle> }[] = [];\n  for (let _i in styles) {\n    const i = Number(_i);\n    const style = styles[i];\n    if (style.element.type === \"note\" && style.element.note.tie === \"start\") {\n      let distance = style.width;\n      for (let j = i + 1; j < styles.length; j++) {\n        const _style = styles[j];\n        if (\n          _style.element.type === \"note\" &&\n          _style.element.note.tie === \"stop\"\n        ) {\n          ties.push({\n            index: i,\n            style: determineTieStyle(\n              style as PaintElementStyle<NoteStyle>,\n              distance\n            ),\n          });\n          distance = 0;\n        } else {\n          distance += _style.width;\n        }\n      }\n    }\n  }\n  for (let { index, style } of ties) {\n    styles.splice(index, 0, style);\n  }\n  return styles;\n};\n\nexport const determineCaretStyle = (\n  option: CaretOption,\n  elWidth: number,\n  leftOfCaret: number\n): CaretStyle => {\n  const { index: elIdx, defaultWidth } = option;\n  const caretWidth = defaultWidth ? kDefaultCaretWidth : elWidth;\n  return {\n    x: leftOfCaret + (defaultWidth ? elWidth / 2 - caretWidth / 2 : 0),\n    y: 0,\n    width: caretWidth,\n    elIdx,\n  };\n};\n", "import {\n  bClefG,\n  bLedgerLineThickness,\n  bStaffHeight,\n  bStaffLineWidth,\n  Path,\n  repeatDotRadius,\n  UNIT,\n} from \"./font/bravura\";\nimport { BBox } from \"./geometry\";\nimport {\n  accidentalPathMap,\n  downFlagMap,\n  noteHeadByDuration,\n  restPathMap,\n  upFlagMap,\n} from \"./notation/constants\";\nimport { pitchToY } from \"./style/style\";\nimport {\n  BarStyle,\n  BeamStyle,\n  CaretStyle,\n  ClefStyle,\n  NoteStyle,\n  PaintElement,\n  PaintElementStyle,\n  RestStyle,\n  TieStyle,\n} from \"./style/types\";\n\nexport const initCanvas = ({\n  leftPx,\n  topPx,\n  width,\n  height,\n  _canvas,\n}: {\n  leftPx: number;\n  topPx: number;\n  width: number;\n  height: number;\n  _canvas?: HTMLCanvasElement;\n}) => {\n  const canvas = _canvas ?? document.createElement(\"canvas\");\n  canvas.style.position = \"absolute\";\n  canvas.style.top = `${topPx}px`;\n  canvas.style.left = `${leftPx}px`;\n  canvas.style.width = `${width}px`;\n  // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas#scaling_for_high_resolution_displays\n  canvas.width = width * devicePixelRatio;\n  canvas.height = height * devicePixelRatio;\n  canvas.style.height = `${height}px`;\n  canvas.getContext(\"2d\")?.scale(devicePixelRatio, devicePixelRatio);\n};\n\nconst paintBravuraPath = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  scale: number,\n  path: Path,\n  color?: string\n) => {\n  ctx.save();\n  ctx.rotate((Math.PI / 180) * 180); // \u3082\u3068\u306E\u30D1\u30B9\u306F\u56DE\u8EE2\u3057\u3066\u3044\u308B\n  ctx.translate(-left, -top); // \u56DE\u8EE2\u3057\u3066\u3044\u308B\u305F\u3081\u8CA0\u306E\u5024\n  ctx.scale(-scale, scale); // \u3082\u3068\u306E\u30D1\u30B9\u306F\u4E94\u7DDA\u306E\u9AD8\u3055\u30921000\u3068\u3057\u3066\u3044\u308B\u306E\u3067\u30B9\u30B1\u30FC\u30EB\u3059\u308B\n  ctx.fillStyle = color ? color : \"#000\";\n  ctx.fill(path.path2d);\n  ctx.restore();\n};\n\nconst paintGClef = (\n  ctx: CanvasRenderingContext2D,\n  element: ClefStyle,\n  left: number,\n  topOfStaff: number\n) => {\n  const g = pitchToY(topOfStaff, 4, 1);\n  paintBravuraPath(ctx, left, g, 1, bClefG, element.color);\n};\n\nexport const paintStaff = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  scale: number\n) => {\n  const heightHead = UNIT * scale;\n  for (let i = 0; i < 5; i++) {\n    const y = top + heightHead * i;\n    ctx.save();\n    ctx.strokeStyle = \"#000\";\n    ctx.lineWidth = bStaffLineWidth * scale;\n    ctx.beginPath();\n    ctx.moveTo(left, y);\n    ctx.lineTo(left + width, y);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n};\n\n/**\n * \u5C0F\u7BC0\u7DDA\u63CF\u753B\n */\nconst paintBarline = (ctx: CanvasRenderingContext2D, element: BarStyle) => {\n  const color = element.color ?? \"#000\";\n  for (const el of element.elements) {\n    ctx.save();\n    if (el.type === \"line\") {\n      ctx.translate(el.position.x + el.lineWidth / 2, el.position.y);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = el.lineWidth;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(0, el.height);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      const rad = repeatDotRadius;\n      ctx.translate(el.position.x + rad, el.position.y);\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(0, 0, rad, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(0, UNIT, rad, 0, Math.PI * 2);\n      ctx.fill();\n    }\n    ctx.restore();\n  }\n};\n\nconst paintNote = ({\n  ctx,\n  element,\n}: {\n  ctx: CanvasRenderingContext2D;\n  element: NoteStyle;\n}) => {\n  const color = element.color ?? \"#000\";\n  for (const noteEl of element.elements) {\n    if (noteEl.type === \"head\") {\n      const { duration, position } = noteEl;\n      ctx.save();\n      ctx.translate(position.x, position.y);\n      const path = noteHeadByDuration(duration);\n      paintBravuraPath(ctx, 0, 0, 1, path, color);\n      ctx.restore();\n    } else if (noteEl.type === \"ledger\") {\n      const { width, position } = noteEl;\n      ctx.save();\n      ctx.translate(position.x, position.y);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = bLedgerLineThickness;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(width, 0);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    } else if (noteEl.type === \"accidental\") {\n      const { position, accidental } = noteEl;\n      const path = accidentalPathMap.get(accidental)!;\n      ctx.save();\n      ctx.translate(position.x, position.y);\n      paintBravuraPath(ctx, 0, 0, 1, path, color);\n      ctx.restore();\n    } else if (noteEl.type === \"flag\") {\n      const { duration, direction, position } = noteEl;\n      const path =\n        direction === \"up\"\n          ? upFlagMap.get(duration)\n          : downFlagMap.get(duration);\n      if (path) {\n        paintBravuraPath(ctx, position.x, position.y, 1, path, color);\n      }\n    } else if (noteEl.type === \"stem\") {\n      const { position, width, height } = noteEl;\n      ctx.save();\n      ctx.translate(position.x + width / 2, position.y);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = width;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(0, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n};\n\nconst paintRest = ({\n  ctx,\n  element,\n}: {\n  ctx: CanvasRenderingContext2D;\n  element: RestStyle;\n}) => {\n  const { rest, position, color } = element;\n  const path = restPathMap.get(rest.duration)!;\n  ctx.save();\n  ctx.translate(position.x, position.y);\n  paintBravuraPath(ctx, 0, 0, 1, path, color);\n  ctx.restore();\n};\n\nconst paintBeam = (ctx: CanvasRenderingContext2D, beam: BeamStyle) => {\n  ctx.save();\n  ctx.fillStyle = \"#000\";\n  ctx.beginPath();\n  ctx.moveTo(beam.nw.x, beam.nw.y);\n  ctx.lineTo(beam.sw.x, beam.sw.y);\n  ctx.lineTo(beam.se.x, beam.se.y);\n  ctx.lineTo(beam.ne.x, beam.ne.y);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\nconst paintTie = (ctx: CanvasRenderingContext2D, tie: TieStyle) => {\n  ctx.save();\n  ctx.fillStyle = \"#000\";\n  ctx.translate(tie.position.x, tie.position.y);\n  ctx.moveTo(0, 0);\n  ctx.quadraticCurveTo(tie.cpLow.x, tie.cpLow.y, tie.end.x, tie.end.y);\n  ctx.quadraticCurveTo(tie.cpHigh.x, tie.cpHigh.y, 0, 0);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\nexport const paintStyle = (\n  ctx: CanvasRenderingContext2D,\n  { element }: PaintElementStyle<PaintElement>\n) => {\n  const { type } = element;\n  if (type === \"clef\") {\n    paintGClef(ctx, element, 0, 0);\n  } else if (type === \"note\") {\n    paintNote({ ctx, element });\n  } else if (type === \"rest\") {\n    paintRest({ ctx, element });\n  } else if (type === \"beam\") {\n    paintBeam(ctx, element);\n  } else if (type === \"tie\") {\n    paintTie(ctx, element);\n  } else if (type === \"bar\") {\n    paintBarline(ctx, element);\n  } else if (type === \"gap\") {\n    // no-op\n  }\n};\n\n// debug\nexport const paintBBox = (ctx: CanvasRenderingContext2D, bbox: BBox) => {\n  ctx.save();\n  ctx.strokeStyle = \"#FF0000\";\n  ctx.strokeRect(\n    bbox.left,\n    bbox.top,\n    bbox.right - bbox.left,\n    bbox.bottom - bbox.top\n  );\n  ctx.restore();\n};\n\nexport const paintCaret = ({\n  ctx,\n  scale,\n  caret,\n}: {\n  ctx: CanvasRenderingContext2D;\n  scale: number;\n  caret: CaretStyle;\n}) => {\n  const { x, y, width } = caret;\n  const height = bStaffHeight * scale;\n  ctx.save();\n  ctx.fillStyle = \"#FF000055\";\n  ctx.fillRect(x, y, width, height);\n  ctx.restore();\n};\n\nexport const resetCanvas = ({\n  ctx,\n  width,\n  height,\n  fillStyle,\n}: {\n  ctx: CanvasRenderingContext2D;\n  width: number;\n  height: number;\n  fillStyle: string;\n}) => {\n  ctx.save();\n  ctx.fillStyle = fillStyle;\n  ctx.fillRect(0, 0, width, height);\n  ctx.restore();\n};\n", "export const durations = [1, 2, 4, 8, 16, 32] as const;\nexport type Duration = typeof durations[number];\n\n// C4 (middleC) = 0\nexport type Pitch = number;\n\nexport const kAccidentals = [\"sharp\", \"natural\", \"flat\"] as const;\nexport type Accidental = typeof kAccidentals[number];\n\nexport type PitchAcc = {\n  pitch: Pitch;\n  accidental?: Accidental;\n};\n\nexport type Beam = \"begin\" | \"continue\" | \"end\";\nexport type Tie = \"start\" | \"stop\";\n\nexport type Note = {\n  type: \"note\";\n  duration: Duration;\n  pitches: PitchAcc[]; // sort pitch by asc\n  beam?: Beam;\n  tie?: Tie;\n};\n\nexport type Rest = {\n  type: \"rest\";\n  duration: Duration;\n};\n\nexport type BarTypes = \"single\" | \"double\" | \"final\" | \"repeat\";\nexport type Bar = {\n  type: \"bar\";\n  subtype: BarTypes;\n};\n\nexport type Repeat = {\n  type: \"repeat\";\n  subtype: \"begin\" | \"end\";\n};\n\nexport type MusicalElement = Note | Rest | Bar;\n\nexport type Clef = {\n  type: \"g\";\n};\n", "import { kAccidentals } from \"./notation/types\";\n\nexport type BeamModes = \"beam\" | \"lock\" | \"nobeam\";\nexport type TieModes = \"tie\" | \"lock\" | undefined;\nexport const kAccidentalModes = [undefined, ...kAccidentals] as const;\nexport type AccidentalModes = typeof kAccidentalModes[number];\n", "import { BBox } from \"./geometry\";\nimport { MusicalElement } from \"./notation/types\";\nimport {\n  CaretStyle,\n  PaintElement,\n  PaintElementStyle,\n  Pointing,\n} from \"./style/types\";\nimport { BeamModes, kAccidentalModes, TieModes } from \"./input-modes\";\n\nlet mainElements: MusicalElement[] = [\n  { type: \"note\", duration: 4, pitches: [{ pitch: 1 }], tie: \"start\" },\n  { type: \"note\", duration: 4, pitches: [{ pitch: 1 }], tie: \"stop\" },\n];\nexport function getMainElements() {\n  return mainElements;\n}\nexport function setMainElements(v: MusicalElement[]) {\n  mainElements = v;\n}\n\nlet isNoteInputMode = true;\nexport function getIsNoteInputMode() {\n  return isNoteInputMode;\n}\nexport function flipIsNoteInputMode() {\n  isNoteInputMode = !isNoteInputMode;\n}\n\nlet beamMode: BeamModes = \"nobeam\";\nexport const getBeamMode = () => beamMode;\nexport const setBeamMode = (v: BeamModes) => {\n  beamMode = v;\n};\n\nlet tieMode: TieModes;\nexport const getTieMode = () => tieMode;\nexport const setTieMode = (v: TieModes) => {\n  tieMode = v;\n};\n\nlet accidentalModeIdx = 0;\nexport const getAccidentalMode = () => kAccidentalModes[accidentalModeIdx];\nexport const changeAccidentalMode = () => {\n  accidentalModeIdx =\n    accidentalModeIdx === kAccidentalModes.length - 1\n      ? 0\n      : accidentalModeIdx + 1;\n};\n\nlet lastEditedIdx: number;\nexport const getLastEditedIndex = () => lastEditedIdx;\nexport const setLastEditedIndex = (v: number) => {\n  lastEditedIdx = v;\n};\n\nlet styles: PaintElementStyle<PaintElement>[] = [];\nexport const getStyles = () => styles;\nexport const setStyles = (v: PaintElementStyle<PaintElement>[]) => {\n  styles = v;\n};\n\nlet elementBBoxes: { bbox: BBox; elIdx?: number }[] = [];\nexport const getElementBBoxes = () => elementBBoxes;\nexport const addElementBBoxes = (v: { bbox: BBox; elIdx?: number }) => {\n  elementBBoxes.push(v);\n};\nexport const initElementBBoxes = () => {\n  elementBBoxes = [];\n};\n\nlet pointing: Pointing | undefined;\nexport const getPointing = () => pointing;\nexport const setPointing = (v?: Pointing) => {\n  pointing = v;\n};\n\nlet caretIndex = 0;\nexport function getCaretIndex() {\n  return caretIndex;\n}\nexport function setCaretIndex(v: number) {\n  caretIndex = v;\n}\nexport function addCaretIndex(v: number) {\n  caretIndex += v;\n}\n\nlet caretPositions: CaretStyle[] = [];\nexport function initCaretPositions() {\n  caretPositions = [];\n}\nexport function getCaretPositions() {\n  return caretPositions;\n}\nexport function addCaret(v: CaretStyle) {\n  caretPositions.push(v);\n}\nexport const getCaretByIndex = (i: number) => caretPositions[i];\nexport function getCurrentCaret() {\n  return caretPositions[caretIndex];\n}\n", "import { UNIT } from \"./font/bravura\";\nimport { offsetBBox } from \"./geometry\";\nimport { paintCaret, paintStaff, paintStyle, resetCanvas } from \"./paint\";\nimport { getScale, getStaffOrigin } from \"./score-preferences\";\nimport {\n  addCaret,\n  getCaretPositions,\n  getCurrentCaret,\n  initCaretPositions,\n  addElementBBoxes,\n  getMainElements,\n  getPointing,\n  getStyles,\n  initElementBBoxes,\n  setStyles,\n} from \"./score-states\";\nimport { determineCaretStyle, determinePaintElementStyle } from \"./style/style\";\n\nlet isUpdated = false;\nexport const getShouldRender = () => isUpdated;\nexport const setUpdated = (v: boolean) => {\n  isUpdated = v;\n};\n\nexport const updateMain = () => {\n  setStyles(\n    determinePaintElementStyle(\n      getMainElements(),\n      UNIT,\n      { clef: { type: \"g\" } },\n      getPointing()\n    )\n  );\n  updateUIState();\n  setUpdated(true);\n};\n\nconst updateUIState = () => {\n  initCaretPositions();\n  initElementBBoxes();\n  let cursor = 0;\n  for (const style of getStyles()) {\n    console.log(\"style\", style);\n    const { width, element, caretOption, bbox, index: elIdx } = style;\n    addElementBBoxes({ bbox: offsetBBox(bbox, { x: cursor }), elIdx });\n    if (caretOption) {\n      addCaret(determineCaretStyle(caretOption, width, cursor));\n    }\n    if (element.type !== \"beam\" && element.type !== \"tie\") {\n      cursor += width;\n    }\n  }\n};\n\nexport const renderScore = (ctx: CanvasRenderingContext2D) => {\n  resetCanvas({\n    ctx,\n    width: window.innerWidth,\n    height: window.innerHeight,\n    fillStyle: \"#fff\",\n  });\n  ctx.save();\n  ctx.scale(getScale(), getScale());\n  ctx.translate(getStaffOrigin().x, getStaffOrigin().y);\n  paintStaff(ctx, 0, 0, UNIT * 100, 1);\n  for (const style of getStyles()) {\n    paintStyle(ctx, style);\n    // paintBBox(ctx, style.bbox); // debug\n    if (style.element.type !== \"beam\" && style.element.type !== \"tie\") {\n      ctx.translate(style.width, 0);\n    }\n  }\n  ctx.restore();\n  renderCaret(ctx);\n};\n\nconst renderCaret = (mainCtx: CanvasRenderingContext2D) => {\n  console.log(\"carets\", getCaretPositions());\n  console.log(\"current caret\", getCurrentCaret());\n  mainCtx.save();\n  mainCtx.scale(getScale(), getScale());\n  mainCtx.translate(getStaffOrigin().x, getStaffOrigin().y);\n  paintCaret({\n    ctx: mainCtx,\n    scale: 1,\n    caret: getCurrentCaret(),\n  });\n  mainCtx.restore();\n};\n", "import { PitchAcc } from \"./notation/types\";\n\nexport const sortPitches = (pitches: PitchAcc[]): PitchAcc[] => {\n  return pitches.sort((pa0, pa1) => {\n    // 0\u304C\u4F4E\u3051\u308C\u3070-1\u8FD4\u3059\n    if (pa0.pitch === pa1.pitch) {\n      if (\n        pa0.accidental === pa1.accidental ||\n        (!pa0.accidental && pa1.accidental === \"natural\") ||\n        (pa0.accidental === \"natural\" && !pa1.accidental)\n      ) {\n        return 0;\n      } else if (\n        (pa0.accidental === \"flat\" && pa1.accidental !== \"flat\") ||\n        ((pa0.accidental === \"natural\" || !pa0.accidental) &&\n          pa1.accidental === \"sharp\")\n      ) {\n        return -1;\n      } else {\n        return 1;\n      }\n    } else {\n      if (pa0.pitch < pa1.pitch) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n  });\n};\n", "import { MusicalElement } from \"./notation/types\";\nimport { sortPitches } from \"./pitch\";\nimport { BeamModes } from \"./input-modes\";\n\n// \u76F4\u63A5score-state\u3092\u66F4\u65B0\u3057\u3066\u3044\u3044\u3068\u601D\u3063\u305F\u304C\u3001preview\u3067\u3082\u4F7F\u3063\u3066\u308B\u306E\u3067\u3080\u305A\u3044\n// reducer\u307F\u305F\u3044\u306A\u4EBA\u306B\u306A\u308B\u3079\u304D\u304B\u306A\nexport function inputMusicalElement({\n  caretIndex,\n  elements,\n  newElement,\n  beamMode,\n}: {\n  caretIndex: number;\n  elements: MusicalElement[];\n  newElement: MusicalElement;\n  beamMode: BeamModes;\n}) {\n  const _elements = [...elements];\n  let insertedIndex = 0;\n  let caretAdvance = 0;\n  if (caretIndex === 0) {\n    const right = _elements[caretIndex]; // \u307E\u3060\u633F\u5165\u3057\u3066\u306A\u3044\u306E\u3067caretIdx\u3068\u540C\u3058\n    applyBeam(beamMode, newElement, undefined, right);\n    _elements.splice(caretIndex, 0, newElement);\n    caretAdvance = 2;\n  } else {\n    if (caretIndex % 2 === 0) {\n      // \u633F\u5165\n      const insertIdx = caretIndex / 2;\n      const left = _elements[insertIdx - 1];\n      const right = _elements[insertIdx]; // \u307E\u3060\u633F\u5165\u3057\u3066\u306A\u3044\u306E\u3067insertIdx\u3068\u540C\u3058\n      console.log(\"insertIdx\", insertIdx, \"left\", left, \"right\", right);\n      applyBeam(beamMode, newElement, left, right);\n      _elements.splice(insertIdx, 0, newElement);\n      caretAdvance = 2;\n      insertedIndex = insertIdx;\n    } else {\n      // \u4E0A\u66F8\u304D\n      const overrideIdx = caretIndex === 1 ? 0 : (caretIndex - 1) / 2;\n      const overrideEl = _elements[overrideIdx];\n      if (\n        newElement.type === \"note\" &&\n        overrideEl.type === \"note\" &&\n        newElement.duration === overrideEl.duration\n      ) {\n        newElement.pitches = sortPitches([\n          ...overrideEl.pitches,\n          ...newElement.pitches,\n        ]);\n      }\n      const left = _elements[overrideIdx - 1];\n      const right = _elements[overrideIdx + 1];\n      applyBeam(beamMode, newElement, left, right);\n      _elements.splice(overrideIdx, 1, newElement);\n      insertedIndex = overrideIdx;\n    }\n  }\n  return { elements: _elements, insertedIndex, caretAdvance };\n}\n\n/**\n * algorithm: https://gyazo.com/09cdc43aa31b8dc2cb487556dac039c2\n * @param beamMode\n * @param insert\n * @param left\n * @param right\n */\nfunction applyBeam(\n  beamMode: BeamModes,\n  insert: MusicalElement,\n  left?: MusicalElement,\n  right?: MusicalElement\n): void {\n  if (insert.type === \"note\" && beamMode !== \"nobeam\") {\n    // beam\u3092\u633F\u5165\n    if (\n      left?.type === \"note\" &&\n      right?.type === \"note\" &&\n      left.beam &&\n      right.beam\n    ) {\n      // beam\u306B\u56F2\u307E\u308C\u308B\n      if (left.beam === \"begin\") {\n        if (right.beam === \"begin\") {\n          insert.beam = \"continue\";\n          right.beam = \"continue\";\n        } else {\n          insert.beam = \"continue\";\n        }\n      } else if (left.beam === \"continue\") {\n        if (right.beam === \"begin\") {\n          insert.beam = \"end\";\n        } else {\n          insert.beam = \"continue\";\n        }\n      }\n    } else {\n      insert.beam = \"begin\";\n      if (\n        left?.type === \"note\" &&\n        (left?.beam === \"begin\" || left?.beam === \"continue\")\n      ) {\n        insert.beam = \"continue\";\n      }\n      if (right?.type === \"note\" && right?.beam === \"begin\") {\n        right.beam = \"continue\";\n      }\n    }\n  } else {\n    // no beam or rest\u3092\u633F\u5165\n    if (right?.type === \"note\") {\n      if (right?.beam === \"continue\") {\n        right.beam = \"begin\";\n      } else if (right?.beam === \"end\") {\n        delete right.beam;\n      }\n    }\n    if (left?.type === \"note\") {\n      if (left?.beam === \"begin\") {\n        delete left.beam;\n      } else if (left?.beam === \"continue\") {\n        left.beam = \"end\";\n      }\n    }\n  }\n}\n", "import { Bar } from \"../notation/types\";\nimport { updateMain } from \"../score-renderer\";\nimport {\n  getCaretIndex,\n  getMainElements,\n  getBeamMode,\n  addCaretIndex,\n  setLastEditedIndex,\n  setMainElements,\n} from \"../score-states\";\nimport { inputMusicalElement } from \"../score-updater\";\n\nexport interface IBarInputCallback {\n  commit(bar: Bar): void;\n}\n\nexport class BarInputCallback implements IBarInputCallback {\n  constructor() {}\n\n  commit(bar: Bar) {\n    const { elements, insertedIndex, caretAdvance } = inputMusicalElement({\n      caretIndex: getCaretIndex(),\n      elements: getMainElements(),\n      newElement: bar,\n      beamMode: getBeamMode(),\n    });\n    setLastEditedIndex(insertedIndex);\n    addCaretIndex(caretAdvance);\n    setMainElements(elements);\n    updateMain();\n  }\n}\n", "import { isPointInBBox, offsetBBox, Point, scalePoint } from \"../geometry\";\nimport { getScale, getStaffOrigin } from \"../score-preferences\";\nimport { updateMain } from \"../score-renderer\";\nimport {\n  getElementBBoxes,\n  getPointing,\n  getStyles,\n  setPointing,\n} from \"../score-states\";\n\nexport interface ICanvasCallback {\n  onMove(htmlPoint: Point): void;\n}\n\n// TODO \u547D\u540D\nexport class CanvasCallback implements ICanvasCallback {\n  constructor() {}\n\n  onMove(htmlPoint: Point) {\n    let nextPointing = undefined;\n    for (let i in getElementBBoxes()) {\n      const { type } = getStyles()[i].element;\n      if (type === \"gap\" || type === \"beam\" || type === \"tie\") {\n        continue;\n      }\n      if (\n        isPointInBBox(\n          scalePoint(htmlPoint, 1 / getScale()),\n          offsetBBox(getElementBBoxes()[i].bbox, getStaffOrigin())\n        )\n      ) {\n        const { elIdx } = getElementBBoxes()[i];\n        if (elIdx !== undefined) {\n          nextPointing = { index: elIdx, type };\n        }\n      }\n    }\n    if (getPointing() !== nextPointing) {\n      setPointing(nextPointing);\n      updateMain();\n    }\n  }\n}\n", "import { changeAccidentalMode, getAccidentalMode } from \"../score-states\";\nimport { AccidentalModes } from \"../input-modes\";\n\nexport interface IChangeAccidentalCallback {\n  getMode(): AccidentalModes;\n  next(): void;\n}\n\nexport class ChangeAccidentalCallback implements IChangeAccidentalCallback {\n  constructor() {}\n\n  getMode() {\n    return getAccidentalMode();\n  }\n\n  next() {\n    changeAccidentalMode();\n  }\n}\n", "import { MusicalElement } from \"./types\";\n\nexport function applyBeamForLastEdited(\n  last: MusicalElement,\n  left?: MusicalElement,\n  right?: MusicalElement\n) {\n  if (\n    last.type === \"note\" &&\n    (last.beam === \"begin\" || last.beam === \"continue\")\n  ) {\n    if (\n      !right ||\n      (right?.type === \"note\" && (!right?.beam || right?.beam === \"begin\"))\n    ) {\n      if (\n        left?.type === \"note\" &&\n        (left?.beam === \"begin\" || left?.beam === \"continue\")\n      ) {\n        last.beam = \"end\";\n      } else {\n        delete last.beam;\n      }\n    }\n  }\n}\n", "import { applyBeamForLastEdited } from \"../notation/notation\";\nimport { updateMain } from \"../score-renderer\";\nimport {\n  getBeamMode,\n  setBeamMode,\n  getMainElements,\n  getLastEditedIndex,\n} from \"../score-states\";\nimport { BeamModes } from \"../input-modes\";\n\nexport interface IChangeBeamCallback {\n  getMode(): BeamModes;\n  change(mode: BeamModes): void;\n}\n\nexport class ChangeBeamCallback implements IChangeBeamCallback {\n  private noteKeyEls = Array.from(document.getElementsByClassName(\"note\"));\n  constructor() {}\n  getMode() {\n    return getBeamMode();\n  }\n\n  change(mode: BeamModes) {\n    this.noteKeyEls.forEach((el) => {\n      el.className = el.className.replace(\n        mode === \"nobeam\" ? \"beamed\" : \"nobeam\",\n        mode === \"nobeam\" ? \"nobeam\" : \"beamed\"\n      );\n    });\n    setBeamMode(mode);\n    const lastEl = getMainElements()[getLastEditedIndex()];\n    if (lastEl) {\n      const left = getMainElements()[getLastEditedIndex() - 1];\n      const right = getMainElements()[getLastEditedIndex() + 1];\n      applyBeamForLastEdited(lastEl, left, right);\n      updateMain();\n    }\n  }\n}\n", "import { getIsNoteInputMode, flipIsNoteInputMode } from \"../score-states\";\n\nexport interface IChangeNoteRestCallback {\n  isNoteInputMode(): boolean;\n  change(): void;\n}\n\nexport class ChangeNoteRestCallback implements IChangeNoteRestCallback {\n  private noteKeyEls = Array.from(document.getElementsByClassName(\"note\"));\n  private changeNoteRestKey =\n    document.getElementsByClassName(\"changeNoteRest\")[0];\n\n  constructor() {}\n\n  isNoteInputMode() {\n    return getIsNoteInputMode();\n  }\n\n  change() {\n    this.noteKeyEls.forEach((el) => {\n      el.className = el.className.replace(\n        this.isNoteInputMode() ? \"note\" : \"rest\",\n        this.isNoteInputMode() ? \"rest\" : \"note\"\n      );\n    });\n    this.changeNoteRestKey.className = this.changeNoteRestKey.className.replace(\n      this.isNoteInputMode() ? \"rest\" : \"note\",\n      this.isNoteInputMode() ? \"note\" : \"rest\"\n    );\n    flipIsNoteInputMode();\n  }\n}\n", "import { getTieMode, setTieMode } from \"../score-states\";\nimport { TieModes } from \"../input-modes\";\n\nexport interface IChangeTieCallback {\n  getMode(): TieModes;\n  change(next: TieModes): void;\n}\n\nexport class ChangeTieCallback implements IChangeTieCallback {\n  constructor() {}\n\n  getMode() {\n    return getTieMode();\n  }\n\n  change(v: TieModes) {\n    setTieMode(v);\n  }\n}\n", "import { applyBeamForLastEdited } from \"../notation/notation\";\nimport { updateMain } from \"../score-renderer\";\nimport {\n  getCaretIndex,\n  getLastEditedIndex,\n  getMainElements,\n  setCaretIndex,\n  getCaretPositions,\n} from \"../score-states\";\n\nexport interface IMoveCaretCallback {\n  back(): void;\n  forward(): void;\n}\n\nexport class MoveCaretCallback implements IMoveCaretCallback {\n  constructor() {}\n\n  back() {\n    if (getCaretIndex() % 2 !== 0) {\n      const idx = getCaretIndex() === 1 ? 0 : (getCaretIndex() - 1) / 2;\n      if (idx === getLastEditedIndex()) {\n        const lastEl = getMainElements()[getLastEditedIndex()];\n        const left = getMainElements()[idx - 1];\n        const right = getMainElements()[idx + 1];\n        applyBeamForLastEdited(lastEl, left, right);\n      }\n    }\n    setCaretIndex(Math.max(getCaretIndex() - 1, 0));\n    updateMain();\n  }\n\n  forward() {\n    if (getCaretIndex() % 2 === 0) {\n      const idx = getCaretIndex() / 2 - 1;\n      if (idx === getLastEditedIndex()) {\n        const lastEl = getMainElements()[getLastEditedIndex()];\n        const left = getMainElements()[idx - 1];\n        const right = getMainElements()[idx + 1];\n        applyBeamForLastEdited(lastEl, left, right);\n      }\n    }\n    setCaretIndex(\n      Math.min(getCaretIndex() + 1, getCaretPositions().length - 1)\n    );\n    updateMain();\n  }\n}\n", "export class DefaultMap<K, V> extends Map<K, V> {\n  constructor(provider: (key: K) => V);\n  constructor(provider: (key: K) => V, init?: [K, V][]);\n  constructor(private provider: (key: K) => V, init?: [K, V][]) {\n    super(init);\n  }\n  get(key: K) {\n    let v = super.get(key);\n    if (!v) {\n      v = this.provider(key);\n      super.set(key, v);\n    }\n    return v;\n  }\n}\n", "import { DefaultMap } from \"./lib/default-map\";\n\ntype CanvasHolder = {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n};\n\nexport class CanvasManager {\n  private static canvasMap = new DefaultMap<string, CanvasHolder>(\n    (id: string) => getCanvasById(id)\n  );\n  static getById(id: string) {\n    return this.canvasMap.get(id);\n  }\n}\n\nconst getCanvasById = (id: string): CanvasHolder => {\n  const canvas = document.getElementById(id) as HTMLCanvasElement;\n  const ctx = canvas.getContext(\"2d\")!;\n  return { canvas, ctx };\n};\n", "import { inputMusicalElement } from \"../score-updater\";\nimport { determinePaintElementStyle } from \"../style/style\";\nimport { bStaffHeight, UNIT } from \"../font/bravura\";\nimport { CanvasManager } from \"../canvas\";\nimport {\n  Duration,\n  durations,\n  MusicalElement,\n  Pitch,\n  Tie,\n} from \"../notation/types\";\nimport { initCanvas, paintStaff, paintStyle, resetCanvas } from \"../paint\";\nimport { sortPitches } from \"../pitch\";\nimport {\n  getPreviewHeight,\n  getPreviewScale,\n  getPreviewWidth,\n} from \"../score-preferences\";\nimport { updateMain } from \"../score-renderer\";\nimport {\n  addCaretIndex,\n  getAccidentalMode,\n  getBeamMode,\n  getCaretByIndex,\n  getCaretIndex,\n  getCurrentCaret,\n  getIsNoteInputMode,\n  getMainElements,\n  getTieMode,\n  setCaretIndex,\n  setLastEditedIndex,\n  setMainElements,\n} from \"../score-states\";\nimport { BeamModes } from \"../input-modes\";\n\n// \u3053\u306E\u30B3\u30FC\u30EB\u30D0\u30C3\u30AF\u306F\u30AD\u30FC\u30CF\u30F3\u30C9\u30E9\u3060\u3051\u3058\u3083\u306A\u304F\u3066MIDI\u30AD\u30FC\u3068\u304B\u666E\u901A\u306E\u30AD\u30FC\u30DC\u30FC\u30C9\u3068\u304B\u304B\u3089\u3082\u4F7F\u3046\u60F3\u5B9A\nexport interface INoteInputCallback {\n  startPreview(duration: Duration, downX: number, downY: number): void;\n\n  updatePreview(duration: Duration, dy: number): void;\n\n  commit(duration: Duration, dy?: number): void;\n\n  backspace(): void;\n\n  finish(): void;\n}\n\nlet copiedElements;\nexport class NoteInputCallback implements INoteInputCallback {\n  private previewCanvas: HTMLCanvasElement;\n  private previewCtx: CanvasRenderingContext2D;\n\n  constructor() {\n    const { canvas, ctx } = CanvasManager.getById(\"previewCanvas\");\n    this.previewCanvas = canvas;\n    this.previewCtx = ctx;\n  }\n\n  // (start|update)Preview, commit\u3092\u5171\u901A\u5316\u3057\u305F\u3044\u3002\n  // \u57FA\u672C\u7684\u306Belement\u3092\u751F\u6210\u3059\u308B\u3060\u3051\u3060\u304C\n  // tie\u3067\u306F\u76F4\u524D\u306E\u97F3\u3092\u3044\u3058\u308B\u306E\u3067\n  // \u300C\u97F3\u3092\u8FFD\u52A0\u300D\u300C\u97F3\u3092\u5909\u66F4\u300D\u3092\u30C7\u30FC\u30BF\u5316\u3067\u304D\u308B\u3068\u3044\u3044\u3093\u3060\u3051\u3069\u3002reducer\u307F\u305F\u304F\n  // applyBeam\u3082\u3082\u3046\u3061\u3087\u3044\u30B9\u30DE\u30FC\u30C8\u306B\u66F8\u3051\u308B\u3093\u3058\u3083\u306A\u3044\u304B\u306A\uFF1F\n  startPreview(duration: Duration, downX: number, downY: number) {\n    const left = downX - getPreviewWidth() / 2;\n    const top = downY - getPreviewHeight() / 2;\n    initCanvas({\n      leftPx: left,\n      topPx: top,\n      width: getPreviewWidth(),\n      height: getPreviewHeight(),\n      _canvas: this.previewCanvas,\n    });\n    copiedElements = [...getMainElements()];\n    const newPitch = {\n      pitch: pitchByDistance(getPreviewScale(), 0, 6),\n      accidental: getAccidentalMode(),\n    };\n    let tie: Tie | undefined;\n    if (getTieMode() && getCaretIndex() > 0 && getCaretIndex() % 2 === 0) {\n      const prevEl = copiedElements[getCaretIndex() / 2 - 1];\n      if (\n        prevEl?.type === \"note\" &&\n        prevEl.pitches[0].pitch === newPitch.pitch &&\n        prevEl.pitches[0].accidental === newPitch.accidental\n      ) {\n        prevEl.tie = \"start\";\n        tie = \"stop\";\n      }\n    }\n    const element: MusicalElement = getIsNoteInputMode()\n      ? {\n          type: \"note\",\n          duration,\n          pitches: [newPitch],\n          tie,\n        }\n      : {\n          type: \"rest\",\n          duration,\n        };\n    if (getCaretIndex() > 0 && getCaretIndex() % 2 !== 0) {\n      const oldIdx = getCaretIndex() === 1 ? 0 : (getCaretIndex() - 1) / 2;\n      const oldEl = copiedElements[oldIdx];\n      if (\n        element.type === \"note\" &&\n        oldEl.type === \"note\" &&\n        element.duration === oldEl.duration\n      ) {\n        element.pitches = sortPitches([...oldEl.pitches, ...element.pitches]);\n      }\n    }\n    updatePreview(this.previewCtx, copiedElements, getBeamMode(), element);\n    this.previewCanvas.style.visibility = \"visible\";\n  }\n\n  updatePreview(duration: Duration, dy: number) {\n    copiedElements = [...getMainElements()];\n    const newPitch = {\n      pitch: pitchByDistance(getPreviewScale(), dy, 6),\n      accidental: getAccidentalMode(),\n    };\n    let tie: Tie | undefined;\n    if (getTieMode() && getCaretIndex() > 0 && getCaretIndex() % 2 === 0) {\n      const prevEl = copiedElements[getCaretIndex() / 2 - 1];\n      if (\n        prevEl?.type === \"note\" &&\n        prevEl.pitches[0].pitch === newPitch.pitch &&\n        prevEl.pitches[0].accidental === newPitch.accidental\n      ) {\n        prevEl.tie = \"start\";\n        tie = \"stop\";\n      }\n    }\n    const element: MusicalElement = getIsNoteInputMode()\n      ? {\n          type: \"note\",\n          duration,\n          pitches: [newPitch],\n          tie,\n        }\n      : {\n          type: \"rest\",\n          duration,\n        };\n    if (getCaretIndex() > 0 && getCaretIndex() % 2 !== 0) {\n      const oldIdx = getCaretIndex() === 1 ? 0 : (getCaretIndex() - 1) / 2;\n      const oldEl = copiedElements[oldIdx];\n      if (\n        element.type === \"note\" &&\n        oldEl.type === \"note\" &&\n        element.duration === oldEl.duration\n      ) {\n        element.pitches = sortPitches([...oldEl.pitches, ...element.pitches]);\n      }\n    }\n    updatePreview(this.previewCtx, copiedElements, getBeamMode(), element);\n  }\n\n  commit(duration: Duration, dy?: number) {\n    let newElement: MusicalElement;\n    const newPitch = {\n      pitch: pitchByDistance(getPreviewScale(), dy ?? 0, 6),\n      accidental: getAccidentalMode(),\n    };\n    let tie: Tie | undefined;\n    if (getTieMode() && getCaretIndex() > 0 && getCaretIndex() % 2 === 0) {\n      const prevEl = getMainElements()[getCaretIndex() / 2 - 1];\n      if (\n        prevEl?.type === \"note\" &&\n        prevEl.pitches[0].pitch === newPitch.pitch &&\n        prevEl.pitches[0].accidental === newPitch.accidental\n      ) {\n        prevEl.tie = \"start\";\n        tie = \"stop\";\n      }\n    }\n    if (getIsNoteInputMode()) {\n      newElement = {\n        type: \"note\",\n        duration,\n        pitches: [newPitch],\n        tie,\n      };\n    } else {\n      newElement = {\n        type: \"rest\",\n        duration,\n      };\n    }\n    const { elements, insertedIndex, caretAdvance } = inputMusicalElement({\n      caretIndex: getCaretIndex(),\n      elements: getMainElements(),\n      newElement,\n      beamMode: getBeamMode(),\n    });\n    setLastEditedIndex(insertedIndex);\n    addCaretIndex(caretAdvance);\n    setMainElements(elements);\n    updateMain();\n    copiedElements = [];\n  }\n\n  backspace() {\n    const targetElIdx = getCurrentCaret().elIdx;\n    if (targetElIdx < 0) {\n      return;\n    }\n    const deleted = getMainElements().splice(targetElIdx, 1)[0];\n    if (deleted.type === \"note\") {\n      const left = getMainElements()[targetElIdx - 1];\n      const right = getMainElements()[targetElIdx];\n      if (deleted.beam === \"begin\" && right?.type === \"note\") {\n        right.beam = \"begin\";\n      } else if (deleted.beam === \"end\" && left?.type === \"note\") {\n        left.beam = \"end\";\n      }\n    }\n\n    // \u524A\u9664\u5F8C\u306Ecaret\u4F4D\u7F6E\u3092\u8A08\u7B97\n    let t = getCaretIndex() - 1;\n    while (t > -1) {\n      if (t === 0) {\n        setCaretIndex(0);\n        t = -1;\n      } else if (getCaretByIndex(t).elIdx !== targetElIdx) {\n        setCaretIndex(t);\n        t = -1;\n      } else {\n        t--;\n      }\n    }\n\n    updateMain();\n  }\n\n  finish() {\n    this.previewCanvas.style.visibility = \"hidden\";\n  }\n}\n\nconst pitchByDistance = (scale: number, dy: number, origin: Pitch): Pitch => {\n  const unitY = (UNIT / 2) * scale;\n  return Math.round(dy / unitY + origin);\n};\n\nconst durationByDistance = (\n  scale: number,\n  dx: number,\n  origin: Duration\n): Duration => {\n  const unitX = UNIT * 2 * scale;\n  const _di = Math.round(dx / unitX + durations.indexOf(origin));\n  const di = Math.min(Math.max(_di, 0), 6);\n  return durations[di];\n};\n\nconst updatePreview = (\n  previewCtx: CanvasRenderingContext2D,\n  baseElements: MusicalElement[],\n  beamMode: BeamModes,\n  newElement: MusicalElement\n) => {\n  console.log(\"preview\", \"start\");\n  resetCanvas({\n    ctx: previewCtx,\n    width: getPreviewWidth(),\n    height: getPreviewHeight(),\n    fillStyle: \"#fff\",\n  });\n  const { elements: preview, insertedIndex } = inputMusicalElement({\n    caretIndex: getCaretIndex(),\n    elements: baseElements,\n    newElement,\n    beamMode,\n  });\n  console.log(\"insertedIdx\", insertedIndex);\n  console.log(\"preview\", preview);\n  // B4\u304Ccanvas\u306Evertical center\u306B\u304F\u308B\u3088\u3046\u306B\n  const _topOfStaff =\n    getPreviewHeight() / 2 - (bStaffHeight * getPreviewScale()) / 2;\n  const styles = [...determinePaintElementStyle(preview, UNIT)];\n  const elIdxToX = new Map<number, number>();\n  let cursor = 0;\n  for (const style of styles) {\n    const { width, element, index } = style;\n    console.log(\"style\", style);\n    if (index !== undefined) {\n      elIdxToX.set(index, cursor + width / 2);\n    }\n    if (element.type !== \"beam\" && element.type !== \"tie\") {\n      cursor += width;\n    }\n  }\n\n  console.log(\"elIdxToX\", elIdxToX);\n\n  // paint staff\n  previewCtx.save();\n  // x: \u5DE6\u7AEF y: \u4E2D\u5FC3\n  previewCtx.translate(0, _topOfStaff);\n  previewCtx.scale(getPreviewScale(), getPreviewScale());\n  paintStaff(previewCtx, 0, 0, UNIT * 100, 1);\n  previewCtx.restore();\n\n  // paint elements\n  previewCtx.save();\n  // x: \u4E2D\u5FC3, y: \u4E2D\u5FC3\n  previewCtx.translate(getPreviewWidth() / 2, _topOfStaff);\n  previewCtx.scale(getPreviewScale(), getPreviewScale());\n  // x: preview\u306E\u4E2D\u5FC3\n  const centerX = elIdxToX.get(insertedIndex)!;\n  console.log(\"centerX\", centerX);\n  previewCtx.translate(-centerX, 0);\n  for (const style of styles) {\n    const { width, element } = style;\n    paintStyle(previewCtx, style);\n    if (element.type !== \"beam\" && element.type !== \"tie\") {\n      previewCtx.translate(width, 0);\n    }\n  }\n  previewCtx.restore();\n  console.log(\"preview\", \"end\");\n};\n", "import { magnitude, Point } from \"../geometry\";\n\nexport interface PointerHandler {\n  onMove: (ev: PointerEvent) => void;\n  onDown: (ev: PointerEvent) => void;\n  onUp: (ev: PointerEvent, downPoint: Point) => void;\n  onClick: (ev: PointerEvent) => void;\n  onLongDown: (ev: PointerEvent) => void;\n  onDrag: (ev: PointerEvent, downPoint: Point) => void;\n  onDoubleClick: (ev: PointerEvent) => void;\n}\n\nexport class PointerEventListener {\n  private kLongDownThresholdMs = 300;\n  private kDragThresholdMagnitude = 10;\n  private longDownTimer = 0;\n  private downClassName: string | undefined;\n  private downPoint: Point | undefined;\n  private isDragging = false;\n\n  constructor(\n    readonly targetClassNames: string[],\n    readonly handlers: PointerHandler[]\n  ) {}\n\n  listener(ev: Event) {\n    const pointerEvent = ev as PointerEvent;\n    const { className } = pointerEvent.target as HTMLElement;\n    switch (ev.type) {\n      case \"pointerdown\":\n        if (\n          this.targetClassNames.length > 0 &&\n          !this.targetClassNames.some((target) => className.includes(target))\n        ) {\n          return;\n        }\n        this.downClassName = className;\n        this.downPoint = pointerEvent;\n        this.onDown(pointerEvent);\n        this.longDownTimer = setTimeout(() => {\n          this.onLongDown(pointerEvent);\n          this.longDownTimer = 0;\n        }, this.kLongDownThresholdMs);\n        return;\n      case \"pointerup\":\n        if (!this.downPoint) {\n          return;\n        }\n        this.onUp(pointerEvent, this.downPoint);\n        if (this.longDownTimer > 0) {\n          clearTimeout(this.longDownTimer);\n          this.onClick(pointerEvent);\n        }\n        this.reset();\n        return;\n      case \"pointermove\":\n        this.onMove(pointerEvent);\n        if (!this.downPoint) {\n          return;\n        }\n        if (this.isDragging) {\n          this.onDrag(pointerEvent, this.downPoint);\n        } else if (\n          magnitude(pointerEvent, this.downPoint!) >\n          this.kDragThresholdMagnitude\n        ) {\n          this.isDragging = true;\n        }\n        return;\n      default:\n        return;\n    }\n  }\n\n  private reset() {\n    this.downClassName = undefined;\n    this.downPoint = undefined;\n    this.isDragging = false;\n  }\n\n  private onMove(ev: PointerEvent) {\n    for (const h of this.handlers) {\n      h.onMove(ev);\n    }\n  }\n\n  private onDown(ev: PointerEvent) {\n    for (const h of this.handlers) {\n      h.onDown(ev);\n    }\n  }\n\n  private onUp(ev: PointerEvent, down: Point) {\n    for (const h of this.handlers) {\n      h.onUp(ev, down);\n    }\n  }\n\n  private onClick(ev: PointerEvent) {\n    for (const h of this.handlers) {\n      h.onClick(ev);\n    }\n  }\n\n  private onLongDown(ev: PointerEvent) {\n    for (const h of this.handlers) {\n      h.onLongDown(ev);\n    }\n  }\n\n  private onDrag(ev: PointerEvent, down: Point) {\n    for (const h of this.handlers) {\n      h.onDrag(ev, down);\n    }\n  }\n}\n\nexport const registerPointerHandlers = (\n  classNames: string[],\n  handlers: PointerHandler[]\n) => {\n  const handler = new PointerEventListener(classNames, handlers);\n  [\"pointerdown\", \"pointermove\", \"pointerup\"].forEach((type) => {\n    window.addEventListener(type, (ev) => {\n      handler.listener(ev);\n    });\n  });\n};\n", "import { IBarInputCallback } from \"../callbacks/bar-input\";\nimport { CanvasCallback } from \"../callbacks/canvas\";\nimport { IChangeAccidentalCallback } from \"../callbacks/change-accidental\";\nimport { ChangeBeamCallback } from \"../callbacks/change-beam\";\nimport { IChangeNoteRestCallback } from \"../callbacks/change-note-rest\";\nimport { IChangeTieCallback } from \"../callbacks/change-tie\";\nimport { IMoveCaretCallback } from \"../callbacks/move-caret\";\nimport { INoteInputCallback } from \"../callbacks/note-input\";\nimport { Point } from \"../geometry\";\nimport { BarTypes, Duration } from \"../notation/types\";\nimport { PointerHandler } from \"./pointer-event\";\n\nclass EmptyPointerHandler implements PointerHandler {\n  constructor() {}\n\n  onMove(ev: PointerEvent) {}\n\n  onDown(ev: PointerEvent) {}\n\n  onUp(ev: PointerEvent, downPoint: Point) {}\n\n  onClick(ev: PointerEvent) {}\n\n  onLongDown(ev: PointerEvent) {}\n\n  onDrag(ev: PointerEvent, downPoint: Point) {}\n\n  onDoubleClick(ev: PointerEvent) {}\n}\n\nexport class KeyboardDragHandler extends EmptyPointerHandler {\n  private readonly translated: Point = { x: 0, y: 0 };\n\n  private readonly keyboardEl = document.getElementById(\n    \"keyboard\"\n  ) as HTMLDivElement;\n\n  constructor() {\n    super();\n  }\n\n  onUp(ev: PointerEvent, down: Point) {\n    this.translated.x += ev.x - down.x;\n    this.translated.y += ev.y - down.y;\n  }\n\n  onDrag(ev: PointerEvent, down: Point) {\n    const nextX = this.translated.x + ev.x - down.x;\n    const nextY = this.translated.y + ev.y - down.y;\n    this.keyboardEl.style.transform = `translate(${nextX}px, ${nextY}px)`;\n  }\n}\n\n// for screen capture\nexport class GrayPointerHandler extends EmptyPointerHandler {\n  private readonly translated: Point = { x: 0, y: 0 };\n\n  private readonly pointerEl = document.getElementById(\n    \"pointer\"\n  ) as HTMLDivElement;\n\n  constructor() {\n    super();\n  }\n\n  onDown(ev: PointerEvent) {\n    this.pointerEl.style.opacity = \"0.8\";\n    this.pointerEl.style.top = `${ev.y - 50 / 2}px`;\n    this.pointerEl.style.left = `${ev.x - 50 / 2}px`;\n  }\n\n  onUp(ev: PointerEvent, down: Point) {\n    this.pointerEl.style.opacity = \"0\";\n  }\n\n  onDrag(ev: PointerEvent, down: Point) {\n    this.pointerEl.style.top = `${ev.y - 50 / 2}px`;\n    this.pointerEl.style.left = `${ev.x - 50 / 2}px`;\n  }\n}\n\nexport class ChangeNoteRestHandler extends EmptyPointerHandler {\n  private changeButton = document.getElementsByClassName(\"changeNoteRest\")[0];\n\n  constructor(private callback: IChangeNoteRestCallback) {\n    super();\n  }\n\n  onUp() {\n    const isNote = this.callback.isNoteInputMode();\n    const next = isNote ? \"rest\" : \"note\";\n    this.changeButton.className = this.changeButton.className.replace(\n      isNote ? \"note\" : \"rest\",\n      next\n    );\n    this.callback.change();\n  }\n}\n\nexport class ChangeBeamHandler extends EmptyPointerHandler {\n  private changeButton = document.getElementsByClassName(\"changeBeam\")[0];\n\n  constructor(private callback: ChangeBeamCallback) {\n    super();\n  }\n\n  onUp() {\n    const mode = this.callback.getMode();\n    const next = mode === \"nobeam\" ? \"beam\" : \"nobeam\";\n    this.changeButton.className = this.changeButton.className.replace(\n      mode,\n      next\n    );\n    this.callback.change(next);\n  }\n\n  onDoubleClick(ev: PointerEvent) {\n    console.log(\"double\");\n  }\n}\n\nexport class KeyPressHandler extends EmptyPointerHandler {\n  private target: HTMLDivElement | undefined;\n\n  constructor() {\n    super();\n  }\n\n  onDown(ev: PointerEvent) {\n    this.target = ev.target as HTMLDivElement;\n    this.target.className += \" pressed\";\n  }\n\n  onUp() {\n    if (!this.target) {\n      return;\n    }\n    this.target.className = this.target.className.replace(\" pressed\", \"\");\n  }\n}\n\nexport class BarInputHandler extends EmptyPointerHandler {\n  private candidateContainer: HTMLDivElement;\n  constructor(private callback: IBarInputCallback) {\n    super();\n    this.candidateContainer = document.querySelector(\n      \".bars .candidateContainer\"\n    ) as HTMLDivElement;\n  }\n  onClick(ev: PointerEvent) {\n    this.callback.commit({ type: \"bar\", subtype: \"single\" });\n  }\n  onLongDown(ev: PointerEvent) {\n    this.candidateContainer.style.visibility = \"visible\";\n  }\n  onUp(ev: PointerEvent, downPoint: Point) {\n    const [subtype] = (ev.target as HTMLDivElement).className\n      .split(\" \")\n      .filter((v) => v.match(/single|double|repeat/));\n    if (subtype) {\n      this.callback.commit({ type: \"bar\", subtype: subtype as BarTypes });\n    }\n    this.candidateContainer.style.visibility = \"hidden\";\n  }\n}\n\nexport class ChangeAccidentalHandler extends EmptyPointerHandler {\n  private elMap: Map<\"sharp\" | \"natural\" | \"flat\", HTMLDivElement>;\n  constructor(private callback: IChangeAccidentalCallback) {\n    super();\n    this.elMap = new Map([\n      [\"sharp\", document.querySelector(\".sharp\") as HTMLDivElement],\n      [\"natural\", document.querySelector(\".natural\") as HTMLDivElement],\n      [\"flat\", document.querySelector(\".flat\") as HTMLDivElement],\n    ]);\n  }\n  onClick(ev: PointerEvent) {\n    this.callback.next();\n    const current = this.callback.getMode();\n    for (const [mode, el] of this.elMap.entries()) {\n      if (mode === current) {\n        el.className = el.className + \" selected\";\n      } else {\n        el.className = mode;\n      }\n    }\n  }\n}\n\nexport class NoteInputHandler extends EmptyPointerHandler {\n  private readonly posToDurationMap = new Map<string, Duration>([\n    [\"12\", 1],\n    [\"13\", 2],\n    [\"14\", 4],\n    [\"22\", 8],\n    [\"23\", 16],\n    [\"24\", 32],\n  ]);\n  private targetClassNames: string[] = [];\n  private dragDy: number | undefined;\n\n  constructor(private callback: INoteInputCallback) {\n    super();\n  }\n\n  get duration(): Duration | undefined {\n    const pos = this.targetClassNames\n      .find((cn) => cn.match(/k[0-9][0-9]/))\n      ?.replace(\"k\", \"\");\n    if (!pos) {\n      return;\n    }\n    return this.posToDurationMap.get(pos);\n  }\n\n  private isBackspace(): boolean {\n    return this.targetClassNames.some((cn) => cn === \"backspace\");\n  }\n\n  onDown(ev: PointerEvent) {\n    const target = ev.target as HTMLDivElement;\n    this.targetClassNames = target.className.split(\" \");\n  }\n\n  onClick(ev: PointerEvent) {\n    if (this.duration) {\n      this.callback.commit(this.duration);\n    }\n    this.finish();\n  }\n\n  onLongDown(ev: PointerEvent) {\n    if (this.isBackspace()) {\n      return;\n    }\n    this.callback.startPreview(this.duration!, ev.x, ev.y);\n  }\n\n  onDrag(ev: PointerEvent, downPoint: Point) {\n    this.dragDy = downPoint.y - ev.y;\n    this.callback.updatePreview(this.duration!, this.dragDy);\n  }\n\n  onUp(ev: PointerEvent, downPoint: Point) {\n    if (this.isBackspace()) {\n      this.callback.backspace();\n    } else if (this.duration) {\n      this.callback.commit(this.duration, this.dragDy ?? 0);\n    }\n    this.finish();\n  }\n\n  finish() {\n    this.targetClassNames = [];\n    this.dragDy = undefined;\n    this.callback.finish();\n  }\n}\n\nexport class ArrowHandler extends EmptyPointerHandler {\n  constructor(private callback: IMoveCaretCallback) {\n    super();\n  }\n\n  onClick(ev: PointerEvent) {\n    const { className } = ev.target as HTMLDivElement;\n    if (className.match(/.*toLeft.*/)) {\n      this.callback.back();\n    } else if (className.match(/.*toRight.*/)) {\n      this.callback.forward();\n    }\n  }\n}\n\nexport class CanvasPointerHandler extends EmptyPointerHandler {\n  constructor(private callback: CanvasCallback) {\n    super();\n  }\n\n  onMove(ev: PointerEvent) {\n    this.callback.onMove({ x: ev.offsetX, y: ev.offsetY });\n  }\n}\n\nexport class TieHandler extends EmptyPointerHandler {\n  private tieEl = document.querySelector(\".changeTie\") as HTMLDivElement;\n  constructor(private callback: IChangeTieCallback) {\n    super();\n  }\n\n  onClick(ev: PointerEvent) {\n    const current = this.callback.getMode();\n    const next = !current ? \"tie\" : undefined;\n    this.callback.change(next);\n    this.tieEl.className = this.tieEl.className.replace(\n      next ? \"notie\" : \"tie\",\n      next ? \"tie\" : \"notie\"\n    );\n  }\n}\n", "import { BarInputCallback } from \"../callbacks/bar-input\";\nimport { CanvasCallback } from \"../callbacks/canvas\";\nimport { ChangeAccidentalCallback } from \"../callbacks/change-accidental\";\nimport { ChangeBeamCallback } from \"../callbacks/change-beam\";\nimport { ChangeNoteRestCallback } from \"../callbacks/change-note-rest\";\nimport { ChangeTieCallback } from \"../callbacks/change-tie\";\nimport { MoveCaretCallback } from \"../callbacks/move-caret\";\nimport { NoteInputCallback } from \"../callbacks/note-input\";\nimport { registerPointerHandlers } from \"./pointer-event\";\nimport {\n  ArrowHandler,\n  BarInputHandler,\n  CanvasPointerHandler,\n  ChangeAccidentalHandler,\n  ChangeBeamHandler,\n  ChangeNoteRestHandler,\n  GrayPointerHandler,\n  KeyboardDragHandler,\n  KeyPressHandler,\n  NoteInputHandler,\n  TieHandler,\n} from \"./pointer-handlers\";\n\nexport const registerCallbacks = () => {\n  // for tablet\n  registerPointerHandlers(\n    [\"keyboardBottom\", \"keyboardHandle\"],\n    [new KeyboardDragHandler()]\n  );\n  registerPointerHandlers(\n    [\"changeNoteRest\"],\n    [new ChangeNoteRestHandler(new ChangeNoteRestCallback())]\n  );\n  registerPointerHandlers(\n    [\"changeBeam\"],\n    [new ChangeBeamHandler(new ChangeBeamCallback())]\n  );\n  registerPointerHandlers([\"grayKey\", \"whiteKey\"], [new KeyPressHandler()]);\n  registerPointerHandlers(\n    [\"note\", \"rest\", \"backspace\"],\n    [new NoteInputHandler(new NoteInputCallback())]\n  );\n  registerPointerHandlers(\n    [\"toLeft\", \"toRight\"],\n    [new ArrowHandler(new MoveCaretCallback())]\n  );\n  registerPointerHandlers(\n    [\"bars\", \"candidate\"],\n    [new BarInputHandler(new BarInputCallback())]\n  );\n  registerPointerHandlers(\n    [\"accidentals\"],\n    [new ChangeAccidentalHandler(new ChangeAccidentalCallback())]\n  );\n  registerPointerHandlers([], [new GrayPointerHandler()]);\n  registerPointerHandlers(\n    [\"mainCanvas\"],\n    [new CanvasPointerHandler(new CanvasCallback())]\n  );\n  registerPointerHandlers(\n    [\"changeTie\"],\n    [new TieHandler(new ChangeTieCallback())]\n  );\n};\n", "import { registerCallbacks } from \"./pointer-event/register-pointer-handlers\";\nimport { CanvasManager } from \"./canvas\";\nimport { initCanvas } from \"./paint\";\nimport { getPreviewHeight, getPreviewWidth } from \"./score-preferences\";\nimport {\n  getShouldRender,\n  renderScore,\n  setUpdated,\n  updateMain,\n} from \"./score-renderer\";\n\nwindow.addEventListener(\"load\", () => {\n  console.log(\"start\");\n  if (\"serviceWorker\" in navigator) {\n    window.navigator.serviceWorker.register(\"./sw.js\");\n  }\n  const { canvas: mainCanvas, ctx: mainCtx } =\n    CanvasManager.getById(\"mainCanvas\");\n  const { canvas: previewCanvas } = CanvasManager.getById(\"previewCanvas\");\n  initCanvas({\n    leftPx: 0,\n    topPx: 0,\n    width: window.innerWidth,\n    height: window.innerHeight,\n    _canvas: mainCanvas,\n  });\n  initCanvas({\n    leftPx: 0,\n    topPx: 0,\n    width: getPreviewWidth(),\n    height: getPreviewHeight(),\n    _canvas: previewCanvas,\n  });\n  registerCallbacks();\n  updateMain();\n  scheduleRenderScore(mainCtx);\n});\n\nconst scheduleRenderScore = (ctx: CanvasRenderingContext2D) => {\n  requestAnimationFrame(() => {\n    if (getShouldRender()) {\n      renderScore(ctx);\n      setUpdated(false);\n    }\n    scheduleRenderScore(ctx);\n  });\n};\n"],
  "mappings": "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",
  "names": []
}
