{
  "version": 3,
  "sources": ["src/geometry.ts", "src/ui/pointer-event.ts", "src/bravura.ts", "src/notation/notation.ts", "src/style.ts", "src/paint.ts", "src/ui/pointer-handlers.ts", "src/pitch.ts", "src/index.ts"],
  "sourcesContent": ["export type Point = { x: number; y: number };\n\nexport const magnitude = (p1: Point, p2: Point): number => {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n};\n", "import { magnitude, Point } from \"../geometry\";\n\nexport interface PointerHandler {\n  onDown: (ev: PointerEvent) => void;\n  onUp: (ev: PointerEvent, downPoint: Point) => void;\n  onClick: (ev: PointerEvent) => void;\n  onLongDown: (ev: PointerEvent) => void;\n  onDrag: (ev: PointerEvent, downPoint: Point) => void;\n  onDoubleClick: (ev: PointerEvent) => void;\n}\n\nexport class PointerEventListener {\n  private kLongDownThresholdMs = 300;\n  private kDragThresholdMagnitude = 10;\n  private longDownTimer = 0;\n  private downClassName: string | undefined;\n  private downPoint: Point | undefined;\n  private isDragging = false;\n\n  constructor(\n    readonly targetClassNames: string[],\n    readonly handlers: PointerHandler[]\n  ) {}\n\n  listener(ev: Event) {\n    const pointerEvent = ev as PointerEvent;\n    const { className } = pointerEvent.target as HTMLElement;\n    switch (ev.type) {\n      case \"pointerdown\":\n        if (\n          this.targetClassNames.length > 0 &&\n          !this.targetClassNames.some((target) => className.includes(target))\n        ) {\n          return;\n        }\n        this.downClassName = className;\n        this.downPoint = pointerEvent;\n        this.onDown(pointerEvent);\n        this.longDownTimer = setTimeout(() => {\n          this.onLongDown(pointerEvent);\n          this.longDownTimer = 0;\n        }, this.kLongDownThresholdMs);\n        return;\n      case \"pointerup\":\n        if (!this.downPoint) {\n          return;\n        }\n        this.onUp(pointerEvent, this.downPoint);\n        if (this.longDownTimer > 0) {\n          clearTimeout(this.longDownTimer);\n          this.onClick(pointerEvent);\n        }\n        this.reset();\n        return;\n      case \"pointermove\":\n        if (!this.downPoint) {\n          return;\n        }\n        if (this.isDragging) {\n          this.onDrag(pointerEvent, this.downPoint);\n        } else if (\n          magnitude(pointerEvent, this.downPoint!) >\n          this.kDragThresholdMagnitude\n        ) {\n          this.isDragging = true;\n        }\n        return;\n      default:\n        return;\n    }\n  }\n\n  private reset() {\n    this.downClassName = undefined;\n    this.downPoint = undefined;\n    this.isDragging = false;\n  }\n\n  private onDown(ev: PointerEvent) {\n    this.handlers.forEach((h) => h.onDown(ev));\n  }\n\n  private onUp(ev: PointerEvent, down: Point) {\n    this.handlers.forEach((h) => h.onUp(ev, down));\n  }\n\n  private onClick(ev: PointerEvent) {\n    this.handlers.forEach((h) => h.onClick(ev));\n  }\n\n  private onLongDown(ev: PointerEvent) {\n    this.handlers.forEach((h) => h.onLongDown(ev));\n  }\n\n  private onDrag(ev: PointerEvent, down: Point) {\n    this.handlers.forEach((h) => h.onDrag(ev, down));\n  }\n}\n\nexport const registerPointerHandlers = (\n  classNames: string[],\n  handlers: PointerHandler[]\n) => {\n  const handler = new PointerEventListener(classNames, handlers);\n  [\"pointerdown\", \"pointermove\", \"pointerup\"].forEach((type) => {\n    window.addEventListener(type, (ev) => {\n      handler.listener(ev);\n    });\n  });\n};\n", "/**\n * Bravura specific geometries\n * @see https://raw.githubusercontent.com/steinbergmedia/bravura/master/redist/bravura_metadata.json\n */\nexport const bStaffHeight = 1000; // \u4E94\u7DDA\u306E\u9AD8\u3055, bravura\u306Eunits-per-em\nexport const UNIT = bStaffHeight / 4; // \u4E94\u7DDA1\u9593\u306E\u9AD8\u3055\nexport const bStaffLineWidth = 32.5; // 1000 / 4 * 0.13\nexport const bLedgerLineThickness = 40; // 1000 / 4 * 0.16\nexport const bStemWidth = 30; // 1000 / 4 * 0.12\nexport const WIDTH_NOTE_HEAD_BLACK = 295; // 1000 / 4 * 1.18\nexport const WIDTH_NOTE_HEAD_WHOLE = 422; // 1000 / 4 * 1.688\nexport const EXTENSION_LEDGER_LINE = 0.2;\nexport const bThinBarlineThickness = 0.16; // e.g. a normal barline, or each of the lines of a double barline\nexport const bBeamThickness = 0.5;\nexport const bBeamSpacing = 0.25;\n\n// 1 = UNIT\ntype Point = {\n  x: number;\n  y: number;\n};\ntype BBox = {\n  ne: Point; // \u53F3\u4E0A\n  sw: Point; // \u5DE6\u4E0B\n};\nexport type Path = {\n  path2d: Path2D;\n  bbox: BBox;\n};\n\n/**\n * Clefs\n * @see https://w3c.github.io/smufl/latest/tables/clefs.html\n */\n// E050\nexport const bClefG: Path = {\n  path2d: new Path2D(\n    \"M364,-252c-245,0 -364,165 -364,339c0,202 153,345 297,464c12,10 11,12 9,24c-7,41 -14,106 -14,164c0,104 24,229 98,311c20,22 51,48 65,48c11,0 37,-28 52,-50c41,-60 65,-146 65,-233c0,-153 -82,-280 -190,-381c-6,-6 -8,-7 -6,-19l25,-145c3,-18 3,-18 29,-18c147,0 241,-113 241,-241c0,-113 -67,-198 -168,-238c-14,-6 -15,-5 -13,-17c11,-62 29,-157 29,-214c0,-170 -130,-200 -197,-200c-151,0 -190,98 -190,163c0,62 40,115 107,115c61,0 96,-47 96,-102c0,-58 -36,-85 -67,-94c-23,-7 -32,-10 -32,-17c0,-13 26,-29 80,-29c59,0 159,18 159,166c0,47 -15,134 -27,201c-2,12 -4,11 -15,9c-20,-4 -46,-6 -69,-6zM80,20c0,-139 113,-236 288,-236c20,0 40,2 56,5c15,3 16,3 14,14l-50,298c-2,11 -4,12 -20,8c-61,-17 -100,-60 -100,-117c0,-46 30,-89 72,-107c7,-3 15,-6 15,-13c0,-6 -4,-11 -12,-11c-7,0 -19,3 -27,6c-68,23 -115,87 -115,177c0,85 57,164 145,194c18,6 18,5 15,24l-21,128c-2,11 -4,12 -14,4c-47,-38 -93,-75 -153,-142c-83,-94 -93,-173 -93,-232zM470,943c-61,0 -133,-96 -133,-252c0,-32 2,-66 6,-92c2,-13 6,-14 13,-8c79,69 174,159 174,270c0,55 -27,82 -60,82zM441,117c-12,1 -13,-2 -11,-14l49,-285c2,-12 4,-12 16,-6c56,28 94,79 94,142c0,88 -67,156 -148,163z\"\n  ),\n  bbox: { ne: { x: 2.684, y: 4.392 }, sw: { x: 0, y: -2.632 } },\n};\n\n/**\n * Noteheads\n * @see https://w3c.github.io/smufl/latest/tables/noteheads.html\n */\n// E0A2\nexport const bNoteHeadWhole: Path = {\n  path2d: new Path2D(\n    \"M216 125c93 0 206 -52 206 -123c0 -70 -52 -127 -216 -127c-149 0 -206 60 -206 127c0 68 83 123 216 123zM111 63c-2 -8 -3 -16 -3 -24c0 -32 15 -66 35 -89c21 -28 58 -52 94 -52c10 0 21 1 31 4c33 8 46 36 46 67c0 60 -55 134 -124 134c-31 0 -68 -5 -79 -40z\"\n  ),\n  bbox: {\n    ne: { x: 1.688, y: 0.5 },\n    sw: { x: 0, y: -0.5 },\n  },\n};\n// E0A3\nexport const bNoteHeadHalf: Path = {\n  path2d: new Path2D(\n    \"M97 -125c-55 0 -97 30 -97 83c0 52 47 167 196 167c58 0 99 -32 99 -83c0 -33 -33 -167 -198 -167zM75 -87c48 0 189 88 189 131c0 7 -3 13 -6 19c-7 12 -18 21 -37 21c-47 0 -192 -79 -192 -128c0 -7 3 -14 6 -20c7 -12 19 -23 40 -23z\"\n  ),\n  bbox: { ne: { x: 1.18, y: 0.5 }, sw: { x: 0, y: -0.5 } },\n};\n// E0A4\nexport const bNoteHead: Path = {\n  path2d: new Path2D(\n    \"M0 -42c0 86 88 167 198 167c57 0 97 -32 97 -83c0 -85 -109 -167 -198 -167c-54 0 -97 31 -97 83z\"\n  ),\n  bbox: { ne: { x: 1.18, y: 0.5 }, sw: { x: 0, y: -0.5 } },\n};\n\n/**\n * Flags\n * @see https://w3c.github.io/smufl/latest/tables/flags.html\n */\nexport type FlagUp = Path & {\n  stemUpNW: Point;\n};\nexport type FlagDown = Path & {\n  stemDownSW: Point;\n};\nexport type RestPath = Path & {\n  top: number; // \u7B2C\u4E94\u7DDA\u3068path\u539F\u70B9\u306E\u8DDD\u96E2 1 = UNIT\n};\n// E240\nexport const bFlag8Up: FlagUp = {\n  path2d: new Path2D(\n    \"M238 -790c-5 -17 -22 -23 -28 -19s-16 13 -16 29c0 4 1 9 3 15c17 45 24 92 24 137c0 59 -9 116 -24 150c-36 85 -131 221 -197 233v239c0 12 8 15 19 15c10 0 18 -6 21 -22c16 -96 58 -182 109 -261c63 -100 115 -218 115 -343c0 -78 -26 -173 -26 -173z\"\n  ),\n  stemUpNW: { x: 0, y: -0.04 },\n  bbox: {\n    ne: { x: 1.056, y: 0.03521239682756091 },\n    sw: { x: 0, y: -3.240768470618394 },\n  },\n};\n// E241\nexport const bFlag8Down: FlagDown = {\n  path2d: new Path2D(\n    \"M240 760c-10 29 7 48 22 48c7 0 13 -4 16 -15c8 -32 28 -103 28 -181c0 -125 -61 -244 -124 -343c-51 -79 -125 -166 -142 -261c-2 -16 -15 -22 -24 -22c-8 0 -16 5 -16 15v235c134 45 184 126 221 210c15 34 40 118 40 177c0 45 -7 95 -21 137z\"\n  ),\n  stemDownSW: { x: 0, y: 0.132 },\n  bbox: { ne: { x: 1.224, y: 3.232896633157715 }, sw: { x: 0, y: -0.0575672 } },\n};\n// E242\nexport const bFlag16Up: FlagUp = {\n  path2d: new Path2D(\n    \"M272 -796c-6 -13 -13 -17 -20 -17c-14 0 -22 13 -22 26c0 3 0 5 1 9c5 30 8 60 8 89c0 52 -9 101 -32 149c-69 140 -140 142 -202 144h-5v388c0 7 11 10 17 10s18 -2 20 -13c17 -106 73 -122 127 -180c72 -78 98 -106 108 -174c2 -12 3 -23 3 -36 c0 -61 -22 -121 -25 -127c-1 -3 -1 -5 -1 -7c0 -4 1 -6 1 -9c18 -37 29 -78 29 -120v-22c0 -48 -3 -105 -7 -110zM209 -459c2 -3 4 -4 7 -4c5 0 12 3 13 6c5 8 5 18 7 26c1 7 1 13 1 20c0 32 -9 63 -27 89c-33 49 -87 105 -148 105h-8c-8 0 -14 -6 -14 -10c0 -1 0 -2 1 -3 c21 -82 67 -106 114 -160c21 -24 38 -44 54 -69z\"\n  ),\n  stemUpNW: { x: 0, y: -0.088 },\n  bbox: { ne: { x: 1.116, y: 0.008 }, sw: { x: 0, y: -3.252 } },\n};\n// E243\nexport const bFlag16Down: FlagDown = {\n  path2d: new Path2D(\n    \"M240 786c-3 17 5 25 17 26c12 0 19 1 24 -22c16 -80 15 -178 -21 -253c0 -3 -1 -5 -1 -9c0 -3 0 -5 1 -7c3 -6 25 -66 25 -127c0 -13 -1 -25 -3 -36c-24 -157 -221 -200 -245 -354c-2 -11 -13 -13 -20 -13c-10 0 -17 5 -17 10v387h5c62 2 143 5 212 145 c38 78 38 169 23 253zM226 456c-3 0 -5 -1 -7 -4c-16 -26 -33 -46 -54 -69c-47 -55 -103 -78 -124 -160c-1 -1 -1 -2 -1 -3c0 -5 6 -10 14 -10h8c61 0 125 56 158 105c18 26 27 56 27 89c0 6 0 13 -1 20c-2 8 -2 18 -7 25c-1 4 -8 7 -13 7z\"\n  ),\n  stemDownSW: { x: 0, y: 0.128 },\n  bbox: {\n    ne: { x: 1.1635806326044895, y: 3.2480256 },\n    sw: { x: -0.000019418183745617774, y: -0.03601094374150052 },\n  },\n};\n// E244\nexport const bFlag32Up: FlagUp = {\n  path2d: new Path2D(\n    \"M260 -673c0 -9 1 -18 1 -28c0 -43 -4 -89 -7 -95c-7 -11 -14 -16 -20 -16c-2 0 -4 1 -6 2c-7 3 -13 12 -13 24c0 2 1 4 1 7c5 29 8 57 8 85c0 48 -9 93 -31 137c-64 130 -130 132 -188 134h-5v560c0 7 8 12 14 12c10 0 17 -10 18 -19c17 -100 71 -116 121 -170 c67 -73 90 -100 101 -161c2 -9 2 -18 2 -28c0 -39 -11 -80 -20 -106c14 -29 21 -61 21 -93c0 -57 -21 -112 -23 -119c-1 -2 -1 -4 -1 -6c0 -3 0 -5 1 -7c15 -36 24 -74 26 -113zM208 -181c-55 93 -114 117 -169 117c16 -97 65 -114 114 -168c23 -25 41 -44 55 -62 c5 17 10 34 12 44c1 7 3 13 3 21c0 13 -4 28 -15 48zM219 -456c1 8 2 16 2 24c0 81 -90 177 -170 177c-9 0 -14 -9 -12 -16c22 -73 63 -95 106 -146l5 -5c17 -20 31 -37 46 -59c1 -3 4 -4 7 -4c5 0 10 3 11 6c3 7 3 15 5 23z\"\n  ),\n  stemUpNW: { x: 0, y: 0.376 },\n  bbox: { ne: { x: 1.044, y: 0.596 }, sw: { x: 0, y: -3.248 } },\n};\n// E245\nexport const bFlag32Down: FlagDown = {\n  path2d: new Path2D(\n    \"M273 676v-11c-4 -64 -9 -75 -22 -100l-4 -7c-2 -3 -3 -5 -3 -9l3 -5v-2c4 -10 20 -53 20 -105c0 -34 -7 -72 -23 -101c9 -27 22 -71 22 -114c0 -10 0 -20 -2 -29c-11 -64 -35 -92 -105 -168c-52 -57 -109 -73 -126 -177c-1 -9 -9 -20 -19 -20c-8 0 -14 4 -14 13v589 c61 2 125 4 201 140c23 41 31 70 31 98c0 34 -12 65 -20 110c0 3 -1 5 -1 7c0 13 7 23 14 26c2 1 4 1 6 1c35 0 42 -116 42 -136zM39 268c0 -5 4 -13 13 -13h5c81 0 173 103 173 185c0 8 -1 17 -2 25c-2 8 -2 16 -5 23c-1 3 -7 6 -12 6c-3 0 -6 -1 -8 -4 c-16 -25 -32 -44 -52 -67c-45 -53 -91 -75 -112 -155zM229 243c-3 11 -8 32 -14 51c-14 -18 -32 -38 -56 -64c-52 -57 -103 -73 -120 -177c0 -1 0 -2 2 -3c57 0 118 26 175 122c12 21 16 37 16 50c0 8 -2 14 -3 21z\"\n  ),\n  stemDownSW: { x: 0, y: -0.448 },\n  bbox: { ne: { x: 1.092, y: 3.248 }, sw: { x: 0, y: -0.687477099907407 } },\n};\n// E4E3\nexport const bRest1: RestPath = {\n  path2d: new Path2D(\n    \"M282 -109c0 -14 -12 -26 -26 -26h-230c-15 0 -26 12 -26 26v92c0 15 11 26 26 26h230c14 0 26 -11 26 -26v-92z\"\n  ),\n  top: 1,\n  bbox: { ne: { x: 1.128, y: 0.036 }, sw: { x: 0, y: -0.54 } },\n};\n// E4E4\nexport const bRest2: RestPath = {\n  path2d: new Path2D(\n    \"M282 24c0 -14 -12 -26 -26 -26h-230c-15 0 -26 12 -26 26v92c0 15 11 26 26 26h230c14 0 26 -11 26 -26v-92z\"\n  ),\n  top: 2,\n  bbox: { ne: { x: 1.128, y: 0.568 }, sw: { x: 0, y: -0.008 } },\n};\n// E4E5\nexport const bRest4: RestPath = {\n  path2d: new Path2D(\n    \"M78 -38l-49 60s-10 10 -10 24c0 8 4 19 14 29c45 47 60 90 60 127c0 72 -57 123 -61 134c-3 6 -4 11 -4 16c0 14 10 21 20 21c6 0 13 -3 18 -8c17 -17 165 -193 165 -193s4 -9 4 -19c0 -5 -1 -10 -4 -15c-26 -41 -62 -89 -66 -147v-3l-1 -7v-3c0 -56 31 -93 69 -139 c11 -12 37 -45 37 -57c0 -3 -2 -4 -5 -4c-2 0 -4 0 -8 1l-1 1c-17 6 -50 17 -79 17c-42 0 -63 -32 -63 -73c0 -9 1 -18 4 -26c2 -9 13 -36 26 -36c8 -7 16 -15 16 -24c0 -2 -1 -4 -2 -7c-1 -4 -8 -6 -15 -6c-8 0 -18 3 -26 9c-73 56 -116 105 -116 155c0 49 34 96 86 96 l8 -3h4c4 -1 12 -3 16 -3c5 0 9 1 11 5c1 1 1 3 1 4c0 2 -4 10 -6 14c-13 21 -27 40 -43 60z\"\n  ),\n  top: 2,\n  bbox: { ne: { x: 1.08, y: 1.492 }, sw: { x: 0.004, y: -1.5 } },\n};\n// E4E6\nexport const bRest8: RestPath = {\n  path2d: new Path2D(\n    \"M134 107v-10c33 0 83 60 90 66c6 4 9 4 11 4c2 -1 12 -6 12 -16c-1 -5 -6 -21 -10 -39c0 0 -98 -351 -101 -353c-10 -8 -24 -10 -35 -10c-6 0 -29 1 -29 13c18 66 90 265 93 280c1 4 1 8 1 11c0 5 -1 9 -5 9c-1 0 -3 0 -5 -1c-13 -7 -22 -11 -36 -15 c-11 -4 -25 -7 -39 -7c-19 0 -38 6 -54 17c-15 12 -27 30 -27 51c0 37 30 67 67 67s67 -30 67 -67z\"\n  ),\n  top: 2,\n  bbox: { ne: { x: 0.988, y: 0.696 }, sw: { x: 0, y: -1.004 } },\n};\n// E4E7\nexport const bRest16: RestPath = {\n  path2d: new Path2D(\n    \"M208 111v-10c34 1 84 61 91 67c3 2 6 4 11 4c2 -1 10 -5 10 -11c0 -1 -1 -2 -1 -4c-2 -13 -27 -101 -27 -101s-19 -67 -45 -152l-116 -381c-4 -11 -9 -23 -38 -23c-22 0 -31 10 -31 19l1 1v1l95 283v1l1 1c0 4 -2 6 -4 6c-23 -12 -49 -21 -75 -21c-38 0 -80 27 -80 68 c0 38 30 68 68 68c37 0 68 -30 68 -68c0 -3 0 -6 -1 -10c14 0 41 12 49 31c7 15 58 164 58 180c0 5 -2 7 -5 7c-2 0 -4 -1 -7 -2c-23 -13 -51 -22 -78 -22c-38 0 -80 27 -80 68c0 38 31 68 68 68c38 0 68 -30 68 -68z\"\n  ),\n  top: 2,\n  bbox: { ne: { x: 1.28, y: 0.716 }, sw: { x: 0, y: -2 } },\n};\n// E4E8\nexport const bRest32: RestPath = {\n  path2d: new Path2D(\n    \"M353 419c2 0 10 -2 10 -11c0 -1 -1 -2 -1 -4c-2 -12 -26 -101 -26 -101s-172 -770 -175 -782c-4 -11 -7 -21 -39 -21c-21 0 -27 8 -27 16c0 2 0 4 1 6c2 7 71 282 71 286c0 3 -3 6 -6 6c-1 0 -2 0 -3 -1c-23 -13 -51 -22 -78 -22c-38 0 -80 27 -80 68c0 38 31 68 68 68 c38 0 68 -30 68 -68c0 -3 0 -6 -1 -10c15 1 46 14 51 35l40 164c0 5 -2 13 -7 13c-1 0 -2 0 -3 -1c-23 -12 -49 -22 -75 -22c-10 0 -19 2 -27 4c-10 3 -19 7 -27 14c-16 12 -28 30 -28 50c0 38 30 68 68 68c37 0 68 -30 68 -68c0 -3 0 -6 -1 -9c16 0 49 20 54 36l39 160v1 l1 2c0 7 -4 17 -11 17c-1 0 -3 0 -4 -1c-23 -12 -50 -22 -76 -22c-10 0 -18 2 -26 4c-10 3 -20 7 -28 14c-16 12 -28 30 -28 50c0 38 31 68 68 68c38 0 68 -30 68 -68v-9c34 0 84 61 91 66c3 2 6 4 11 4z\"\n  ),\n  top: 2,\n  bbox: { ne: { x: 1.452, y: 1.704 }, sw: { x: 0, y: -2 } },\n};\n\n/**\n * Accidentals\n * @see https://w3c.github.io/smufl/latest/tables/standard-accidentals-12-edo.html\n */\n// E260\nexport const bAccidentalFlat: Path = {\n  path2d: new Path2D(\n    \"M12 -170c-8 10 -12 581 -12 581c1 18 17 28 31 28c10 0 19 -6 19 -17c0 -20 -6 -260 -7 -282c0 -7 4 -14 11 -17c2 -1 3 -1 5 -1c5 0 16 9 22 14c14 9 38 17 55 17c46 -3 90 -39 90 -96c0 -46 -31 -107 -120 -169c-25 -17 -49 -44 -79 -61c0 0 -3 -2 -6 -2s-6 1 -9 5z M47 -81c0 -5 2 -15 11 -15c3 0 6 1 10 3c43 27 89 81 89 135c0 25 -12 58 -41 58c-23 0 -63 -29 -70 -49c-1 -4 -2 -16 -2 -32c0 -40 3 -100 3 -100z\"\n  ),\n  bbox: {\n    ne: { x: 0.904, y: 1.756 },\n    sw: { x: 0, y: -0.7 },\n  },\n};\n// E261\nexport const bAccidentalNatural: Path = {\n  path2d: new Path2D(\n    \"M141 181l15 5c1 1 3 1 4 1c4 0 8 -3 8 -8v-502c0 -7 -6 -12 -12 -12h-13c-7 0 -12 5 -12 12v149c0 8 -7 11 -17 11c-29 0 -85 -24 -99 -30c-1 -1 -3 -1 -4 -1l-2 -1c-6 0 -9 3 -9 9v515c0 7 5 12 12 12h13c6 0 12 -5 12 -12v-167c0 -4 4 -5 10 -5c26 0 90 23 90 23 c1 0 2 1 4 1zM37 39v-103c0 -4 5 -6 12 -6c25 0 82 23 82 41v103c0 4 -3 5 -9 5c-24 0 -85 -26 -85 -40z\"\n  ),\n  bbox: {\n    ne: { x: 0.672, y: 1.364 },\n    sw: { x: 0, y: -1.34 },\n  },\n};\n// E262\nexport const bAccidentalSharp: Path = {\n  path2d: new Path2D(\n    \"M237 118l-26 -10c-8 -3 -13 -22 -13 -29v-93c0 -12 7 -18 13 -18l26 10c2 1 3 1 5 1c4 0 7 -3 7 -8v-71c0 -6 -5 -14 -12 -17c0 0 -21 -8 -28 -11s-11 -15 -11 -23v-142c0 -6 -6 -11 -17 -11c-7 0 -13 5 -13 11v125c0 6 -5 18 -14 18l-2 -1h-1l-61 -25 c-5 -2 -10 -9 -10 -22v-139c0 -6 -7 -11 -17 -11c-7 0 -13 5 -13 11v123c0 5 -5 16 -12 16c-1 0 -2 0 -3 -1c-9 -3 -23 -9 -24 -9l-2 -1c-6 0 -9 3 -9 9v71c0 6 5 14 12 16c0 0 21 9 27 11c6 3 11 12 11 23v99c0 8 -6 18 -14 18l-1 -1c-8 -4 -23 -10 -24 -10l-2 -1 c-6 0 -9 3 -9 9v71c0 6 5 14 12 16c0 0 20 8 26 11s12 13 12 27v135c0 6 6 11 16 11c7 0 14 -5 14 -11v-120c0 -8 3 -20 12 -20c17 4 51 18 63 25c9 6 12 19 13 29v130c0 6 6 11 16 11c8 0 14 -5 14 -11v-122c0 -8 7 -13 14 -13c5 1 25 9 25 9c2 1 3 1 5 1c4 0 7 -3 7 -8 v-71c0 -6 -5 -14 -12 -17zM168 -45c2 9 4 37 4 64s-2 52 -4 57c-2 4 -8 6 -15 6c-25 0 -71 -21 -73 -38c-2 -8 -3 -43 -3 -74c0 -24 1 -46 3 -50c1 -3 6 -5 12 -5c23 0 70 20 76 40z\"\n  ),\n  bbox: {\n    ne: { x: 0.996, y: 1.4 },\n    sw: { x: 0, y: -1.392 },\n  },\n};\n", "import { Accidental, Duration } from \"./types\";\nimport {\n  bAccidentalFlat,\n  bAccidentalNatural,\n  bAccidentalSharp,\n  bFlag16Down,\n  bFlag16Up,\n  bFlag32Down,\n  bFlag32Up,\n  bFlag8Down,\n  bFlag8Up,\n  bNoteHead,\n  bNoteHeadHalf,\n  bNoteHeadWhole,\n  bRest1,\n  bRest16,\n  bRest2,\n  bRest32,\n  bRest4,\n  bRest8,\n  FlagDown,\n  FlagUp,\n  Path,\n  RestPath,\n  WIDTH_NOTE_HEAD_BLACK,\n  WIDTH_NOTE_HEAD_WHOLE,\n} from \"../bravura\";\n\nexport const upFlagMap = new Map<Duration, FlagUp>([\n  [8, bFlag8Up],\n  [16, bFlag16Up],\n  [32, bFlag32Up],\n]);\n\nexport const downFlagMap = new Map<Duration, FlagDown>([\n  [8, bFlag8Down],\n  [16, bFlag16Down],\n  [32, bFlag32Down],\n]);\n\nexport const restPathMap = new Map<Duration, RestPath>([\n  [1, bRest1],\n  [2, bRest2],\n  [4, bRest4],\n  [8, bRest8],\n  [16, bRest16],\n  [32, bRest32],\n]);\n\nexport const accidentalPathMap = new Map<Accidental, Path>([\n  [\"sharp\", bAccidentalSharp],\n  [\"natural\", bAccidentalNatural],\n  [\"flat\", bAccidentalFlat],\n]);\n\nexport const numOfBeamsMap = new Map<Duration, number>([\n  [8, 1],\n  [16, 2],\n  [32, 3],\n]);\n\nexport const noteHeadByDuration = (duration: Duration): Path => {\n  switch (duration) {\n    case 1:\n      return bNoteHeadWhole;\n    case 2:\n      return bNoteHeadHalf;\n    default:\n      return bNoteHead;\n  }\n};\n\nexport const noteHeadWidth = (duration: Duration): number => {\n  if (duration === 1) {\n    return WIDTH_NOTE_HEAD_WHOLE;\n  }\n  return WIDTH_NOTE_HEAD_BLACK;\n};\n", "import {\n  Accidental,\n  Bar,\n  Clef,\n  Duration,\n  MusicalElement,\n  Note,\n  Pitch,\n  PitchAcc,\n  Rest,\n} from \"./notation/types\";\nimport {\n  bBeamSpacing,\n  bBeamThickness,\n  bClefG,\n  bStaffHeight,\n  bStemWidth,\n  bThinBarlineThickness,\n  EXTENSION_LEDGER_LINE,\n  Path,\n  UNIT,\n} from \"./bravura\";\nimport {\n  accidentalPathMap,\n  downFlagMap,\n  noteHeadByDuration,\n  noteHeadWidth,\n  numOfBeamsMap,\n  restPathMap,\n  upFlagMap,\n} from \"./notation/notation\";\nimport { Matrix } from \"./matrix\";\nimport { Point } from \"./geometry\";\n\nexport type CaretStyle = { x: number; y: number; width: number; elIdx: number };\n\n// 1\u97F3\ntype NoteStyle = {\n  type: \"note\";\n  note: Note;\n  elements: NoteStyleElement[];\n};\n// 1\u97F3\u306B\u542B\u307E\u308C\u308B\u63CF\u753B\u30D1\u30FC\u30C4\nexport type NoteStyleElement =\n  | { type: \"head\"; position: Point; duration: Duration }\n  | { type: \"accidental\"; position: Point; accidental: Accidental }\n  | { type: \"ledger\"; position: Point; width: number }\n  | {\n      type: \"flag\";\n      position: Point;\n      duration: Duration;\n      direction: \"up\" | \"down\";\n    }\n  | {\n      type: \"stem\";\n      center: number;\n      top: number;\n      bottom: number;\n      width: number;\n    };\nexport type RestStyle = { type: \"rest\"; rest: Rest; position: Point };\nexport type BarStyle = { type: \"bar\"; bar: Bar; lineWidth: number };\nexport type BeamStyle = {\n  type: \"beam\";\n  nw: Point;\n  ne: Point;\n  sw: Point;\n  se: Point;\n};\ntype PaintElement =\n  | NoteStyle\n  | RestStyle\n  | BeamStyle\n  | BarStyle\n  | {\n      type: \"clef\";\n      clef: Clef;\n    }\n  | {\n      type: \"gap\";\n    };\n\ntype Section = {\n  start: number;\n  end: number;\n};\n\nexport const createSection = (start: number, end?: number): Section => {\n  return { start, end: end ?? start };\n};\nexport const calcSection = (\n  start: number,\n  scale: number,\n  path: Path\n): Section => {\n  const width = getPathWidth(path) * scale;\n  return createSection(start, start + width);\n};\nconst determineNoteStyle = ({\n  note,\n  stemDirection,\n  beamed = false,\n}: {\n  note: Note;\n  stemDirection?: \"up\" | \"down\";\n  beamed?: boolean;\n}): { element: NoteStyle; width: number; stemOffsetLeft: number } => {\n  const elements: NoteStyleElement[] = [];\n  const sections: Section[] = [];\n\n  // accidentals\n  const accSections: Section[] = [];\n  for (const p of note.pitches) {\n    if (!p.accidental) {\n      continue;\n    }\n    const { pitch, accidental } = p;\n    const y = pitchToY(0, pitch, 1);\n    accSections.push(calcSection(0, 1, accidentalPathMap.get(accidental)!));\n    elements.push({\n      type: \"accidental\",\n      position: { x: 0, y },\n      accidental,\n    });\n  }\n  sections.push(...accSections);\n\n  // ledger lines\n  let leftOfLedgerLine = 0;\n  if (accSections.length > 0) {\n    // Accidental\u304C\u63CF\u753B\u3055\u308C\u3066\u3044\u308C\u3070ledger line\u958B\u59CB\u4F4D\u7F6E\u3092\u53F3\u306B\u305A\u3089\u3059\n    leftOfLedgerLine = accSections[0].end + gapWithAccidental(1);\n  }\n  const pitches = note.pitches.map((p) => p.pitch);\n  const minPitch = Math.min(...pitches);\n  const maxPitch = Math.max(...pitches);\n  const ledgerWidth = ledgerLineWidth(note.duration);\n  const ledgerSections: Section[] = [];\n  // min<=0 && max<=0 : min\u306E\u307F\u63CF\u753B\n  // min>=12 && max>=12 : max\u306E\u307F\u63CF\u753B\n  // min===max && min<=0 : min\u306E\u307F\u63CF\u753B\n  // min===max && min>=12 : min\u306E\u307F\u63CF\u753B\n  // min<=0 && max>=12 : min, max\u63CF\u753B\n  if (minPitch <= 0) {\n    // C4\n    for (let p = 0; p >= minPitch; p -= 2) {\n      elements.push({\n        type: \"ledger\",\n        width: ledgerWidth,\n        position: { x: leftOfLedgerLine, y: pitchToY(0, p, 1) },\n      });\n      ledgerSections.push({\n        start: leftOfLedgerLine,\n        end: leftOfLedgerLine + ledgerWidth,\n      });\n    }\n  }\n  if (maxPitch >= 12) {\n    // A5\n    for (let p = 12; p < maxPitch + 1; p += 2) {\n      elements.push({\n        type: \"ledger\",\n        width: ledgerWidth,\n        position: { x: leftOfLedgerLine, y: pitchToY(0, p, 1) },\n      });\n      ledgerSections.push({\n        start: leftOfLedgerLine,\n        end: leftOfLedgerLine + ledgerWidth,\n      });\n    }\n  }\n  sections.push(...ledgerSections);\n\n  // noteheads\n  let leftOfNotehead = 0;\n  if (ledgerSections.length > 0) {\n    // Ledger line\u304C\u63CF\u753B\u3055\u308C\u3066\u3044\u308C\u3070note\u63CF\u753B\u4F4D\u7F6E\u3092\u53F3\u306B\u305A\u3089\u3059\n    leftOfNotehead = ledgerSections[0].start + ledgerLineExtension(1);\n  } else if (accSections.length > 0) {\n    // Accidental\u304C\u63CF\u753B\u3055\u308C\u3066\u3044\u308C\u3070note\u63CF\u753B\u4F4D\u7F6E\u3092\u53F3\u306B\u305A\u3089\u3059\n    leftOfNotehead = accSections[0]?.end + gapWithAccidental(1) * 2; // *2\u3068\u306F\uFF1F\n  }\n  // stem\u306E\u5DE6\u53F3\u3069\u3061\u3089\u306B\u97F3\u7B26\u3092\u63CF\u753B\u3059\u308B\u304B\n  if (!stemDirection) {\n    stemDirection = getStemDirection(pitches);\n  }\n  const notesLeftOfStem: PitchAcc[] = [];\n  const notesRightOfStem: PitchAcc[] = [];\n  const pitchAsc = sortPitch(note.pitches, \"asc\");\n  if (stemDirection === \"up\") {\n    // \u4E0A\u5411\u304Dstem\n    for (let i = 0; i < pitchAsc.length; i++) {\n      if (i === 0) {\n        // \u6700\u4F4E\u97F3\u306F\u5DE6\u5074\n        notesLeftOfStem.push(pitchAsc[i]);\n      } else if (pitchAsc[i].pitch - pitchAsc[i - 1].pitch === 1) {\n        // 2\u5EA6\u306F\u53F3\u5074\n        notesRightOfStem.push(pitchAsc[i]);\n        if (i + 1 < pitchAsc.length) {\n          // \u53F3\u5074\u63CF\u753B\u3068\u306A\u3063\u305F\u6B21\u306E\u97F3\u306F\u5DE6\u5074\n          notesLeftOfStem.push(pitchAsc[++i]);\n        }\n      } else {\n        notesLeftOfStem.push(pitchAsc[i]);\n      }\n    }\n  } else {\n    // \u4E0B\u5411\u304Dstem\n    const pitchDesc = pitchAsc.concat().reverse();\n    for (let i = 0; i < pitchDesc.length; i++) {\n      if (i === 0) {\n        // \u6700\u4F4E\u97F3\u306F\u53F3\u5074\n        notesRightOfStem.push(pitchDesc[i]);\n      } else if (pitchDesc[i - 1].pitch - pitchDesc[i].pitch === 1) {\n        // 2\u5EA6\u306F\u5DE6\u5074\n        notesLeftOfStem.push(pitchDesc[i]);\n        if (i + 1 < pitchDesc.length) {\n          // \u5DE6\u5074\u63CF\u753B\u3068\u306A\u3063\u305F\u6B21\u306E\u97F3\u306F\u53F3\u5074\n          notesRightOfStem.push(pitchDesc[++i]);\n        }\n      } else {\n        notesRightOfStem.push(pitchDesc[i]);\n      }\n    }\n  }\n  const noteheadStemFlagSections: Section[] = [];\n  for (const p of notesLeftOfStem) {\n    noteheadStemFlagSections.push(\n      calcSection(leftOfNotehead, 1, noteHeadByDuration(note.duration))\n    );\n    elements.push({\n      type: \"head\",\n      position: {\n        x: leftOfNotehead,\n        y: pitchToY(0, p.pitch, 1),\n      },\n      duration: note.duration,\n    });\n  }\n  let leftOfStemOrNotehead = leftOfNotehead;\n  if (notesLeftOfStem.length > 0) {\n    // Stem\u5DE6\u5074\u306Bnotehead\u63CF\u753B\u3057\u3066\u3044\u305F\u3089notehead\u53F3\u7AEF\u3092stem\u958B\u59CB\u4F4D\u7F6E\u306B\u6307\u5B9A\u3059\u308B\n    leftOfStemOrNotehead = noteheadStemFlagSections[0].end;\n  }\n  if (!beamed) {\n    // stem, flag\n    const { elements: el, section } = determineStemFlagStyle({\n      left: leftOfStemOrNotehead,\n      duration: note.duration,\n      direction: stemDirection,\n      lowest: pitchAsc[0],\n      highest: pitchAsc[pitchAsc.length - 1],\n    });\n    section && noteheadStemFlagSections.push(section);\n    elements.push(...el);\n  }\n  for (const p of notesRightOfStem) {\n    noteheadStemFlagSections.push(\n      calcSection(leftOfNotehead, 1, noteHeadByDuration(note.duration))\n    );\n    elements.push({\n      type: \"head\",\n      position: {\n        x: leftOfNotehead,\n        y: pitchToY(0, p.pitch, 1),\n      },\n      duration: note.duration,\n    });\n  }\n  sections.push(...noteheadStemFlagSections);\n\n  return {\n    element: {\n      type: \"note\",\n      note,\n      elements,\n    },\n    width: maxSection(0, sections).end,\n    stemOffsetLeft: leftOfStemOrNotehead,\n  };\n};\n\n// note head\u304B\u3089\u306F\u307F\u51FA\u308B\u9577\u3055(\u7247\u65B9)\nconst ledgerLineExtension = (scale: number): number => {\n  return UNIT * EXTENSION_LEDGER_LINE * scale;\n};\n\nconst ledgerLineWidth = (duration: Duration): number => {\n  return noteHeadWidth(duration) + ledgerLineExtension(1) * 2;\n};\n\nconst getStemDirection = (pitches: Pitch[]): \"up\" | \"down\" => {\n  // B4\u304B\u3089\u6700\u3082\u9060\u3044\u97F3\u7A0B\u3092\u8A08\u7B97\u3059\u308B\n  // B4\u672A\u6E80 -> \u4E0A\u5411\u304D (\u697D\u8B5C\u306E\u66F8\u304D\u65B9p17)\n  const lowestToB4 = 6 - Math.min(...pitches);\n  const highestToB4 = Math.max(...pitches) - 6;\n  if (lowestToB4 > highestToB4) {\n    return \"up\";\n  } else if (highestToB4 > lowestToB4) {\n    return \"down\";\n  }\n  // calc direction by center of pitches if lowest and highest are same\n  return centerOfNotes(pitches) < 6 ? \"up\" : \"down\";\n};\n\nconst centerOfNotes = (pitches: Pitch[]): Pitch => {\n  const average = pitches.reduce((prev, curr) => prev + curr) / pitches.length;\n  return Math.round(average);\n};\nconst calcStemShape = ({\n  dnp,\n  direction,\n  lowest,\n  highest,\n  extension = 0,\n}: {\n  dnp: { topOfStaff: number; scale: number; duration: Duration };\n  direction: \"up\" | \"down\";\n  lowest: PitchAcc;\n  highest: PitchAcc;\n  extension?: number;\n}): { top: number; bottom: number } => {\n  const { topOfStaff, scale, duration } = dnp;\n  const heightOfB4 = topOfStaff + (bStaffHeight * scale) / 2;\n  let top: number;\n  let bottom: number;\n  if (direction === \"up\") {\n    // \u7B26\u982D\u306E\u53F3\u306B\u7B26\u5E79\u304C\u306F\u307F\u51FA\u308B\u306E\u3092\u88DC\u6B63\n    bottom = pitchToY(topOfStaff, lowest.pitch, scale) - 5;\n    if (highest.pitch < 0) {\n      // C4\u3088\u308A\u4F4E\u3044 -> top\u306FB4 (\u697D\u8B5C\u306E\u66F8\u304D\u65B9p17)\n      top = heightOfB4;\n    } else {\n      // stem\u306E\u9577\u3055\u306F\u57FA\u672C1\u30AA\u30AF\u30BF\u30FC\u30D6\u5206 (\u697D\u8B5C\u306E\u66F8\u304D\u65B9p17)\n      // 32\u5206\u4EE5\u964D\u306F1\u9593\u305A\u3064\u9577\u304F\u3059\u308B (\u697D\u8B5C\u306E\u66F8\u304D\u65B9p53)\n      const index = duration < 32 ? highest.pitch + 7 : highest.pitch + 8;\n      top = pitchToY(topOfStaff, index, scale);\n    }\n    top -= extension;\n  } else {\n    top = pitchToY(topOfStaff, highest.pitch, scale);\n    if (lowest.pitch > 12) {\n      // A5\u3088\u308A\u9AD8\u3044 -> bottom\u306FB3\n      bottom = heightOfB4;\n    } else {\n      const index = duration < 32 ? lowest.pitch - 7 : lowest.pitch - 8;\n      bottom = pitchToY(topOfStaff, index, scale);\n    }\n    bottom += extension;\n  }\n  return { top, bottom };\n};\n\nconst maxSection = (left: number, sections: Section[]): Section => {\n  if (sections.length === 0) {\n    return { start: left, end: left };\n  }\n  const start = Math.min(...sections.map((section) => section?.start ?? left));\n  const end = Math.max(...sections.map((section) => section?.end ?? left));\n  return { start, end };\n};\n\nconst gapWithAccidental = (scale: number): number => {\n  return (UNIT / 4) * scale; // \u52D8\n};\n\nconst determineStemFlagStyle = ({\n  left,\n  duration,\n  direction,\n  lowest,\n  highest,\n  beamed,\n}: {\n  left: number;\n  duration: Duration;\n  direction: \"up\" | \"down\";\n  lowest: PitchAcc;\n  highest: PitchAcc;\n  beamed?: {\n    top?: number;\n    bottom?: number;\n  };\n}): { elements: NoteStyleElement[]; section?: Section } => {\n  if (duration === 1) {\n    return { elements: [] };\n  }\n  const elements: NoteStyleElement[] = [];\n  let { top, bottom } = calcStemShape({\n    dnp: { topOfStaff: 0, scale: 1, duration },\n    direction,\n    lowest,\n    highest,\n  });\n  let stemCenter: number;\n  let flagSection: Section | undefined;\n  if (direction === \"up\") {\n    stemCenter = left - bStemWidth / 2;\n    if (beamed) {\n      top = beamed.top!;\n    } else {\n      const path = upFlagMap.get(duration);\n      if (path) {\n        elements.push({\n          type: \"flag\",\n          position: {\n            x: stemCenter - bStemWidth / 2 + UNIT * path.stemUpNW.x,\n            y: top + UNIT * path.stemUpNW.y,\n          },\n          duration, // path\u3082\u6E21\u3057\u305F\u307B\u3046\u304C\u3044\u3044\u3093\u3060\u308D\u3046\u304B\n          direction,\n        });\n        flagSection = calcSection(left, 1, path);\n      }\n    }\n  } else {\n    stemCenter = left + bStemWidth / 2;\n    if (beamed) {\n      bottom = beamed.bottom!;\n    } else {\n      const path = downFlagMap.get(duration);\n      if (path) {\n        elements.push({\n          type: \"flag\",\n          position: {\n            x: stemCenter - bStemWidth / 2 + UNIT * path.stemDownSW.x,\n            y: bottom + UNIT * path.stemDownSW.y,\n          },\n          duration,\n          direction,\n        });\n        flagSection = calcSection(left, 1, path);\n      }\n    }\n  }\n  elements.push({\n    type: \"stem\",\n    center: stemCenter,\n    top,\n    bottom,\n    width: bStemWidth,\n  });\n\n  return {\n    elements,\n    section: flagSection ?? { start: left, end: left + bStemWidth },\n  };\n};\n\nconst determineRestStyle = (\n  rest: Rest\n): { element: RestStyle; width: number } => {\n  const path = restPathMap.get(rest.duration)!;\n  const position = {\n    x: 0,\n    y: UNIT * path.top,\n  };\n  const width = getPathWidth(path);\n  return {\n    element: {\n      type: \"rest\",\n      rest,\n      position,\n    },\n    width,\n  };\n};\n\nconst determineBarStyle = (bar: Bar): { element: BarStyle; width: number } => {\n  const width = bThinBarlineThickness * UNIT;\n  return { element: { type: \"bar\", bar, lineWidth: width }, width };\n};\n\nexport const pitchToY = (\n  topOfStaff: number,\n  pitch: Pitch,\n  scale: number\n): number => {\n  // middleC(C4)=0\u3068\u3059\u308B\n  // y\u539F\u70B9\u306F\u7B26\u982D\u306E\u4E2D\u5FC3(\u97F3\u7A0B\u3092\u793A\u3059\u9AD8\u3055)\n  const halfOfNoteHeadHeight = (bStaffHeight * scale) / 8;\n  const c4y = topOfStaff + UNIT * 4.5 * scale + halfOfNoteHeadHeight;\n  return c4y - pitch * halfOfNoteHeadHeight;\n};\nconst getBeamLinearFunc = ({\n  dnp,\n  stemDirection,\n  beamed,\n  arr,\n}: {\n  dnp: { topOfStaff: number; scale: number; duration: Duration };\n  stemDirection: \"up\" | \"down\";\n  beamed: Note[];\n  arr: { left: number; stemOffsetLeft: number }[];\n}): ((x: number) => number) => {\n  const firstEl = beamed[0];\n  const lastEl = beamed[beamed.length - 1];\n  const yDistance4th = (UNIT / 2) * 3 * dnp.scale;\n  const stemDistance =\n    arr[arr.length - 1].left +\n    arr[arr.length - 1].stemOffsetLeft -\n    (arr[0].left + arr[0].stemOffsetLeft);\n  let beamAngle: number;\n  let \u6700\u77EDstem\u3068beam\u306E\u4EA4\u70B9y: Point;\n  if (stemDirection === \"up\") {\n    if (beamed.length === 1) {\n      beamAngle = 0;\n    } else {\n      const pitchFirstHi = firstEl.pitches[firstEl.pitches.length - 1].pitch;\n      const pitchLastHi = lastEl.pitches[lastEl.pitches.length - 1].pitch;\n      const yFirst = pitchToY(dnp.topOfStaff, pitchFirstHi, dnp.scale);\n      const yLast = pitchToY(dnp.topOfStaff, pitchLastHi, dnp.scale);\n      const yDistance = yLast - yFirst;\n      if (pitchFirstHi > pitchLastHi) {\n        // \u53F3\u80A9\u4E0B\u304C\u308A\n        beamAngle =\n          (yDistance >= yDistance4th ? yDistance4th : yDistance) / stemDistance;\n      } else {\n        // \u53F3\u80A9\u4E0A\u304C\u308A\n        beamAngle =\n          (-yDistance >= yDistance4th ? -yDistance4th : yDistance) /\n          stemDistance;\n      }\n    }\n    // calc \u4EA4\u70B9\n    const beamedAndLeftOfStem = beamed.map((note, i) => ({\n      note,\n      leftOfStem: arr[i].left + arr[i].stemOffsetLeft,\n    }));\n    const highest = beamedAndLeftOfStem.sort(\n      (a, b) =>\n        b.note.pitches[b.note.pitches.length - 1].pitch -\n        a.note.pitches[a.note.pitches.length - 1].pitch\n    )[0];\n    const x = highest.leftOfStem;\n    const y = calcStemShape({\n      dnp,\n      direction: stemDirection,\n      lowest: { pitch: highest.note.pitches[0].pitch },\n      highest: {\n        pitch: highest.note.pitches[highest.note.pitches.length - 1].pitch,\n      },\n    }).top;\n    \u6700\u77EDstem\u3068beam\u306E\u4EA4\u70B9y = { x, y };\n  } else {\n    if (beamed.length === 1) {\n      beamAngle = 0;\n    } else {\n      const pitchFirstLo = firstEl.pitches[0].pitch;\n      const pitchLastLo = lastEl.pitches[0].pitch;\n      const yFirst = pitchToY(dnp.topOfStaff, pitchFirstLo, dnp.scale);\n      const yLast = pitchToY(dnp.topOfStaff, pitchLastLo, dnp.scale);\n      const yDistance = yLast - yFirst;\n      if (pitchFirstLo > pitchLastLo) {\n        // \u53F3\u80A9\u4E0B\u304C\u308A\n        beamAngle =\n          (yDistance >= yDistance4th ? yDistance4th : yDistance) / stemDistance;\n      } else {\n        // \u53F3\u80A9\u4E0A\u304C\u308A\n        beamAngle =\n          (-yDistance >= yDistance4th ? -yDistance4th : yDistance) /\n          stemDistance;\n      }\n    }\n    // calc \u4EA4\u70B9\n    const beamedAndLeftOfStem = beamed.map((note, i) => ({\n      note,\n      leftOfStem: arr[i].left + arr[i].stemOffsetLeft,\n    }));\n    const lowest = beamedAndLeftOfStem.sort(\n      (a, b) => a.note.pitches[0].pitch - b.note.pitches[0].pitch\n    )[0];\n    const x = lowest.leftOfStem;\n    const y = calcStemShape({\n      dnp,\n      direction: stemDirection,\n      lowest: { pitch: lowest.note.pitches[0].pitch },\n      highest: {\n        pitch: lowest.note.pitches[lowest.note.pitches.length - 1].pitch,\n      },\n    }).bottom;\n    \u6700\u77EDstem\u3068beam\u306E\u4EA4\u70B9y = { x, y };\n  }\n\n  const { x, y } = \u6700\u77EDstem\u3068beam\u306E\u4EA4\u70B9y;\n  const \u5207\u7247 = -x * beamAngle + y;\n  return (stemX: number) => stemX * beamAngle + \u5207\u7247;\n};\n\nconst getBeamShape = ({\n  scale,\n  stemDirection,\n  firstStemLeft,\n  lastStemLeft,\n  stemLinearFunc,\n  offsetY = 0,\n}: {\n  scale: number;\n  stemDirection: \"up\" | \"down\";\n  firstStemLeft: number;\n  lastStemLeft: number;\n  stemLinearFunc: (stemX: number) => number;\n  offsetY?: number;\n}): { nw: Point; ne: Point; sw: Point; se: Point } => {\n  const beamHeight = UNIT * bBeamThickness * scale;\n  // first note\n  const firstStemEdge =\n    stemLinearFunc(firstStemLeft) +\n    (stemDirection === \"up\" ? offsetY : -offsetY);\n  const nw = {\n    x: firstStemLeft,\n    y: stemDirection === \"up\" ? firstStemEdge : firstStemEdge - beamHeight,\n  };\n  const sw = {\n    x: firstStemLeft,\n    y: stemDirection === \"up\" ? firstStemEdge + beamHeight : firstStemEdge,\n  };\n  // last note\n  const lastStemEdge =\n    stemLinearFunc(lastStemLeft) +\n    (stemDirection === \"up\" ? offsetY : -offsetY);\n  const ne = {\n    x: lastStemLeft,\n    y: stemDirection === \"up\" ? lastStemEdge : lastStemEdge - beamHeight,\n  };\n  const se = {\n    x: lastStemLeft,\n    y: stemDirection === \"up\" ? lastStemEdge + beamHeight : lastStemEdge,\n  };\n  return { nw, ne, se, sw };\n};\n\nconst sortPitch = (p: PitchAcc[], dir: \"asc\" | \"dsc\"): PitchAcc[] => {\n  const comparator = (a: PitchAcc, b: PitchAcc) => {\n    if (dir === \"asc\") {\n      return a.pitch < b.pitch;\n    } else {\n      return b.pitch < a.pitch;\n    }\n  };\n  return p.sort((a, b) => {\n    if (comparator(a, b)) {\n      return -1;\n    } else if (a.pitch === b.pitch) {\n      return 0;\n    } else {\n      return 1;\n    }\n  });\n};\n\nconst determineBeamedNotesStyle = (\n  beamedNotes: Note[],\n  duration: Duration,\n  elementGap: number,\n  startIdx: number\n): PaintElementStyle[] => {\n  const allBeamedPitches = beamedNotes\n    .flatMap((n) => n.pitches)\n    .map((p) => p.pitch);\n  const stemDirection = getStemDirection(allBeamedPitches);\n  const arr: { left: number; stemOffsetLeft: number }[] = [];\n  const elements: PaintElementStyle[] = [];\n  const gapEl: PaintElementStyle = {\n    element: { type: \"gap\" },\n    width: elementGap,\n  };\n  let left = 0;\n  let shouldExt = false;\n  for (const _i in beamedNotes) {\n    const i = Number(_i);\n    const noteStyle = determineNoteStyle({\n      note: beamedNotes[i],\n      stemDirection,\n      beamed: true,\n    });\n    arr.push({ left, stemOffsetLeft: noteStyle.stemOffsetLeft });\n    const caretOption = { index: i + startIdx };\n    elements.push({ caretOption, index: i + startIdx, ...noteStyle });\n    left += noteStyle.width;\n    elements.push({\n      caretOption: { ...caretOption, index: i + startIdx, defaultWidth: true },\n      ...gapEl,\n    });\n    left += elementGap;\n  }\n  const { beam: lastBeam } = beamedNotes[beamedNotes.length - 1];\n  if (lastBeam === \"continue\" || lastBeam === \"begin\") {\n    // \u3061\u3087\u3063\u3068beam\u3092\u4F38\u3070\u3057\u3066beam mode\u3067\u3042\u308B\u3053\u3068\u3092\u660E\u793A\n    shouldExt = true;\n  }\n  const firstStemLeft = arr[0].left + arr[0].stemOffsetLeft;\n  const lastStemLeft =\n    arr[arr.length - 1].left +\n    arr[arr.length - 1].stemOffsetLeft +\n    (shouldExt ? UNIT : 0);\n  const stemLinearFunc = getBeamLinearFunc({\n    dnp: { topOfStaff: 0, scale: 1, duration },\n    stemDirection,\n    beamed: beamedNotes,\n    arr: arr,\n  });\n  const beamed: PaintElementStyle[] = [];\n  for (let i = 0; i < (numOfBeamsMap.get(duration) ?? 0); i++) {\n    const offsetY = (UNIT * bBeamThickness + UNIT * bBeamSpacing) * i;\n    beamed.push({\n      element: {\n        type: \"beam\",\n        ...getBeamShape({\n          scale: 1,\n          stemDirection,\n          firstStemLeft,\n          lastStemLeft,\n          stemLinearFunc,\n          offsetY,\n        }),\n      },\n      width: lastStemLeft - firstStemLeft,\n    });\n  }\n  for (const i in beamedNotes) {\n    const { pitches } = beamedNotes[i];\n    const pitchAsc = sortPitch(pitches, \"asc\");\n    const edge = stemLinearFunc(arr[i].left + arr[i].stemOffsetLeft);\n    let beamed;\n    if (stemDirection === \"up\") {\n      beamed = { top: edge };\n    } else {\n      beamed = { bottom: edge };\n    }\n    // TODO note\u5074\u306Esection\u3068merge\u3057\u306A\u3044\u3068\u6B63\u3057\u3044width\u306B\u306A\u3089\u306A\u3044\n    // beam note\u3060\u3051gap\u304C\u72ED\u304F\u306A\u308A\u305D\u3046\u3002\n    const { elements: el } = determineStemFlagStyle({\n      left: arr[i].stemOffsetLeft,\n      duration,\n      direction: stemDirection,\n      lowest: pitchAsc[0],\n      highest: pitchAsc[pitchAsc.length - 1],\n      beamed,\n    });\n    // gap\u3092\u8003\u616E\u3057\u305Findex\n    const parent = elements[Number(i) * 2].element as NoteStyle;\n    parent.elements.push(...el);\n  }\n  return [...beamed, ...elements];\n};\n\nexport type PaintElementStyle = {\n  element: PaintElement;\n  width: number;\n  index?: number;\n  caretOption?: {\n    index: number;\n    defaultWidth?: boolean;\n  };\n  /**\n   * DrawElement\u56FA\u6709\u306Emtx\n   * \u88C5\u98FE\u97F3\u3068\u304B\u97F3\u90E8\u5909\u66F4\u8A18\u53F7\u3068\u304B\u306Fscale < 1\u306B\u3059\u308B\u4F7F\u3044\u65B9\n   * \u88C5\u98FE\u97F3\u306Fgap\u306B\u98DF\u3044\u8FBC\u3080\u3088\u3046\u306Btranslate\u3059\u308B\u3068\u304B\n   */\n  localMtx?: Matrix;\n};\n\nexport const determinePaintElementStyle = function* (\n  elements: MusicalElement[],\n  gapWidth: number,\n  headOpts?: { clef: Clef }\n): Generator<PaintElementStyle> {\n  const gapEl: PaintElementStyle = {\n    element: { type: \"gap\" },\n    width: gapWidth,\n  };\n  if (headOpts) {\n    yield gapEl;\n    if (headOpts.clef) {\n      yield {\n        element: {\n          type: \"clef\",\n          clef: headOpts.clef,\n        },\n        width: getPathWidth(bClefG),\n      };\n    }\n  }\n  const caretOption = { index: -1, defaultWidth: true };\n  yield { caretOption, ...gapEl };\n  let index = 0;\n  while (index < elements.length) {\n    const el = elements[index];\n    if (el.type === \"note\") {\n      if (el.beam === \"begin\") {\n        // \u9023\u6841\n        const beamedNotes: Note[] = [el];\n        let nextIdx = index + 1;\n        let nextEl = elements[nextIdx];\n        while (\n          nextEl?.type === \"note\" &&\n          (nextEl.beam === \"continue\" || nextEl.beam === \"end\")\n        ) {\n          beamedNotes.push(nextEl);\n          nextEl = elements[++nextIdx];\n        }\n        const beamedStyles = determineBeamedNotesStyle(\n          beamedNotes,\n          el.duration,\n          gapWidth,\n          index\n        );\n        for (const beamed of beamedStyles) {\n          yield beamed;\n        }\n        index += beamedNotes.length;\n      } else {\n        const note = determineNoteStyle({ note: el });\n        yield { caretOption: { index }, index: index, ...note };\n        yield { caretOption: { index, defaultWidth: true }, ...gapEl };\n        index++;\n      }\n    } else if (el.type === \"rest\") {\n      const rest = determineRestStyle(el);\n      yield { caretOption: { index }, index, ...rest };\n      yield { caretOption: { index, defaultWidth: true }, ...gapEl };\n      index++;\n    } else if (el.type === \"bar\") {\n      const bar = determineBarStyle(el);\n      yield { caretOption: { index }, index, ...bar };\n      yield { caretOption: { index, defaultWidth: true }, ...gapEl };\n      index++;\n    }\n  }\n};\n\nconst getPathWidth = (path: Path): number => {\n  return (path.bbox.ne.x - path.bbox.sw.x) * UNIT;\n};\n", "import {\n  bClefG,\n  bLedgerLineThickness,\n  bStaffHeight,\n  bStaffLineWidth,\n  bThinBarlineThickness,\n  Path,\n  UNIT,\n} from \"./bravura\";\nimport {\n  accidentalPathMap,\n  downFlagMap,\n  noteHeadByDuration,\n  restPathMap,\n  upFlagMap,\n} from \"./notation/notation\";\nimport {\n  BeamStyle,\n  CaretStyle,\n  PaintElementStyle,\n  NoteStyleElement,\n  pitchToY,\n  RestStyle,\n  BarStyle,\n} from \"./style\";\n\nexport const initCanvas = (\n  leftPx: number,\n  topPx: number,\n  width: number,\n  height: number,\n  _canvas?: HTMLCanvasElement\n): HTMLCanvasElement => {\n  const canvas = _canvas ?? document.createElement(\"canvas\");\n  canvas.style.position = \"absolute\";\n  canvas.style.top = `${topPx}px`;\n  canvas.style.left = `${leftPx}px`;\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n};\n\nconst paintBravuraPath = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  scale: number,\n  path: Path\n) => {\n  ctx.save();\n  ctx.rotate((Math.PI / 180) * 180); // \u3082\u3068\u306E\u30D1\u30B9\u306F\u56DE\u8EE2\u3057\u3066\u3044\u308B\n  ctx.translate(-left, -top); // \u56DE\u8EE2\u3057\u3066\u3044\u308B\u305F\u3081\u8CA0\u306E\u5024\n  ctx.scale(-scale, scale); // \u3082\u3068\u306E\u30D1\u30B9\u306F\u4E94\u7DDA\u306E\u9AD8\u3055\u30921000\u3068\u3057\u3066\u3044\u308B\u306E\u3067\u30B9\u30B1\u30FC\u30EB\u3059\u308B\n  ctx.fill(path.path2d);\n  ctx.restore();\n};\n\nconst paintGClef = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  topOfStaff: number\n) => {\n  const g = pitchToY(topOfStaff, 4, 1);\n  paintBravuraPath(ctx, left, g, 1, bClefG);\n};\n\nexport const paintStaff = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  scale: number\n) => {\n  const heightHead = UNIT * scale;\n  for (let i = 0; i < 5; i++) {\n    const y = top + heightHead * i;\n    ctx.save();\n    ctx.strokeStyle = \"#000\";\n    ctx.lineWidth = bStaffLineWidth * scale;\n    ctx.beginPath();\n    ctx.moveTo(left, y);\n    ctx.lineTo(left + width, y);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n};\n\n/**\n * \u5C0F\u7BC0\u7DDA\u63CF\u753B\n */\nconst paintBarline = (ctx: CanvasRenderingContext2D, element: BarStyle) => {\n  ctx.save();\n  ctx.strokeStyle = \"#000\";\n  ctx.lineWidth = element.lineWidth;\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(0, bStaffHeight);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n};\n\nconst paintNote = ({\n  ctx,\n  elements,\n}: {\n  ctx: CanvasRenderingContext2D;\n  elements: NoteStyleElement[];\n}) => {\n  for (const noteEl of elements) {\n    if (noteEl.type === \"head\") {\n      const { duration, position } = noteEl;\n      ctx.save();\n      ctx.translate(position.x, position.y);\n      const path = noteHeadByDuration(duration);\n      paintBravuraPath(ctx, 0, 0, 1, path);\n      ctx.restore();\n    } else if (noteEl.type === \"ledger\") {\n      const { width, position } = noteEl;\n      ctx.save();\n      ctx.translate(position.x, position.y);\n      ctx.strokeStyle = \"#000\";\n      ctx.lineWidth = bLedgerLineThickness;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(width, 0);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    } else if (noteEl.type === \"accidental\") {\n      const { position, accidental } = noteEl;\n      const path = accidentalPathMap.get(accidental)!;\n      ctx.save();\n      ctx.translate(position.x, position.y);\n      paintBravuraPath(ctx, 0, 0, 1, path);\n      ctx.restore();\n    } else if (noteEl.type === \"flag\") {\n      const { duration, direction, position } = noteEl;\n      const path =\n        direction === \"up\"\n          ? upFlagMap.get(duration)\n          : downFlagMap.get(duration);\n      if (path) {\n        paintBravuraPath(ctx, position.x, position.y, 1, path);\n      }\n    } else if (noteEl.type === \"stem\") {\n      const { top, bottom, center, width } = noteEl;\n      ctx.save();\n      ctx.translate(center, top);\n      ctx.strokeStyle = \"#000\";\n      ctx.lineWidth = width;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(0, bottom - top);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n};\n\nconst paintRest = ({\n  ctx,\n  element,\n}: {\n  ctx: CanvasRenderingContext2D;\n  element: RestStyle;\n}) => {\n  const { rest, position } = element;\n  const path = restPathMap.get(rest.duration)!;\n  ctx.save();\n  ctx.translate(position.x, position.y);\n  paintBravuraPath(ctx, 0, 0, 1, path);\n  ctx.restore();\n};\n\nconst paintBeam = (ctx: CanvasRenderingContext2D, beam: BeamStyle) => {\n  ctx.save();\n  ctx.fillStyle = \"#000\";\n  ctx.beginPath();\n  ctx.moveTo(beam.nw.x, beam.nw.y);\n  ctx.lineTo(beam.sw.x, beam.sw.y);\n  ctx.lineTo(beam.se.x, beam.se.y);\n  ctx.lineTo(beam.ne.x, beam.ne.y);\n  ctx.closePath();\n  ctx.fill();\n\n  ctx.restore();\n};\n\nexport const paintStyle = (\n  ctx: CanvasRenderingContext2D,\n  { element }: PaintElementStyle\n) => {\n  const { type } = element;\n  if (type === \"clef\") {\n    paintGClef(ctx, 0, 0);\n  } else if (type === \"note\") {\n    paintNote({ ctx, elements: element.elements });\n  } else if (type === \"rest\") {\n    paintRest({ ctx, element });\n  } else if (type === \"beam\") {\n    paintBeam(ctx, element);\n  } else if (type === \"bar\") {\n    paintBarline(ctx, element);\n  } else if (type === \"gap\") {\n    // no-op\n  }\n};\n\nexport const paintCaret = ({\n  ctx,\n  scale,\n  caret,\n}: {\n  ctx: CanvasRenderingContext2D;\n  scale: number;\n  caret: CaretStyle;\n}) => {\n  const { x, y, width } = caret;\n  const height = bStaffHeight * scale;\n  ctx.save();\n  ctx.fillStyle = \"#FF000055\";\n  ctx.fillRect(x, y, width, height);\n  ctx.restore();\n};\n\nexport const resetCanvas = ({\n  ctx,\n  width,\n  height,\n  fillStyle,\n}: {\n  ctx: CanvasRenderingContext2D;\n  width: number;\n  height: number;\n  fillStyle: string;\n}) => {\n  ctx.save();\n  ctx.fillStyle = fillStyle;\n  ctx.fillRect(0, 0, width, height);\n  ctx.restore();\n};\n", "import { PointerHandler } from \"./pointer-event\";\nimport { Point } from \"../geometry\";\nimport {\n  BarInputCallback,\n  CaretInputCallback,\n  ChangeBeamCallback,\n  ChangeNoteRestCallback,\n  NoteInputCallback,\n} from \"./callbacks\";\nimport { Duration } from \"../notation/types\";\n\nclass EmptyPointerHandler implements PointerHandler {\n  constructor() {}\n\n  onDown(ev: PointerEvent) {}\n\n  onUp(ev: PointerEvent, downPoint: Point) {}\n\n  onClick(ev: PointerEvent) {}\n\n  onLongDown(ev: PointerEvent) {}\n\n  onDrag(ev: PointerEvent, downPoint: Point) {}\n\n  onDoubleClick(ev: PointerEvent) {}\n}\n\nexport class KeyboardDragHandler extends EmptyPointerHandler {\n  private readonly translated: Point = { x: 0, y: 0 };\n\n  private readonly keyboardEl = document.getElementById(\n    \"keyboard\"\n  ) as HTMLDivElement;\n\n  constructor() {\n    super();\n  }\n\n  onUp(ev: PointerEvent, down: Point) {\n    this.translated.x += ev.x - down.x;\n    this.translated.y += ev.y - down.y;\n  }\n\n  onDrag(ev: PointerEvent, down: Point) {\n    const nextX = this.translated.x + ev.x - down.x;\n    const nextY = this.translated.y + ev.y - down.y;\n    this.keyboardEl.style.transform = `translate(${nextX}px, ${nextY}px)`;\n  }\n}\n\n// for screen capture\nexport class GrayPointerHandler extends EmptyPointerHandler {\n  private readonly translated: Point = { x: 0, y: 0 };\n\n  private readonly pointerEl = document.getElementById(\n    \"pointer\"\n  ) as HTMLDivElement;\n\n  constructor() {\n    super();\n  }\n\n  onDown(ev: PointerEvent) {\n    this.pointerEl.style.opacity = \"0.8\";\n    this.pointerEl.style.top = `${ev.y - 50 / 2}px`;\n    this.pointerEl.style.left = `${ev.x - 50 / 2}px`;\n  }\n\n  onUp(ev: PointerEvent, down: Point) {\n    this.pointerEl.style.opacity = \"0\";\n  }\n\n  onDrag(ev: PointerEvent, down: Point) {\n    this.pointerEl.style.top = `${ev.y - 50 / 2}px`;\n    this.pointerEl.style.left = `${ev.x - 50 / 2}px`;\n  }\n}\n\nexport class ChangeNoteRestHandler extends EmptyPointerHandler {\n  private changeButton = document.getElementsByClassName(\"changeNoteRest\")[0];\n\n  constructor(private callback: ChangeNoteRestCallback) {\n    super();\n  }\n\n  onUp() {\n    const isNote = this.callback.isNoteInputMode();\n    const next = isNote ? \"rest\" : \"note\";\n    this.changeButton.className = this.changeButton.className.replace(\n      isNote ? \"note\" : \"rest\",\n      next\n    );\n    this.callback.change();\n  }\n}\n\nexport class ChangeBeamHandler extends EmptyPointerHandler {\n  private changeButton = document.getElementsByClassName(\"changeBeam\")[0];\n\n  constructor(private callback: ChangeBeamCallback) {\n    super();\n  }\n\n  onUp() {\n    const mode = this.callback.getMode();\n    const next = mode === \"nobeam\" ? \"beam\" : \"nobeam\";\n    this.changeButton.className = this.changeButton.className.replace(\n      mode,\n      next\n    );\n    this.callback.change(next);\n  }\n\n  onDoubleClick(ev: PointerEvent) {\n    console.log(\"double\");\n  }\n}\n\nexport class KeyPressHandler extends EmptyPointerHandler {\n  private target: HTMLDivElement | undefined;\n\n  constructor() {\n    super();\n  }\n\n  onDown(ev: PointerEvent) {\n    this.target = ev.target as HTMLDivElement;\n    this.target.className += \" pressed\";\n  }\n\n  onUp() {\n    if (!this.target) {\n      return;\n    }\n    this.target.className = this.target.className.replace(\" pressed\", \"\");\n  }\n}\n\nexport class NoteInputHandler extends EmptyPointerHandler {\n  private readonly posToDurationMap = new Map<string, Duration>([\n    [\"12\", 1],\n    [\"13\", 2],\n    [\"14\", 4],\n    [\"22\", 8],\n    [\"23\", 16],\n    [\"24\", 32],\n  ]);\n  private targetClassNames: string[] = [];\n  private dragDy: number | undefined;\n\n  constructor(private callback: NoteInputCallback) {\n    super();\n  }\n\n  get duration(): Duration | undefined {\n    const pos = this.targetClassNames\n      .find((cn) => cn.match(/k[0-9][0-9]/))\n      ?.replace(\"k\", \"\");\n    if (!pos) {\n      return;\n    }\n    return this.posToDurationMap.get(pos);\n  }\n\n  private isBackspace(): boolean {\n    return this.targetClassNames.some((cn) => cn === \"backspace\");\n  }\n\n  onDown(ev: PointerEvent) {\n    const target = ev.target as HTMLDivElement;\n    this.targetClassNames = target.className.split(\" \");\n  }\n\n  onClick(ev: PointerEvent) {\n    if (this.duration) {\n      this.callback.commit(this.duration);\n    }\n    this.finish();\n  }\n\n  onLongDown(ev: PointerEvent) {\n    if (this.isBackspace()) {\n      return;\n    }\n    this.callback.startPreview(this.duration!, ev.x, ev.y);\n  }\n\n  onDrag(ev: PointerEvent, downPoint: Point) {\n    this.dragDy = downPoint.y - ev.y;\n    this.callback.updatePreview(this.duration!, this.dragDy);\n  }\n\n  onUp(ev: PointerEvent, downPoint: Point) {\n    if (this.isBackspace()) {\n      this.callback.backspace();\n    } else if (this.duration) {\n      this.callback.commit(this.duration, this.dragDy ?? 0);\n    }\n    this.finish();\n  }\n\n  finish() {\n    this.targetClassNames = [];\n    this.dragDy = undefined;\n    this.callback.finish();\n  }\n}\n\nexport class ArrowHandler extends EmptyPointerHandler {\n  constructor(private callback: CaretInputCallback) {\n    super();\n  }\n\n  onClick(ev: PointerEvent) {\n    const { className } = ev.target as HTMLDivElement;\n    if (className.match(/.*toLeft.*/)) {\n      this.callback.back();\n    } else if (className.match(/.*toRight.*/)) {\n      this.callback.forward();\n    }\n  }\n}\n\nexport class BarHandler extends EmptyPointerHandler {\n  constructor(private callback: BarInputCallback) {\n    super();\n  }\n\n  onClick(ev: PointerEvent) {\n    this.callback.bar();\n  }\n}\n", "import { PitchAcc } from \"./notation/types\";\n\nexport const sortPitches = (pitches: PitchAcc[]): PitchAcc[] => {\n  return pitches.sort((pa0, pa1) => {\n    // 0\u304C\u4F4E\u3051\u308C\u3070-1\u8FD4\u3059\n    if (pa0.pitch === pa1.pitch) {\n      if (\n        pa0.accidental === pa1.accidental ||\n        (!pa0.accidental && pa1.accidental === \"natural\") ||\n        (pa0.accidental === \"natural\" && !pa1.accidental)\n      ) {\n        return 0;\n      } else if (\n        (pa0.accidental === \"flat\" && pa1.accidental !== \"flat\") ||\n        ((pa0.accidental === \"natural\" || !pa0.accidental) &&\n          pa1.accidental === \"sharp\")\n      ) {\n        return -1;\n      } else {\n        return 1;\n      }\n    } else {\n      if (pa0.pitch < pa1.pitch) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n  });\n};\n", "import { registerPointerHandlers } from \"./ui/pointer-event\";\nimport {\n  initCanvas,\n  paintCaret,\n  paintStaff,\n  paintStyle,\n  resetCanvas,\n} from \"./paint\";\nimport {\n  ArrowHandler,\n  BarHandler,\n  ChangeBeamHandler,\n  ChangeNoteRestHandler,\n  GrayPointerHandler,\n  KeyboardDragHandler,\n  KeyPressHandler,\n  NoteInputHandler,\n} from \"./ui/pointer-handlers\";\nimport { bStaffHeight, UNIT } from \"./bravura\";\nimport {\n  Clef,\n  Duration,\n  durations,\n  MusicalElement,\n  Note,\n  Pitch,\n  Rest,\n} from \"./notation/types\";\nimport {\n  BarInputCallback,\n  CaretInputCallback,\n  ChangeBeamCallback,\n  ChangeNoteRestCallback,\n  NoteInputCallback,\n} from \"./ui/callbacks\";\nimport { sortPitches } from \"./pitch\";\nimport { CaretStyle, determinePaintElementStyle } from \"./style\";\n\nexport type BeamModes = \"beam\" | \"lock\" | \"nobeam\";\n\nconst scale = 0.08;\nconst previewScale = 0.08;\nconst leftOfStaff = 20;\nconst topOfStaff = 2000 * scale;\nconst defaultCaretWidth = 50;\n\nwindow.onload = () => {\n  const mainWidth = window.innerWidth;\n  const mainHeight = window.innerHeight;\n  const previewWidth = 300;\n  const previewHeight = 400;\n  const mainCanvas = document.getElementById(\"mainCanvas\") as HTMLCanvasElement;\n  const previewCanvas = document.getElementById(\n    \"previewCanvas\"\n  ) as HTMLCanvasElement;\n  const mainCtx = mainCanvas.getContext(\"2d\")!;\n  const previewCtx = previewCanvas.getContext(\"2d\")!;\n  const noteKeyEls = Array.from(document.getElementsByClassName(\"note\"));\n  let mainElements: MusicalElement[] = [];\n  let caretPositions: CaretStyle[] = [];\n  let caretIndex = 0;\n  let isNoteInputMode = true;\n  let beamMode: BeamModes = \"nobeam\";\n  let lastEditedIdx: number;\n  const updateMain = () => {\n    console.log(\"main\", \"start\");\n    resetCanvas({\n      ctx: mainCtx,\n      width: mainWidth,\n      height: mainHeight,\n      fillStyle: \"#fff\",\n    });\n    const clef: Clef = { type: \"g\" };\n    let cursor = 0;\n    caretPositions = [];\n    mainCtx.save();\n    mainCtx.translate(leftOfStaff, topOfStaff);\n    mainCtx.scale(scale, scale);\n    paintStaff(mainCtx, 0, 0, UNIT * 100, 1);\n    const styles = determinePaintElementStyle(mainElements, UNIT, { clef });\n    for (const style of styles) {\n      console.log(\"style\", style);\n      const { width, element, caretOption } = style;\n      paintStyle(mainCtx, style);\n      if (caretOption) {\n        const { index: elIdx, defaultWidth } = caretOption;\n        const caretWidth = defaultWidth ? defaultCaretWidth : width;\n        caretPositions.push({\n          x: cursor + (defaultWidth ? width / 2 : 0),\n          y: 0,\n          width: caretWidth,\n          elIdx,\n        });\n      }\n      if (element.type !== \"beam\") {\n        cursor += width;\n        mainCtx.translate(width, 0);\n      }\n    }\n    mainCtx.restore();\n    console.log(\"carets\", caretPositions);\n    console.log(\"current caret\", caretPositions[caretIndex]);\n    mainCtx.save();\n    mainCtx.translate(leftOfStaff, topOfStaff);\n    mainCtx.scale(scale, scale);\n    if (caretPositions[caretIndex]) {\n      paintCaret({\n        ctx: mainCtx,\n        scale: 1,\n        caret: caretPositions[caretIndex],\n      });\n    }\n    mainCtx.restore();\n    console.log(\"main\", \"end\");\n  };\n  const updatePreview = (beamMode: BeamModes, newElement: MusicalElement) => {\n    console.log(\"preview\", \"start\");\n    resetCanvas({\n      ctx: previewCtx,\n      width: previewWidth,\n      height: previewHeight,\n      fillStyle: \"#fff\",\n    });\n    const { elements: preview, insertedIndex } = inputMusicalElement({\n      caretIndex,\n      elements: mainElements,\n      newElement,\n      beamMode,\n    });\n    console.log(\"insertedIdx\", insertedIndex);\n    console.log(\"preview\", preview);\n    // B4\u304Ccanvas\u306Evertical center\u306B\u304F\u308B\u3088\u3046\u306B\n    const _topOfStaff = previewHeight / 2 - (bStaffHeight * previewScale) / 2;\n    const styles = [...determinePaintElementStyle(preview, UNIT)];\n    const elIdxToX = new Map<number, number>();\n    let cursor = 0;\n    for (const style of styles) {\n      const { width, element, index } = style;\n      console.log(\"style\", style);\n      if (index !== undefined) {\n        elIdxToX.set(index, cursor + width / 2);\n      }\n      if (element.type !== \"beam\") {\n        cursor += width;\n      }\n    }\n\n    console.log(\"elIdxToX\", elIdxToX);\n\n    // paint staff\n    previewCtx.save();\n    // x: \u5DE6\u7AEF y: \u4E2D\u5FC3\n    previewCtx.translate(0, _topOfStaff);\n    previewCtx.scale(previewScale, previewScale);\n    paintStaff(previewCtx, 0, 0, UNIT * 100, 1);\n    previewCtx.restore();\n\n    // paint elements\n    previewCtx.save();\n    // x: \u4E2D\u5FC3, y: \u4E2D\u5FC3\n    previewCtx.translate(previewWidth / 2, _topOfStaff);\n    previewCtx.scale(previewScale, previewScale);\n    // x: preview\u306E\u4E2D\u5FC3\n    const centerX = elIdxToX.get(insertedIndex)!;\n    console.log(\"centerX\", centerX);\n    previewCtx.translate(-centerX, 0);\n    for (const style of styles) {\n      const { width, element } = style;\n      paintStyle(previewCtx, style);\n      if (element.type !== \"beam\") {\n        previewCtx.translate(width, 0);\n      }\n    }\n    previewCtx.restore();\n    console.log(\"preview\", \"end\");\n  };\n\n  const changeNoteRestCallback: ChangeNoteRestCallback = {\n    isNoteInputMode() {\n      return isNoteInputMode;\n    },\n    change() {\n      noteKeyEls.forEach((el) => {\n        el.className = el.className.replace(\n          this.isNoteInputMode() ? \"note\" : \"rest\",\n          this.isNoteInputMode() ? \"rest\" : \"note\"\n        );\n      });\n      isNoteInputMode = !isNoteInputMode;\n    },\n  };\n  const changeBeamCallback: ChangeBeamCallback = {\n    getMode() {\n      return beamMode;\n    },\n    change(mode) {\n      noteKeyEls.forEach((el) => {\n        el.className = el.className.replace(\n          mode === \"nobeam\" ? \"beamed\" : \"nobeam\",\n          mode === \"nobeam\" ? \"nobeam\" : \"beamed\"\n        );\n      });\n      beamMode = mode;\n      const lastEl = mainElements[lastEditedIdx];\n      if (lastEl) {\n        const left = mainElements[lastEditedIdx - 1];\n        const right = mainElements[lastEditedIdx + 1];\n        applyBeamForLastEdited(lastEl, left, right);\n        updateMain();\n      }\n    },\n  };\n  const noteInputCallback: NoteInputCallback = {\n    startPreview(duration: Duration, downX: number, downY: number) {\n      const left = downX - previewWidth / 2;\n      const top = downY - previewHeight / 2;\n      initCanvas(left, top, previewWidth, previewHeight, previewCanvas);\n      const element: MusicalElement = isNoteInputMode\n        ? {\n            type: \"note\",\n            duration,\n            pitches: [{ pitch: pitchByDistance(previewScale, 0, 6) }],\n          }\n        : {\n            type: \"rest\",\n            duration,\n          };\n      if (caretIndex > 0 && caretIndex % 2 !== 0) {\n        const oldIdx = caretIndex === 1 ? 0 : (caretIndex - 1) / 2;\n        const oldEl = mainElements[oldIdx];\n        if (\n          element.type === \"note\" &&\n          oldEl.type === \"note\" &&\n          element.duration === oldEl.duration\n        ) {\n          element.pitches = sortPitches([...oldEl.pitches, ...element.pitches]);\n        }\n      }\n      updatePreview(beamMode, element);\n      previewCanvas.style.visibility = \"visible\";\n    },\n    updatePreview(duration: Duration, dy: number) {\n      const element: MusicalElement = isNoteInputMode\n        ? {\n            type: \"note\",\n            duration,\n            pitches: [{ pitch: pitchByDistance(previewScale, dy, 6) }],\n          }\n        : {\n            type: \"rest\",\n            duration,\n          };\n      if (caretIndex > 0 && caretIndex % 2 !== 0) {\n        const oldIdx = caretIndex === 1 ? 0 : (caretIndex - 1) / 2;\n        const oldEl = mainElements[oldIdx];\n        if (\n          element.type === \"note\" &&\n          oldEl.type === \"note\" &&\n          element.duration === oldEl.duration\n        ) {\n          element.pitches = sortPitches([...oldEl.pitches, ...element.pitches]);\n        }\n      }\n      updatePreview(beamMode, element);\n    },\n    commit(duration: Duration, dy?: number) {\n      let newElement: MusicalElement;\n      if (isNoteInputMode) {\n        newElement = {\n          type: \"note\",\n          duration,\n          pitches: [{ pitch: pitchByDistance(previewScale, dy ?? 0, 6) }],\n        };\n      } else {\n        newElement = {\n          type: \"rest\",\n          duration,\n        };\n      }\n      const { elements, insertedIndex, caretAdvance } = inputMusicalElement({\n        caretIndex,\n        elements: mainElements,\n        newElement,\n        beamMode,\n      });\n      lastEditedIdx = insertedIndex;\n      caretIndex += caretAdvance;\n      mainElements = elements;\n      updateMain();\n    },\n    backspace() {\n      const targetElIdx = caretPositions[caretIndex].elIdx;\n      if (targetElIdx < 0) {\n        return;\n      }\n      const deleted = mainElements.splice(targetElIdx, 1)[0];\n      if (deleted.type === \"note\") {\n        const left = mainElements[targetElIdx - 1];\n        const right = mainElements[targetElIdx];\n        if (deleted.beam === \"begin\" && right) {\n          (right as Note).beam = \"begin\";\n        } else if (deleted.beam === \"end\" && left) {\n          (left as Note).beam = \"end\";\n        }\n      }\n\n      // \u524A\u9664\u5F8C\u306Ecaret\u4F4D\u7F6E\u3092\u8A08\u7B97\n      let t = caretIndex - 1;\n      while (t > -1) {\n        if (t === 0) {\n          caretIndex = 0;\n          t = -1;\n        } else if (caretPositions[t].elIdx !== targetElIdx) {\n          caretIndex = t;\n          t = -1;\n        } else {\n          t--;\n        }\n      }\n\n      updateMain();\n    },\n    finish() {\n      previewCanvas.style.visibility = \"hidden\";\n    },\n  };\n\n  const caretMoveCallback: CaretInputCallback = {\n    back() {\n      if (caretIndex % 2 !== 0) {\n        const idx = caretIndex === 1 ? 0 : (caretIndex - 1) / 2;\n        if (idx === lastEditedIdx) {\n          const lastEl = mainElements[lastEditedIdx];\n          const left = mainElements[idx - 1];\n          const right = mainElements[idx + 1];\n          applyBeamForLastEdited(lastEl, left, right);\n        }\n      }\n      caretIndex = Math.max(caretIndex - 1, 0);\n      updateMain();\n    },\n    forward() {\n      if (caretIndex % 2 === 0) {\n        const idx = caretIndex / 2 - 1;\n        if (idx === lastEditedIdx) {\n          const lastEl = mainElements[lastEditedIdx];\n          const left = mainElements[idx - 1];\n          const right = mainElements[idx + 1];\n          applyBeamForLastEdited(lastEl, left, right);\n        }\n      }\n      caretIndex = Math.min(caretIndex + 1, caretPositions.length - 1);\n      updateMain();\n    },\n  };\n\n  const barInputCallback: BarInputCallback = {\n    bar() {\n      const { elements, insertedIndex, caretAdvance } = inputMusicalElement({\n        caretIndex,\n        elements: mainElements,\n        newElement: { type: \"bar\" },\n        beamMode,\n      });\n      lastEditedIdx = insertedIndex;\n      caretIndex += caretAdvance;\n      mainElements = elements;\n      updateMain();\n    },\n  };\n\n  // for tablet\n  registerPointerHandlers(\n    [\"keyboardBottom\", \"keyboardHandle\"],\n    [new KeyboardDragHandler()]\n  );\n  registerPointerHandlers(\n    [\"changeNoteRest\"],\n    [new ChangeNoteRestHandler(changeNoteRestCallback)]\n  );\n  registerPointerHandlers(\n    [\"changeBeam\"],\n    [new ChangeBeamHandler(changeBeamCallback)]\n  );\n  registerPointerHandlers([\"grayKey\", \"whiteKey\"], [new KeyPressHandler()]);\n  registerPointerHandlers(\n    [\"note\", \"rest\", \"backspace\"],\n    [new NoteInputHandler(noteInputCallback)]\n  );\n  registerPointerHandlers(\n    [\"toLeft\", \"toRight\"],\n    [new ArrowHandler(caretMoveCallback)]\n  );\n  // for screen capture\n  registerPointerHandlers([], [new GrayPointerHandler()]);\n  registerPointerHandlers([\"bars\"], [new BarHandler(barInputCallback)]);\n\n  initCanvas(0, 0, window.innerWidth, window.innerHeight, mainCanvas);\n  initCanvas(0, 0, previewWidth, previewHeight, previewCanvas);\n  updateMain();\n};\n\n/**\n * algorithm: https://gyazo.com/09cdc43aa31b8dc2cb487556dac039c2\n * @param beamMode\n * @param insert\n * @param left\n * @param right\n */\nfunction applyBeam(\n  beamMode: BeamModes,\n  insert: MusicalElement,\n  left?: MusicalElement,\n  right?: MusicalElement\n): void {\n  if (insert.type === \"note\" && beamMode !== \"nobeam\") {\n    // beam\u3092\u633F\u5165\n    if (\n      left?.type === \"note\" &&\n      right?.type === \"note\" &&\n      left.beam &&\n      right.beam\n    ) {\n      // beam\u306B\u56F2\u307E\u308C\u308B\n      if (left.beam === \"begin\") {\n        if (right.beam === \"begin\") {\n          insert.beam = \"continue\";\n          right.beam = \"continue\";\n        } else {\n          insert.beam = \"continue\";\n        }\n      } else if (left.beam === \"continue\") {\n        if (right.beam === \"begin\") {\n          insert.beam = \"end\";\n        } else {\n          insert.beam = \"continue\";\n        }\n      }\n    } else {\n      insert.beam = \"begin\";\n      if (\n        left?.type === \"note\" &&\n        (left?.beam === \"begin\" || left?.beam === \"continue\")\n      ) {\n        insert.beam = \"continue\";\n      }\n      if (right?.type === \"note\" && right?.beam === \"begin\") {\n        right.beam = \"continue\";\n      }\n    }\n  } else {\n    // no beam or rest\u3092\u633F\u5165\n    if (right?.type === \"note\") {\n      if (right?.beam === \"continue\") {\n        right.beam = \"begin\";\n      } else if (right?.beam === \"end\") {\n        delete right.beam;\n      }\n    }\n    if (left?.type === \"note\") {\n      if (left?.beam === \"begin\") {\n        delete left.beam;\n      } else if (left?.beam === \"continue\") {\n        left.beam = \"end\";\n      }\n    }\n  }\n}\n\nfunction applyBeamForLastEdited(\n  last: MusicalElement,\n  left?: MusicalElement,\n  right?: MusicalElement\n) {\n  if (\n    last.type === \"note\" &&\n    (last.beam === \"begin\" || last.beam === \"continue\")\n  ) {\n    if (\n      !right ||\n      (right?.type === \"note\" && (!right?.beam || right?.beam === \"begin\"))\n    ) {\n      if (\n        left?.type === \"note\" &&\n        (left?.beam === \"begin\" || left?.beam === \"continue\")\n      ) {\n        last.beam = \"end\";\n      } else {\n        delete last.beam;\n      }\n    }\n  }\n}\n\nfunction inputMusicalElement({\n  caretIndex,\n  elements,\n  newElement,\n  beamMode,\n}: {\n  caretIndex: number;\n  elements: MusicalElement[];\n  newElement: MusicalElement;\n  beamMode: BeamModes;\n}) {\n  const _elements = [...elements];\n  let insertedIndex = 0;\n  let caretAdvance = 0;\n  if (caretIndex === 0) {\n    const right = _elements[caretIndex]; // \u307E\u3060\u633F\u5165\u3057\u3066\u306A\u3044\u306E\u3067caretIdx\u3068\u540C\u3058\n    applyBeam(beamMode, newElement, undefined, right);\n    _elements.splice(caretIndex, 0, newElement);\n    caretAdvance = 2;\n  } else {\n    if (caretIndex % 2 === 0) {\n      // \u633F\u5165\n      const insertIdx = caretIndex / 2;\n      const left = _elements[insertIdx - 1];\n      const right = _elements[insertIdx]; // \u307E\u3060\u633F\u5165\u3057\u3066\u306A\u3044\u306E\u3067insertIdx\u3068\u540C\u3058\n      console.log(\"insertIdx\", insertIdx, \"left\", left, \"right\", right);\n      applyBeam(beamMode, newElement, left, right);\n      _elements.splice(insertIdx, 0, newElement);\n      caretAdvance = 2;\n      insertedIndex = insertIdx;\n    } else {\n      // \u4E0A\u66F8\u304D\n      const overrideIdx = caretIndex === 1 ? 0 : (caretIndex - 1) / 2;\n      const overrideEl = _elements[overrideIdx];\n      if (\n        newElement.type === \"note\" &&\n        overrideEl.type === \"note\" &&\n        newElement.duration === overrideEl.duration\n      ) {\n        newElement.pitches = sortPitches([\n          ...overrideEl.pitches,\n          ...newElement.pitches,\n        ]);\n      }\n      const left = _elements[overrideIdx - 1];\n      const right = _elements[overrideIdx + 1];\n      applyBeam(beamMode, newElement, left, right);\n      _elements.splice(overrideIdx, 1, newElement);\n      insertedIndex = overrideIdx;\n    }\n  }\n  return { elements: _elements, insertedIndex, caretAdvance };\n}\n\nconst pitchByDistance = (scale: number, dy: number, origin: Pitch): Pitch => {\n  const unitY = (UNIT / 2) * scale;\n  return Math.round(dy / unitY + origin);\n};\n\nconst durationByDistance = (\n  scale: number,\n  dx: number,\n  origin: Duration\n): Duration => {\n  const unitX = UNIT * 2 * scale;\n  const _di = Math.round(dx / unitX + durations.indexOf(origin));\n  const di = Math.min(Math.max(_di, 0), 6);\n  return durations[di];\n};\n"],
  "mappings": "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",
  "names": []
}
